{
  "featureName": "GetPostsData",
  "description": "Retrieves data for specified post IDs from the system.",
  "inputValues": [
    "postIds-number-Post"
  ],
  "businessLogic": "1. Input Collection\n   1.1. Collect the array of post IDs to retrieve\n       1.1.1. Verify that post IDs are provided as integers\n       1.1.2. Check if the array is not empty\n\n2. Data Validation\n   2.1. Validate post IDs\n       2.1.1. Check if each post ID is a positive integer\n       2.1.2. IF any post ID is invalid THEN prepare error message\n       2.1.3. Check if the number of post IDs doesn't exceed system limits\n       2.1.4. IF too many post IDs are requested THEN prepare error message about exceeding limit\n\n3. Business Rule Processing\n   3.1. Check user permissions\n       3.1.1. Verify if the current user has permission to access the requested posts\n       3.1.2. IF user lacks permission THEN prepare access denied error\n   3.2. Check system state\n       3.2.1. Verify if the system is in a state that allows data retrieval\n       3.2.2. IF system is in maintenance mode THEN prepare system unavailable error\n\n4. Core Operation Execution\n   4.1. Prepare data retrieval operation\n       4.1.1. Format the post IDs for efficient retrieval\n       4.1.2. Determine which data fields need to be retrieved\n   4.2. Retrieve post data\n       4.2.1. Access the posts repository\n       4.2.2. Fetch post records matching the provided IDs\n       4.2.3. IF any post is not found THEN note the missing posts\n   4.3. Process retrieved data\n       4.3.1. Format each post's content according to system requirements\n       4.3.2. Filter out any sensitive information based on user permissions\n       4.3.3. Sort posts in the requested order if specified\n       4.3.4. Enrich posts with additional information like username\n\n5. Response Generation\n   5.1. Prepare success response\n       5.1.1. Format the retrieved post data into the expected structure\n       5.1.2. Include metadata about the retrieval (total count, missing posts, etc.)\n       5.1.3. Return a collection of post objects with complete information\n   5.2. Handle error cases\n       5.2.1. IF no posts were found THEN return empty result with appropriate message\n       5.2.2. IF some posts were not found THEN include partial results with warning\n       5.2.3. IF critical error occurred THEN return error message with support information",
  "databaseEntities": [
    "jforum_posts",
    "jforum_posts_text",
    "jforum_users",
    "jforum_topics",
    "jforum_forums"
  ],
  "validationRules": [
    "Post IDs must be positive integers",
    "Post IDs array must not be empty",
    "Number of requested post IDs must not exceed system limit",
    "User must have permission to access the requested posts"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "Post": {
      "id": "number",
      "topicId": "number",
      "forumId": "number",
      "userId": "number",
      "postTime": "date",
      "postSubject": "string",
      "postText": "string",
      "postUsername": "string",
      "bbCodeEnabled": "boolean",
      "smiliesEnabled": "boolean",
      "attachments": "object[]"
    }
  }
}