{
  "featureName": "BuildModerationLogFromRequest",
  "description": "Creates moderation log entries from request parameters.",
  "inputValues": [
    "request-object-RequestContext",
    "log_description-string-ModerationLog",
    "log_original_message-string-ModerationLog",
    "log_type-number-ModerationLog",
    "post_id-number-ModerationLog",
    "topic_id-string-ModerationLog",
    "user_session-object-UserSession"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect the following inputs:\n     1.1. Current user session (mandatory, system-generated)\n     1.2. Log description (mandatory, string)\n     1.3. Original message (mandatory, string)\n     1.4. Log type (mandatory, number)\n     1.5. Post ID (optional, number)\n     1.6. Topic ID (optional, string array)\n\n2. Data Validation:\n   2.1. Validate user session:\n      - IF user session is null or invalid THEN\n        - Return error: \"Invalid user session\"\n      - END IF\n   2.2. Validate log description:\n      - IF log description is empty or null THEN\n        - Return error: \"Log description is required\"\n      - END IF\n   2.3. Validate log type:\n      - IF log type is not a valid moderation action type THEN\n        - Return error: \"Invalid moderation log type\"\n      - END IF\n\n3. Business Rule Processing:\n   3.1. Check if topic ID is provided as an array:\n      - IF topic_id parameter contains multiple values THEN\n        - Process as an array of topic IDs\n      - ELSE IF topic_id parameter contains a single value THEN\n        - Process as a single topic ID\n      - END IF\n   3.2. Check if post ID is provided:\n      - IF post_id parameter is present THEN\n        - Validate post ID exists\n      - END IF\n\n4. Core Operation Execution:\n   4.1. Create a new moderation log entry:\n      - Initialize a new moderation log object\n   4.2. Set the user information:\n      - Extract user ID from current session\n      - Create a user object with the ID\n      - Associate user with the moderation log\n   4.3. Set log details:\n      - Set description from request parameter\n      - Set original message from request parameter\n      - Set log type from request parameter\n   4.4. Set related content IDs:\n      - IF post ID is provided THEN\n        - Set post ID in the log\n      - END IF\n      - IF topic ID array has exactly one value THEN\n        - Set topic ID in the log\n      - END IF\n\n5. Response Generation:\n   5.1. Return the populated moderation log object:\n      - Include all set properties (user, description, original message, type, post ID, topic ID)\n   5.2. In case of validation errors:\n      - Return appropriate error message\n      - Include information about which validation failed",
  "databaseEntities": [
    "jforum_users",
    "jforum_topics",
    "jforum_posts"
  ],
  "validationRules": [
    "User session must be valid",
    "Log description must not be empty",
    "Log type must be a valid moderation action type",
    "Post ID must be valid if provided",
    "Topic ID must be valid if provided"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "RequestContext": {
      "properties": {
        "parameter": {
          "type": "function",
          "description": "Gets a string parameter value by name"
        },
        "intParameter": {
          "type": "function",
          "description": "Gets an integer parameter value by name"
        },
        "parameterValues": {
          "type": "function",
          "description": "Gets an array of string parameter values by name"
        }
      }
    },
    "UserSession": {
      "properties": {
        "userId": {
          "type": "number",
          "description": "ID of the current user"
        }
      }
    },
    "ModerationLog": {
      "properties": {
        "user": {
          "type": "object",
          "description": "User who performed the moderation action"
        },
        "description": {
          "type": "string",
          "description": "Description of the moderation action"
        },
        "originalMessage": {
          "type": "string",
          "description": "Original message content before moderation"
        },
        "type": {
          "type": "number",
          "description": "Type of moderation action performed"
        },
        "postId": {
          "type": "number",
          "description": "ID of the post being moderated"
        },
        "topicId": {
          "type": "number",
          "description": "ID of the topic being moderated"
        },
        "posterUser": {
          "type": "object",
          "description": "User who created the original content"
        }
      }
    }
  }
}