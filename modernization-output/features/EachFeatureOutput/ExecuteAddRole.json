{
  "featureName": "ExecuteAddRole",
  "description": "Executes role addition for users or groups with associated role values.",
  "inputValues": [
    "id-number-Entity",
    "role-object-Role",
    "roleValues-object-RoleValueCollection",
    "supportAutoGeneratedKeys-boolean-System",
    "sql-string-System",
    "autoKeysQuery-string-System"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect the following inputs:\n     a. id (number, mandatory): The identifier for the user or group to assign the role to\n     b. role (object, mandatory): The role to be assigned\n     c. roleValues (object, optional): Collection of values associated with the role\n     d. supportAutoGeneratedKeys (boolean, mandatory): Flag indicating if auto-generated keys are supported\n     e. sql (string, mandatory): SQL statement for role insertion\n     f. autoKeysQuery (string, mandatory): Query to retrieve generated keys if not supported automatically\n\n2. Data Validation:\n   - Validate the id:\n     a. IF id is null or less than 1 THEN\n        i. Generate error message: \"Invalid entity ID provided\"\n     b. ENDIF\n   - Validate the role object:\n     a. IF role is null THEN\n        i. Generate error message: \"Role object cannot be null\"\n     b. ENDIF\n     c. IF role.name is null or empty THEN\n        i. Generate error message: \"Role name cannot be empty\"\n     d. ENDIF\n   - Validate SQL statements:\n     a. IF sql is null or empty THEN\n        i. Generate error message: \"SQL statement for role insertion cannot be empty\"\n     b. ENDIF\n     c. IF supportAutoGeneratedKeys is false AND autoKeysQuery is null or empty THEN\n        i. Generate error message: \"Auto keys query must be provided when auto-generated keys are not supported\"\n     d. ENDIF\n\n3. Business Rule Processing:\n   - Verify database connection:\n     a. IF database connection is not available THEN\n        i. Generate error message: \"Database connection is not available\"\n        ii. Abort operation\n     b. ENDIF\n   - Check for role name uniqueness for the entity:\n     a. IF role with same name already exists for this entity THEN\n        i. Determine if this is an update or duplicate based on business rules\n        ii. IF duplicate is not allowed THEN\n           1. Generate error message: \"Role already exists for this entity\"\n           2. Abort operation\n        iii. ENDIF\n     b. ENDIF\n\n4. Core Operation Execution:\n   - Prepare database statement:\n     a. IF supportAutoGeneratedKeys is true THEN\n        i. Create statement with RETURN_GENERATED_KEYS flag\n     b. ELSE\n        i. Create regular statement\n     c. ENDIF\n   - Execute role insertion:\n     a. Set parameters in prepared statement:\n        i. Set entity ID parameter\n        ii. Set role name parameter\n     b. Execute the statement\n     c. IF execution fails THEN\n        i. Generate error message: \"Failed to insert role record\"\n        ii. Abort operation and rollback if needed\n     d. ENDIF\n   - Process role values if provided:\n     a. IF roleValues is not null THEN\n        i. Retrieve the generated role ID:\n           1. IF supportAutoGeneratedKeys is true THEN\n              a. Get ID from generated keys\n           2. ELSE\n              a. Execute autoKeysQuery to retrieve the ID\n           3. ENDIF\n        ii. IF role ID could not be obtained THEN\n           1. Generate error message: \"Could not obtain the latest role ID\"\n           2. Abort operation and rollback if needed\n        iii. ENDIF\n        iv. FOR EACH value in roleValues:\n           1. Insert role value record linking it to the role ID\n           2. IF any insertion fails THEN\n              a. Generate error message: \"Failed to insert role value\"\n              b. Abort operation and rollback if needed\n           3. ENDIF\n        v. ENDFOR\n     b. ENDIF\n   - Ensure all resources are properly closed\n\n5. Response Generation:\n   - On successful completion:\n     a. Generate success response with:\n        i. Status indicator showing success\n        ii. Role ID that was created or updated\n        iii. Summary of role values added (if any)\n   - On failure:\n     a. Generate error response with:\n        i. Status indicator showing failure\n        ii. Detailed error message\n        iii. Error code if applicable\n        iv. Suggestions for resolution if possible",
  "databaseEntities": [
    "jforum_users",
    "jforum_groups",
    "jforum_user_groups"
  ],
  "validationRules": [
    "Entity ID must be a positive integer",
    "Role name must not be empty",
    "SQL statement must be provided",
    "Auto keys query must be provided when auto-generated keys are not supported",
    "Database connection must be available",
    "Role values must be valid if provided"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "Role": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the role"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/RoleValue"
          },
          "description": "Collection of values associated with this role"
        }
      },
      "required": [
        "name"
      ]
    },
    "RoleValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value associated with a role"
        }
      },
      "required": [
        "value"
      ]
    },
    "RoleValueCollection": {
      "type": "array",
      "items": {
        "$ref": "#/RoleValue"
      },
      "description": "Collection of role values"
    }
  }
}