{
  "featureName": "ListPOPMessages",
  "description": "Retrieves email messages from a POP server.",
  "inputValues": [
    "serverSettings-object-POPServerSettings"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect serverSettings (mandatory) containing POP server connection details\n     1.1. Server hostname (mandatory)\n     1.2. Port number (mandatory)\n     1.3. Username (mandatory)\n     1.4. Password (mandatory)\n     1.5. Use SSL connection flag (optional, default: false)\n     1.6. Connection timeout in seconds (optional, default: 60)\n\n2. Data Validation:\n   - Validate server connection parameters\n     2.1. Verify hostname is not empty\n         IF hostname is empty THEN\n             Return error: \"Server hostname cannot be empty\"\n     2.2. Verify port number is valid\n         IF port number is not between 1 and 65535 THEN\n             Return error: \"Invalid port number\"\n     2.3. Verify username is not empty\n         IF username is empty THEN\n             Return error: \"Username cannot be empty\"\n     2.4. Verify password is not empty\n         IF password is empty THEN\n             Return error: \"Password cannot be empty\"\n     2.5. Verify timeout value is reasonable\n         IF timeout is less than 5 or greater than 300 seconds THEN\n             Return error: \"Timeout must be between 5 and 300 seconds\"\n\n3. Business Rule Processing:\n   - Prepare for server connection\n     3.1. Check system readiness for external connections\n         IF system is in maintenance mode THEN\n             Return error: \"System is in maintenance mode. Try again later.\"\n     3.2. Verify maximum connection limits\n         IF current active connections exceed system limit THEN\n             Return error: \"Maximum connection limit reached. Try again later.\"\n     3.3. Check user permissions\n         IF current user does not have permission to access mail features THEN\n             Return error: \"Insufficient permissions to access mail server\"\n\n4. Core Operation Execution:\n   - Connect to POP server and retrieve messages\n     4.1. Establish connection to POP server\n         4.1.1. Initialize connection using server settings\n         4.1.2. Apply timeout settings\n         4.1.3. Apply SSL settings if enabled\n     4.2. Authenticate with server\n         4.2.1. Send username to server\n         4.2.2. Send password to server\n         4.2.3. Verify authentication success\n             IF authentication fails THEN\n                 Return error: \"Authentication failed. Check username and password.\"\n     4.3. Retrieve message list\n         4.3.1. Request message headers from server\n         4.3.2. Create message objects for each email\n         4.3.3. Store message metadata (subject, sender, date, size)\n     4.4. Close connection to POP server\n         4.4.1. Send logout command\n         4.4.2. Release connection resources\n\n5. Response Generation:\n   - Prepare message list for display\n     5.1. Format message data for presentation\n         5.1.1. Extract relevant fields (From, Subject, Date, Size)\n         5.1.2. Sort messages by date (newest first)\n     5.2. Generate success response\n         5.2.1. Include total message count\n         5.2.2. Include formatted message list\n         5.2.3. Include connection statistics (time taken)\n     5.3. Handle empty mailbox case\n         IF no messages found THEN\n             Return success with empty list and notification: \"No messages found\"\n     5.4. Return formatted message list to caller",
  "databaseEntities": [
    "jforum_privmsgs",
    "jforum_privmsgs_text",
    "jforum_users"
  ],
  "validationRules": [
    "Server hostname must not be empty",
    "Port number must be between 1 and 65535",
    "Username must not be empty",
    "Password must not be empty",
    "Connection timeout must be between 5 and 300 seconds",
    "User must have permission to access mail features"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "POPServerSettings": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "POP server hostname"
        },
        "port": {
          "type": "number",
          "description": "POP server port number"
        },
        "username": {
          "type": "string",
          "description": "Authentication username"
        },
        "password": {
          "type": "string",
          "description": "Authentication password"
        },
        "useSSL": {
          "type": "boolean",
          "description": "Whether to use SSL for connection"
        },
        "timeout": {
          "type": "number",
          "description": "Connection timeout in seconds"
        }
      },
      "required": [
        "hostname",
        "port",
        "username",
        "password"
      ]
    }
  }
}