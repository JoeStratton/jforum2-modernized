{
  "featureName": "SelectTopicById",
  "description": "Retrieves a specific topic by its ID with complete information.",
  "inputValues": [
    "topicId-number-Topic"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect the topicId (mandatory, number type)\n   - No optional fields required\n   - No default values needed\n\n2. Data Validation:\n   - Validate topicId:\n     a. Check if topicId is provided\n     b. Verify topicId is a positive integer\n     c. Generate appropriate error message if validation fails\n\n3. Business Rule Processing:\n   - Check system state:\n     a. Verify the system is operational\n     b. Ensure the user has appropriate permissions to view topics\n   - Verify dependencies:\n     a. Confirm the topic database is accessible\n     b. Check if any required services are available\n\n4. Core Operation Execution:\n   - Retrieve topic information:\n     a. Fetch the basic topic data using the provided topicId\n     b. If topic not found, prepare appropriate error response\n     c. If topic found, retrieve associated information:\n        i. Get topic creator details\n        ii. Get topic status (locked/unlocked)\n        iii. Get topic view count\n        iv. Get topic reply count\n        v. Get first and last post information\n   - Process topic metadata:\n     a. Check if topic is marked as read for the current user\n     b. Check if user is subscribed to the topic\n     c. Determine if the topic has attachments\n\n5. Response Generation:\n   - For successful retrieval:\n     a. Prepare complete topic object with all related information\n     b. Include topic metadata (creation date, last post date)\n     c. Include topic status information\n   - For failed retrieval:\n     a. Generate appropriate error message\n     b. Include error code and description\n     c. Provide guidance for next steps",
  "databaseEntities": [
    "jforum_topics",
    "jforum_posts",
    "jforum_users",
    "jforum_forums"
  ],
  "validationRules": [
    "Topic ID must be a positive integer",
    "Topic must exist in the database",
    "User must have permission to view the topic",
    "Forum containing the topic must be accessible to the user"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "Topic": {
      "id": "number",
      "title": "string",
      "forumId": "number",
      "status": "number",
      "totalViews": "number",
      "totalReplies": "number",
      "firstPostId": "number",
      "lastPostId": "number",
      "type": "number",
      "creationDate": "date",
      "lastPostDate": "date",
      "userId": "number",
      "isRead": "boolean",
      "isSubscribed": "boolean",
      "hasAttachments": "boolean"
    }
  }
}