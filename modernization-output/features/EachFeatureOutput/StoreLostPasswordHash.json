{
  "featureName": "StoreLostPasswordHash",
  "description": "Saves a security hash for password recovery in the system.",
  "inputValues": [
    "email-string-User",
    "hash-string-SecurityHash"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect email (string, mandatory) - User's registered email address\n   - Collect hash (string, mandatory) - System-generated security hash for password recovery\n\n2. Data Validation:\n   - Validate email:\n     a. Check if email is not empty\n     b. Verify email follows valid format (contains @ and domain)\n     c. If validation fails, generate appropriate error message\n   - Validate hash:\n     a. Check if hash is not empty\n     b. Verify hash meets required length and format\n     c. If validation fails, generate appropriate error message\n\n3. Business Rule Processing:\n   - Verify user existence:\n     a. Check if a user with the provided email exists in the system\n     b. IF user does not exist, THEN generate error message and stop processing\n   - Check system state:\n     a. Verify the password recovery system is active\n     b. Ensure no rate limiting or security blocks are in place for this email\n\n4. Core Operation Execution:\n   - Store password recovery information:\n     a. Associate the security hash with the user's email in the system\n     b. Set expiration time for the hash based on system configuration\n     c. IF storage operation fails, THEN generate error and attempt rollback\n     d. Log the password recovery request for security auditing\n\n5. Response Generation:\n   - Success response:\n     a. Generate confirmation of successful hash storage\n     b. Include information about next steps in recovery process\n   - Error response:\n     a. Provide clear error message if operation failed\n     b. Include support information if needed",
  "databaseEntities": [
    "jforum_users"
  ],
  "validationRules": [
    "Email must not be empty",
    "Email must be in valid format",
    "Hash must not be empty",
    "Hash must meet security requirements",
    "User with provided email must exist in the system"
  ],
  "dbSeedingOperations": [],
  "schema": {}
}