{
  "featureName": "ListPostsByDateRange",
  "description": "Retrieves posts from a specific date range for summary generation.",
  "inputValues": [
    "startDate-date-Post",
    "endDate-date-Post"
  ],
  "businessLogic": "1. Input Collection:\n   1.1. Collect startDate (mandatory) - The beginning date of the range to search for posts\n   1.2. Collect endDate (mandatory) - The ending date of the range to search for posts\n   1.3. System will use current date as default for endDate if not provided\n\n2. Data Validation:\n   2.1. Validate startDate:\n       2.1.1. IF startDate is null or empty THEN\n           2.1.1.1. Generate error message: \"Start date is required\"\n           2.1.1.2. Return validation error\n       2.1.2. IF startDate is not in valid date format THEN\n           2.1.2.1. Generate error message: \"Start date must be a valid date\"\n           2.1.2.2. Return validation error\n   2.2. Validate endDate:\n       2.2.1. IF endDate is null or empty THEN\n           2.2.1.1. Set endDate to current system date\n       2.2.2. IF endDate is not in valid date format THEN\n           2.2.2.1. Generate error message: \"End date must be a valid date\"\n           2.2.2.2. Return validation error\n   2.3. Validate date range:\n       2.3.1. IF startDate is after endDate THEN\n           2.3.1.1. Generate error message: \"Start date cannot be after end date\"\n           2.3.1.2. Return validation error\n\n3. Business Rule Processing:\n   3.1. Check system state:\n       3.1.1. Verify database connection is available\n       3.1.2. IF database connection is unavailable THEN\n           3.1.2.1. Generate error message: \"Database service unavailable\"\n           3.1.2.2. Return system error\n   3.2. Check access permissions:\n       3.2.1. Verify user has permission to view posts\n       3.2.2. IF user lacks permission THEN\n           3.2.2.1. Generate error message: \"Insufficient permissions to view posts\"\n           3.2.2.2. Return access denied error\n\n4. Core Operation Execution:\n   4.1. Initialize empty collection for storing posts\n   4.2. Query database for posts:\n       4.2.1. Search for all posts with creation date between startDate and endDate (inclusive)\n       4.2.2. Sort posts by date in descending order (newest first)\n   4.3. Process retrieved posts:\n       4.3.1. FOR EACH post in query results DO\n           4.3.1.1. Extract post details (subject, content, author, creation date)\n           4.3.1.2. Add post to collection\n       4.3.2. END FOR\n\n5. Response Generation:\n   5.1. IF posts collection is empty THEN\n       5.1.1. Return success response with message: \"No posts found in the specified date range\"\n   5.2. ELSE\n       5.2.1. Return success response with:\n           5.2.1.1. Collection of posts\n           5.2.1.2. Total count of posts found\n           5.2.1.3. Date range used for the search",
  "databaseEntities": [
    "jforum_posts",
    "jforum_posts_text",
    "jforum_users",
    "jforum_topics"
  ],
  "validationRules": [
    "Start date must be provided",
    "End date must be provided or defaults to current date",
    "Start date must be before or equal to end date",
    "Both dates must be valid date formats",
    "User must have permission to view posts"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "subject": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "creationDate": {
          "type": "date"
        },
        "userId": {
          "type": "number"
        },
        "topicId": {
          "type": "number"
        }
      },
      "required": [
        "id",
        "subject",
        "text",
        "creationDate",
        "userId",
        "topicId"
      ]
    }
  }
}