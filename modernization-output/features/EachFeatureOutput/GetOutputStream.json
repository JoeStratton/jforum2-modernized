{
  "featureName": "GetOutputStream",
  "description": "Retrieves the output stream for writing binary data to the response.",
  "inputValues": [
    "response-object-HttpServletResponse"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect the HttpServletResponse object\n   - Verify the response object is not null\n   \n2. Data Validation:\n   - Validate that the response object is properly initialized\n   - Ensure the response is still open and available for writing\n   - Verify that the output stream has not been previously obtained\n   \n3. Business Rule Processing:\n   - Check if response headers have been set\n   - IF headers are not set:\n     a. Set default content type if needed\n     b. Set appropriate character encoding if needed\n   - Verify that the writer has not been obtained already\n   - IF writer has been obtained:\n     a. Throw appropriate error as both writer and output stream cannot be used together\n   \n4. Core Operation Execution:\n   - Request the output stream from the response object\n   - IF output stream cannot be obtained:\n     a. Handle the failure condition\n     b. Provide appropriate error information\n   - Set any necessary stream properties\n   \n5. Response Generation:\n   - Return the obtained output stream\n   - IF an error occurred during stream acquisition:\n     a. Provide appropriate error information\n     b. Include details about why the stream could not be obtained",
  "databaseEntities": [],
  "validationRules": [
    "Response object must not be null",
    "Response must be open and available for writing",
    "Writer must not have been previously obtained from this response"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "HttpServletResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "description": "HTTP status code"
        },
        "headers": {
          "type": "object",
          "description": "HTTP response headers"
        },
        "contentType": {
          "type": "string",
          "description": "Content type of the response"
        },
        "characterEncoding": {
          "type": "string",
          "description": "Character encoding of the response"
        }
      }
    }
  }
}