{
  "featureName": "CreateExtension",
  "description": "Creates a new file extension entry for attachments.",
  "inputValues": [
    "extension-string-AttachmentExtension",
    "comment-string-AttachmentExtension",
    "allow-boolean-AttachmentExtension",
    "uploadIcon-string-AttachmentExtension",
    "extensionGroup-number-AttachmentExtension"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect the following required inputs:\n     1.1. extension (string): The file extension to be added\n     1.2. comment (string): Description or comment about the extension\n     1.3. allow (boolean): Whether the extension is allowed for upload\n     1.4. uploadIcon (string): Icon to represent this file extension\n     1.5. extensionGroup (number): ID of the extension group this extension belongs to\n\n2. Data Validation:\n   2.1. Validate extension field:\n       - Check if extension is not empty\n       - IF extension starts with a period (.), THEN remove the leading period\n       - Check if extension contains only valid characters (alphanumeric and limited special characters)\n       - Verify extension is not already in the system\n   2.2. Validate comment field:\n       - No specific validation required, can be empty\n   2.3. Validate allow field:\n       - Must be a boolean value (true/false)\n   2.4. Validate uploadIcon field:\n       - Check if the specified icon exists in the system (if provided)\n   2.5. Validate extensionGroup field:\n       - Must be a valid extension group ID that exists in the system\n       - Must be a positive integer\n\n3. Business Rule Processing:\n   3.1. Check system state:\n       - Verify the attachment system is enabled\n       - Verify the user has administrative privileges to add extensions\n   3.2. Check extension group validity:\n       - Verify the selected extension group exists\n       - Verify the selected extension group allows new extensions\n   3.3. Check for duplicate extensions:\n       - Verify the extension doesn't already exist in the system\n\n4. Core Operation Execution:\n   4.1. Prepare extension data:\n       - Format the extension properly (remove leading period if present)\n       - Set the allow status based on input\n       - Associate with the specified extension group\n   4.2. Create extension record:\n       - Create a new extension entry in the system\n       - Associate the extension with its group\n       - Set the upload icon for the extension\n       - Set the comment/description for the extension\n   4.3. Update related configurations:\n       - Update any caches or runtime configurations related to extensions\n\n5. Response Generation:\n   5.1. For successful creation:\n       - Generate success message indicating the extension was created\n       - Include the extension details in the response\n       - Provide navigation options to manage extensions\n   5.2. For validation failures:\n       - Return appropriate error messages for each validation failure\n       - Preserve user input for correction\n   5.3. For system errors:\n       - Generate appropriate error message\n       - Log the error details for administrators",
  "databaseEntities": [
    "jforum_extension_groups",
    "jforum_attachments"
  ],
  "validationRules": [
    "Extension must not be empty",
    "Extension group ID must be valid and exist in the system",
    "Extension must not already exist in the system",
    "Extension must contain only valid characters",
    "Upload icon must exist in the system if specified"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "AttachmentExtension": {
      "id": "number",
      "extension": "string",
      "comment": "string",
      "allow": "boolean",
      "uploadIcon": "string",
      "extensionGroupId": "number"
    }
  }
}