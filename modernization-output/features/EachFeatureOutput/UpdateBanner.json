{
  "featureName": "UpdateBanner",
  "description": "Updates an existing banner's information in the system.",
  "inputValues": [
    "bannerId-number-Banner",
    "banner-object-Banner"
  ],
  "businessLogic": "1. Input Collection:\n   1.1. Collect the banner ID (mandatory) to identify which banner to update\n   1.2. Collect banner information (mandatory) containing:\n      1.2.1. Banner name (mandatory)\n      1.2.2. Banner placement (mandatory)\n      1.2.3. Banner description (optional)\n      1.2.4. Banner URL (mandatory)\n      1.2.5. Banner weight (optional)\n      1.2.6. Active status (mandatory)\n      1.2.7. Banner comment (optional)\n      1.2.8. Banner type (mandatory)\n      1.2.9. Banner width (optional)\n      1.2.10. Banner height (optional)\n      1.2.11. Views count (optional)\n      1.2.12. Clicks count (optional)\n\n2. Data Validation:\n   2.1. Validate banner ID\n      2.1.1. Check if banner ID is provided\n      2.1.2. Verify banner ID is a positive integer\n      2.1.3. IF banner ID is invalid, THEN return error message \"Invalid banner ID format\"\n   2.2. Validate banner name\n      2.2.1. Check if banner name is provided\n      2.2.2. Verify banner name is not empty\n      2.2.3. Verify banner name length is within acceptable limits (1-255 characters)\n      2.2.4. IF banner name is invalid, THEN return error message \"Banner name is required and must be between 1-255 characters\"\n   2.3. Validate banner placement\n      2.3.1. Check if placement is provided\n      2.3.2. Verify placement is a valid integer\n      2.3.3. IF placement is invalid, THEN return error message \"Banner placement is required and must be a valid integer\"\n   2.4. Validate banner URL\n      2.4.1. Check if banner URL is provided\n      2.4.2. Verify banner URL format is valid\n      2.4.3. IF banner URL is invalid, THEN return error message \"Banner URL is required and must be in valid format\"\n   2.5. Validate banner type\n      2.5.1. Check if banner type is provided\n      2.5.2. Verify banner type is a valid integer\n      2.5.3. IF banner type is invalid, THEN return error message \"Banner type is required and must be a valid integer\"\n   2.6. Validate active status\n      2.6.1. Check if active status is provided\n      2.6.2. Verify active status is a boolean value\n      2.6.3. IF active status is invalid, THEN return error message \"Active status must be provided as true or false\"\n   2.7. Validate dimensions (if provided)\n      2.7.1. Verify width is a positive integer\n      2.7.2. Verify height is a positive integer\n      2.7.3. IF dimensions are invalid, THEN return error message \"Banner dimensions must be positive integers\"\n   2.8. Validate views and clicks (if provided)\n      2.8.1. Verify views is a non-negative integer\n      2.8.2. Verify clicks is a non-negative integer\n      2.8.3. IF views or clicks are invalid, THEN return error message \"Views and clicks must be non-negative integers\"\n\n3. Business Rule Processing:\n   3.1. Check if banner exists\n      3.1.1. Search for banner with the provided ID\n      3.1.2. IF banner not found, THEN return error message \"Banner with ID {bannerId} not found\"\n   3.2. Check for system constraints\n      3.2.1. Verify user has permission to update banners\n      3.2.2. IF user lacks permission, THEN return error message \"Insufficient permissions to update banner\"\n   3.3. Check for placement conflicts\n      3.3.1. IF placement position has changed, THEN verify it doesn't conflict with system constraints\n      3.3.2. IF placement conflict exists, THEN return warning message \"This placement position already has multiple banners\"\n   3.4. Check for banner deletion constraints\n      3.4.1. Verify the banner is not currently in use by the system\n      3.4.2. IF banner cannot be modified, THEN return error message indicating why\n\n4. Core Operation Execution:\n   4.1. Prepare banner data for update\n      4.1.1. Map all provided fields to the banner entity\n      4.1.2. Preserve any existing fields that were not provided in the update\n      4.1.3. Ensure clicks and views counters are maintained correctly\n   4.2. Update banner record\n      4.2.1. Apply changes to the banner record\n      4.2.2. IF update fails, THEN revert any partial changes\n      4.2.3. Return error message if update fails\n   4.3. Update related records if necessary\n      4.3.1. Update any dependent records that reference this banner\n      4.3.2. IF related updates fail, THEN revert banner update\n      4.3.3. Return error message if related updates fail\n\n5. Response Generation:\n   5.1. Generate success response\n      5.1.1. Include confirmation message \"Banner updated successfully\"\n      5.1.2. Include updated banner details\n      5.1.3. Include timestamp of update\n      5.1.4. Return to banner listing page to show all banners including the updated one\n   5.2. Generate error response (if needed)\n      5.2.1. Include specific error message\n      5.2.2. Include error code\n      5.2.3. Include suggestions for resolution\n      5.2.4. Include contact information for support",
  "databaseEntities": [
    "Banner"
  ],
  "validationRules": [
    "Banner ID must be a positive integer",
    "Banner name is required and must be between 1-255 characters",
    "Banner URL is required and must be in valid format",
    "Banner placement is required and must be a valid integer",
    "Banner type is required and must be a valid integer",
    "Active status must be provided as true or false",
    "Banner width and height must be positive integers if provided",
    "Banner with specified ID must exist in the system",
    "User must have permission to update banners",
    "Views and clicks must be non-negative integers"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "Banner": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Unique identifier for the banner"
        },
        "name": {
          "type": "string",
          "description": "Name of the banner"
        },
        "placement": {
          "type": "number",
          "description": "Position where the banner should be displayed"
        },
        "description": {
          "type": "string",
          "description": "Description of the banner"
        },
        "clicks": {
          "type": "number",
          "description": "Number of times the banner has been clicked"
        },
        "views": {
          "type": "number",
          "description": "Number of times the banner has been viewed"
        },
        "url": {
          "type": "string",
          "description": "URL that the banner links to"
        },
        "weight": {
          "type": "number",
          "description": "Weight/priority of the banner for display selection"
        },
        "active": {
          "type": "boolean",
          "description": "Whether the banner is currently active"
        },
        "comment": {
          "type": "string",
          "description": "Additional comments about the banner"
        },
        "type": {
          "type": "number",
          "description": "Type of banner"
        },
        "width": {
          "type": "number",
          "description": "Width of the banner in pixels"
        },
        "height": {
          "type": "number",
          "description": "Height of the banner in pixels"
        }
      },
      "required": [
        "name",
        "placement",
        "url",
        "active",
        "type"
      ]
    }
  }
}