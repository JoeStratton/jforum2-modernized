{
  "featureName": "SendTestMail",
  "description": "Sends a test email with configurable SMTP settings and restores original configuration.",
  "inputValues": [
    "sender-string-EmailAddress",
    "host-string-SmtpServer",
    "port-string-SmtpPort",
    "auth-string-AuthenticationFlag",
    "ssl-string-SslFlag",
    "username-string-SmtpUsername",
    "password-string-SmtpPassword",
    "to-string-RecipientEmail"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect the following required inputs:\n     a. sender: Email address to be used as the sender\n     b. host: SMTP server hostname or IP address\n     c. port: SMTP server port number\n     d. auth: Authentication flag (yes/no)\n     e. ssl: SSL connection flag (yes/no)\n     f. username: SMTP server username (required if auth is yes)\n     g. password: SMTP server password (required if auth is yes)\n     h. to: Recipient email address\n\n2. Data Validation:\n   - Validate sender email address:\n     a. Check if sender email is properly formatted\n     b. Verify sender email is not empty\n     c. IF validation fails, THEN return error message\n   - Validate SMTP host:\n     a. Check if host is not empty\n     b. IF validation fails, THEN return error message\n   - Validate port number:\n     a. Check if port is a valid numeric value\n     b. Verify port is within valid range (1-65535)\n     c. IF validation fails, THEN return error message\n   - Validate authentication parameters:\n     a. IF auth flag is set to yes, THEN:\n        i. Verify username is not empty\n        ii. Verify password is not empty\n        iii. IF either is empty, THEN return error message\n   - Validate recipient email address:\n     a. Check if recipient email is properly formatted\n     b. Verify recipient email is not empty\n     c. IF validation fails, THEN return error message\n\n3. Business Rule Processing:\n   - Check system state:\n     a. Verify email functionality is enabled in the system\n     b. IF email functionality is disabled, THEN return error message\n   - Prepare for configuration change:\n     a. Store current system email configuration values\n     b. Prepare rollback mechanism in case of failure\n\n4. Core Operation Execution:\n   - Apply temporary email configuration:\n     a. Set SMTP host to provided host value\n     b. Set SMTP authentication flag to provided auth value\n     c. Set SMTP username to provided username value\n     d. Set SMTP password to provided password value\n     e. Set email sender to provided sender value\n     f. Set SMTP SSL flag to provided ssl value\n     g. Set SMTP port to provided port value\n   - Prepare test email:\n     a. Create email with subject \"JForum Test Mail\"\n     b. Set email body to include current timestamp\n     c. Set recipient to provided email address\n   - Send test email:\n     a. Attempt to send the email using configured settings\n     b. IF sending fails, THEN capture detailed error information\n     c. IF sending succeeds, THEN prepare success message\n   - Restore original configuration:\n     a. Reset SMTP host to original value\n     b. Reset SMTP authentication flag to original value\n     c. Reset SMTP username to original value\n     d. Reset SMTP password to original value\n     e. Reset email sender to original value\n     f. Reset SMTP SSL flag to original value\n     g. Reset SMTP port to original value\n\n5. Response Generation:\n   - Prepare response:\n     a. IF email was sent successfully, THEN:\n        i. Set status message to \"OK\"\n     b. IF email sending failed, THEN:\n        i. Set status message to error details\n        ii. Include troubleshooting information\n   - Return response:\n     a. Include status message\n     b. Include timestamp of operation",
  "databaseEntities": [
    "jforum_users"
  ],
  "validationRules": [
    "Sender email must be a valid email address format",
    "SMTP host cannot be empty",
    "Port must be a valid number between 1 and 65535",
    "If authentication is enabled, username and password must be provided",
    "Recipient email must be a valid email address format",
    "Email functionality must be enabled in the system"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "EmailAddress": {
      "type": "string",
      "format": "email",
      "description": "A valid email address"
    },
    "SmtpServer": {
      "type": "string",
      "description": "SMTP server hostname or IP address"
    },
    "SmtpPort": {
      "type": "string",
      "pattern": "^[0-9]{1,5}$",
      "description": "SMTP server port number"
    },
    "AuthenticationFlag": {
      "type": "string",
      "enum": [
        "yes",
        "no"
      ],
      "description": "Flag indicating if SMTP authentication is required"
    },
    "SslFlag": {
      "type": "string",
      "enum": [
        "yes",
        "no"
      ],
      "description": "Flag indicating if SSL connection should be used"
    },
    "SmtpUsername": {
      "type": "string",
      "description": "Username for SMTP authentication"
    },
    "SmtpPassword": {
      "type": "string",
      "description": "Password for SMTP authentication"
    },
    "RecipientEmail": {
      "type": "string",
      "format": "email",
      "description": "Email address of the recipient"
    }
  }
}