{
  "featureName": "RecoverPassword",
  "description": "Displays the password recovery form for users with a valid hash.",
  "inputValues": [
    "hash-string-User",
    "email-string-User",
    "newPassword-string-User"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect the recovery hash from the user request\n   - System prepares the password recovery form\n   \n2. Data Validation:\n   - Validate that the hash parameter exists in the request\n     * IF hash is missing or empty THEN display an error message\n     * IF hash is present THEN proceed to display recovery form\n   - Store the hash value for later use in the form submission\n   \n3. Business Rule Processing:\n   - Prepare the password recovery form interface\n   - Include fields for:\n     * Email address (to verify user identity)\n     * New password input\n     * Password confirmation input\n   - Include the recovery hash as a hidden field in the form\n   \n4. Core Operation Execution:\n   - Display the password recovery form to the user\n   - When user submits the form with new password:\n     * Validate the submitted hash against the email address\n     * IF hash validation fails THEN display an error message\n     * IF hash validation succeeds THEN:\n       - Encrypt the new password\n       - Update the user's password in the system\n       - Invalidate the used recovery hash\n       - Display a success message with login link\n   \n5. Response Generation:\n   - For initial form display:\n     * Show password recovery form with all required fields\n     * Include the recovery hash as a hidden value\n   - For form submission response:\n     * IF successful: Display confirmation message with login instructions\n     * IF failed: Display appropriate error message explaining the issue\n     * Provide navigation options for the user to retry or contact support",
  "databaseEntities": [
    "jforum_users"
  ],
  "validationRules": [
    "Recovery hash must be present in the request",
    "Email address must match the one associated with the recovery hash",
    "New password must not be empty",
    "New password must meet system password requirements",
    "Recovery hash must be valid and not expired"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "User's email address"
        },
        "hash": {
          "type": "string",
          "description": "Password recovery hash"
        },
        "newPassword": {
          "type": "string",
          "description": "User's new password"
        }
      },
      "required": [
        "email",
        "hash",
        "newPassword"
      ]
    }
  }
}