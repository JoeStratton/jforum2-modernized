{
  "featureName": "AddExtensionGroup",
  "description": "Creates a new attachment extension group with permissions and display settings.",
  "inputValues": [
    "name-string-ExtensionGroup",
    "allowFlag-boolean-ExtensionGroup",
    "uploadIcon-string-ExtensionGroup",
    "downloadMode-number-ExtensionGroup"
  ],
  "businessLogic": "1. Input Collection\n   1.1. Collect the following required inputs:\n       - name: The name of the extension group (mandatory)\n       - allowFlag: Boolean indicating if the extension group is allowed (mandatory)\n       - uploadIcon: The icon to display for uploads of this type (optional)\n       - downloadMode: Integer representing the download mode for this extension group (mandatory)\n\n2. Data Validation\n   2.1. Validate extension group name\n       2.1.1. Check if name is not empty\n       2.1.2. Check if name length is within acceptable limits (3-50 characters)\n       2.1.3. IF validation fails, THEN return appropriate error message\n   2.2. Validate allowFlag\n       2.2.1. Ensure allowFlag is a valid boolean value\n       2.2.2. IF validation fails, THEN return appropriate error message\n   2.3. Validate uploadIcon\n       2.3.1. IF uploadIcon is provided, THEN check if it's a valid icon reference\n       2.3.2. IF validation fails, THEN return appropriate error message\n   2.4. Validate downloadMode\n       2.4.1. Check if downloadMode is a valid integer within the allowed range (typically 0-2)\n       2.4.2. IF validation fails, THEN return appropriate error message\n\n3. Business Rule Processing\n   3.1. Check for duplicate extension group names\n       3.1.1. Check if an extension group with the same name already exists\n       3.1.2. IF duplicate found, THEN return error message indicating name must be unique\n   3.2. Verify system permissions\n       3.2.1. Check if the current user has administrator privileges\n       3.2.2. IF user lacks required permissions, THEN return access denied error\n   3.3. Validate icon availability\n       3.3.1. IF uploadIcon is specified, THEN verify the icon exists in the system\n       3.3.2. IF icon not found, THEN return error message or use default icon\n\n4. Core Operation Execution\n   4.1. Create new extension group record\n       4.1.1. Prepare the extension group data structure\n       4.1.2. Set the name field to the provided name\n       4.1.3. Convert allowFlag boolean to appropriate storage format\n       4.1.4. Set the uploadIcon field to the provided icon or default if not specified\n       4.1.5. Set the downloadMode field to the provided value\n       4.1.6. Save the new extension group to the system\n       4.1.7. IF save operation fails, THEN handle the error and provide appropriate message\n   4.2. Generate unique identifier\n       4.2.1. Assign a unique identifier to the newly created extension group\n       4.2.2. Store the identifier with the extension group record\n\n5. Response Generation\n   5.1. Prepare success response\n       5.1.1. Include the newly created extension group ID\n       5.1.2. Include confirmation message that the extension group was created successfully\n       5.1.3. Include any relevant next steps or related actions\n   5.2. Handle error scenarios\n       5.2.1. IF any step in the process failed, THEN include detailed error information\n       5.2.2. Provide guidance on how to resolve common errors\n   5.3. Return final response\n       5.3.1. Return either success response or error response based on operation outcome",
  "databaseEntities": [
    "jforum_extension_groups"
  ],
  "validationRules": [
    "Extension group name must not be empty",
    "Extension group name must be unique",
    "Extension group name must be between 3 and 50 characters",
    "Download mode must be a valid integer within the allowed range",
    "User must have administrator privileges to create extension groups"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "ExtensionGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the extension group"
        },
        "name": {
          "type": "string",
          "description": "Name of the extension group"
        },
        "allowFlag": {
          "type": "boolean",
          "description": "Flag indicating if the extension group is allowed"
        },
        "uploadIcon": {
          "type": "string",
          "description": "Icon to display for uploads of this type"
        },
        "downloadMode": {
          "type": "integer",
          "description": "Download mode for this extension group"
        }
      },
      "required": [
        "name",
        "allowFlag",
        "downloadMode"
      ]
    }
  }
}