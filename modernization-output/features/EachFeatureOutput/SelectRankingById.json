{
  "featureName": "SelectRankingById",
  "description": "Retrieves a specific ranking by its ID from the system.",
  "inputValues": [
    "rankingId-number-Ranking"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect the required rankingId (number) from the user\n   - The rankingId is mandatory and must be provided\n   - No default values are applicable for this operation\n\n2. Data Validation:\n   - Validate rankingId:\n     a. Verify rankingId is not null\n     b. Verify rankingId is a positive integer\n     c. Verify rankingId is within valid system range\n   - IF any validation fails, THEN:\n     a. Generate appropriate error message\n     b. Halt further processing\n     c. Return error information to caller\n\n3. Business Rule Processing:\n   - Verify system access permissions:\n     a. Check if the current user has permission to view ranking information\n     b. IF user lacks permission, THEN return appropriate access denied message\n   - Verify system state:\n     a. Ensure ranking system is active and available\n     b. IF system is in maintenance mode, THEN notify user and halt processing\n\n4. Core Operation Execution:\n   - Search for ranking with the specified ID:\n     a. Look up ranking record using the provided rankingId\n     b. IF ranking is found, THEN:\n        i. Retrieve all ranking details (title, minimum posts, image, special status)\n        ii. Prepare ranking information for response\n     c. IF ranking is not found, THEN:\n        i. Set appropriate not-found status\n        ii. Prepare error message for response\n   - Handle any unexpected errors:\n     a. Log error details\n     b. Prepare generic error message\n\n5. Response Generation:\n   - For successful retrieval:\n     a. Format ranking details for presentation\n     b. Include all relevant ranking attributes (id, title, image, minimum posts, special status)\n     c. Return complete ranking information\n   - For failed retrieval:\n     a. Include specific error reason\n     b. Provide guidance on possible resolution\n     c. Return appropriate status information",
  "databaseEntities": [
    "Ranking"
  ],
  "validationRules": [
    "Ranking ID must be a positive integer",
    "Ranking ID must exist in the system",
    "User must have permission to view ranking information"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "Ranking": {
      "id": "number",
      "title": "string",
      "minPosts": "number",
      "image": "string",
      "special": "boolean"
    }
  }
}