{
  "featureName": "AddRoleValue",
  "description": "Adds role values to a specific role for a group.",
  "inputValues": [
    "groupId-number-Group",
    "role-object-Role",
    "roleValue-object-RoleValue"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect the following inputs:\n     1.1. groupId (number, mandatory): The identifier of the group to which the role value will be added\n     1.2. role (object, mandatory): The role object containing role information\n     1.3. roleValue (object, mandatory): The role value to be added to the role\n\n2. Data Validation:\n   - Validate all input parameters:\n     2.1. Validate groupId:\n         IF groupId is null or not a positive integer THEN\n             Generate error: \"Group ID must be a valid positive integer\"\n     2.2. Validate role object:\n         IF role is null THEN\n             Generate error: \"Role object cannot be null\"\n         IF role name is empty THEN\n             Generate error: \"Role name cannot be empty\"\n     2.3. Validate roleValue object:\n         IF roleValue is null THEN\n             Generate error: \"Role value cannot be null\"\n         IF roleValue.value is empty THEN\n             Generate error: \"Role value content cannot be empty\"\n\n3. Business Rule Processing:\n   - Verify system state and dependencies:\n     3.1. Check if the group exists:\n         IF group with groupId does not exist THEN\n             Generate error: \"Group not found with the provided ID\"\n     3.2. Check if the role is valid for the system:\n         IF role is not a recognized system role THEN\n             Generate error: \"Invalid role type provided\"\n     3.3. Check for duplicate role values:\n         IF roleValue already exists for this role and group THEN\n             Generate warning: \"Duplicate role value detected\"\n             Skip addition process and return success with notification\n\n4. Core Operation Execution:\n   - Process the role value addition:\n     4.1. Check if the role already exists for the group:\n         Query the system to find if the role is already assigned to the group\n         IF role exists for the group THEN\n             Retrieve the existing roleId and associated RoleValueCollection\n         ELSE\n             Create a new role association for the group\n             Generate a new roleId\n             Create a new empty RoleValueCollection for this role\n     4.2. Add the role value to the collection:\n         Check if the RoleValueCollection already contains the value\n         IF collection does not contain the value THEN\n             Add the roleValue to the RoleValueCollection\n         ELSE\n             Skip addition (value already exists)\n     4.3. Persist the updated collection:\n         Save the updated RoleValueCollection to the system\n         IF persistence operation fails THEN\n             Rollback changes\n             Generate error: \"Failed to save role value\"\n\n5. Response Generation:\n   - Generate appropriate response:\n     5.1. For successful operation:\n         Return success status\n         Include summary of the added role value\n         Include the updated RoleValueCollection size\n     5.2. For failed operation:\n         Return failure status\n         Include specific error details\n         Provide guidance on how to resolve the issue",
  "databaseEntities": [
    "jforum_groups",
    "jforum_roles",
    "jforum_role_values"
  ],
  "validationRules": [
    "Group ID must be a valid positive integer",
    "Role object cannot be null",
    "Role name cannot be empty",
    "Role value cannot be null",
    "Role value content cannot be empty",
    "Group must exist in the system",
    "Role must be a valid system role",
    "Role value must be a valid RoleValue type"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "Role": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the role"
        },
        "id": {
          "type": "number",
          "description": "The unique identifier of the role"
        }
      },
      "required": [
        "name"
      ]
    },
    "RoleValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value associated with the role"
        }
      },
      "required": [
        "value"
      ]
    },
    "RoleValueCollection": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/RoleValue"
          }
        }
      },
      "methods": {
        "add": {
          "description": "Adds a RoleValue to the collection if not already present"
        },
        "get": {
          "description": "Retrieves a RoleValue by its value name"
        },
        "contains": {
          "description": "Checks if a RoleValue exists in the collection"
        }
      }
    }
  }
}