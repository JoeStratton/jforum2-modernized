{
  "featureName": "ManagePollOptions",
  "description": "Adds and removes options from a poll with proper relationship management.",
  "inputValues": [
    "pollId-number-Poll",
    "pollOption-object-PollOption",
    "action-string-Poll"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect the following inputs:\n     * pollId (mandatory): Unique identifier for the poll to be modified\n     * pollOption (mandatory): The poll option to be added or removed\n     * action (mandatory): The operation to perform ('add' or 'remove')\n\n2. Data Validation:\n   - Validate Poll ID:\n     * Verify pollId is a positive integer\n     * Verify poll exists in the system\n     * IF poll does not exist, THEN return error message \"Poll not found\"\n   - Validate Poll Option:\n     * Verify pollOption has a non-empty text value\n     * IF adding option, verify option text is not empty\n     * IF adding option, verify option text length is within allowed limits\n     * IF removing option, verify option ID exists\n   - Validate Action:\n     * Verify action is either 'add' or 'remove'\n     * IF action is invalid, THEN return error message \"Invalid action specified\"\n\n3. Business Rule Processing:\n   - Check Poll Status:\n     * Verify if poll is still open for modifications\n     * IF poll has already ended, THEN return error message \"Cannot modify options for a closed poll\"\n   - Check Option Constraints:\n     * IF adding option AND poll already has maximum allowed options, THEN return error message \"Maximum number of options reached\"\n     * IF removing option AND poll has only one option remaining, THEN return error message \"Poll must have at least one option\"\n   - Check Voting Status:\n     * IF removing option AND option has votes, THEN confirm with user about vote deletion\n     * IF user does not confirm deletion of votes, THEN cancel operation\n\n4. Core Operation Execution:\n   - Process Add Option:\n     * IF action is 'add', THEN:\n       - Create new poll option record\n       - Associate option with the poll\n       - Initialize vote count to zero\n       - Record change in poll modification history\n   - Process Remove Option:\n     * IF action is 'remove', THEN:\n       - Remove association between option and poll\n       - Delete option votes if any\n       - Record change in poll modification history\n   - Update Poll:\n     * Update last modified timestamp for the poll\n     * Recalculate total votes for the poll\n\n5. Response Generation:\n   - Success Response:\n     * Return success message based on action performed\n     * For add: \"Poll option successfully added\"\n     * For remove: \"Poll option successfully removed\"\n     * Include updated list of poll options\n   - Error Response:\n     * Return appropriate error message from validation or business rule processing\n     * Include guidance on how to correct the issue",
  "databaseEntities": [
    "Poll",
    "PollOption",
    "PollChanges"
  ],
  "validationRules": [
    "Poll ID must be a positive integer",
    "Poll must exist in the system",
    "Poll option text must not be empty",
    "Action must be either 'add' or 'remove'",
    "Poll must have at least one option",
    "Poll must not exceed maximum allowed options",
    "User must confirm deletion of options with votes"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "PollOption": {
      "id": "number",
      "text": "string",
      "voteCount": "number",
      "poll": "object"
    },
    "Poll": {
      "id": "number",
      "topicId": "number",
      "length": "number",
      "label": "string",
      "startTime": "date",
      "options": "array",
      "pollChanges": "object"
    }
  }
}