{
  "featureName": "ResetUserPassword",
  "description": "Sets a new password for a user.",
  "inputValues": [
    "email-string-User",
    "newPassword-string-User",
    "confirmPassword-string-User"
  ],
  "businessLogic": "1. Input Collection:\n   1.1. Collect user email (mandatory)\n   1.2. Collect new password (mandatory)\n   1.3. Collect password confirmation (mandatory)\n\n2. Data Validation:\n   2.1. Validate email format\n      2.1.1. Check if email follows standard format (contains @ and domain)\n      2.1.2. IF email format is invalid, THEN display error message\n   2.2. Validate password requirements\n      2.2.1. Check if password meets minimum length requirement\n      2.2.2. Check if password contains required character types (uppercase, lowercase, numbers, special characters)\n      2.2.3. IF password does not meet requirements, THEN display specific error message\n   2.3. Validate password confirmation\n      2.3.1. Check if new password and confirmation password match\n      2.3.2. IF passwords do not match, THEN display error message\n\n3. Business Rule Processing:\n   3.1. Verify user account exists\n      3.1.1. Check if email exists in the system\n      3.1.2. IF email not found, THEN display error message about invalid email\n   3.2. Check user account status\n      3.2.1. Verify user account is active\n      3.2.2. Verify user account is not deleted\n      3.2.3. IF account is inactive or deleted, THEN display appropriate error message\n\n4. Core Operation Execution:\n   4.1. Generate password hash\n      4.1.1. Apply secure hashing algorithm to the new password\n      4.1.2. IF hashing fails, THEN display system error message\n   4.2. Update user password\n      4.2.1. Store new hashed password in the user record\n      4.2.2. Record password change timestamp\n      4.2.3. IF password update fails, THEN display system error message and maintain old password\n   4.3. Clear any existing password reset tokens\n      4.3.1. Remove any stored lost password hash for this user\n      4.3.2. IF token removal fails, log the issue but continue\n\n5. Response Generation:\n   5.1. Generate success response\n      5.1.1. Display confirmation message that password was successfully changed\n      5.1.2. Provide instructions for using the new password\n   5.2. Notify user (optional)\n      5.2.1. Send confirmation email about password change\n      5.2.2. Include security information (time, date of change)\n      5.2.3. IF notification fails, log the issue but consider operation successful",
  "databaseEntities": [
    "jforum_users"
  ],
  "validationRules": [
    "Email must be in valid format",
    "Email must exist in the system",
    "New password must meet minimum security requirements",
    "New password and confirmation password must match",
    "User account must be active",
    "User account must not be deleted"
  ],
  "dbSeedingOperations": [],
  "schema": {}
}