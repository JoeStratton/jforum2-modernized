{
  "featureName": "LostPassword",
  "description": "Allows users to recover their password when they have forgotten it.",
  "inputValues": [
    "username-string-User",
    "email-string-User",
    "hash-string-User",
    "newPassword-string-User"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect user identification information\n     1.1. Request either username OR email address (at least one must be provided)\n     1.2. System generates recovery hash (system-generated)\n     1.3. New password will be collected in a later step\n\n2. Data Validation:\n   2.1. Username/Email Validation\n      2.1.1. IF username is provided THEN verify it is not empty\n      2.1.2. IF email is provided THEN verify it is not empty\n      2.1.3. At least one of username or email must be provided\n      2.1.4. IF both are empty THEN display error message\n   2.2. Password Recovery Hash Validation (during recovery step)\n      2.2.1. Verify hash is not empty\n      2.2.2. Verify hash exists in the system\n      2.2.3. Verify hash is associated with the provided email\n   2.3. New Password Validation (during reset step)\n      2.3.1. Verify new password is not empty\n      2.3.2. Verify new password meets minimum security requirements\n\n3. Business Rule Processing:\n   3.1. User Existence Verification\n      3.1.1. IF email was provided THEN find associated username\n      3.1.2. IF username was provided THEN find user record\n      3.1.3. IF user cannot be found THEN display error message\n   3.2. Password Recovery Hash Generation\n      3.2.1. Create unique hash using user email, timestamp, system values, and random number\n      3.2.2. Store hash in user record for later verification\n   3.3. Password Reset Verification\n      3.3.1. Verify provided hash matches stored hash for user email\n      3.3.2. IF hash is invalid THEN display error message\n\n4. Core Operation Execution:\n   4.1. Password Recovery Request\n      4.1.1. Generate unique recovery hash for user\n      4.1.2. Store hash in user record\n      4.1.3. Send recovery email to user with password reset link containing hash\n      4.1.4. Display confirmation message to user\n   4.2. Password Reset\n      4.2.1. Validate recovery hash against stored value\n      4.2.2. IF hash is valid THEN encrypt new password\n      4.2.3. Update user record with new encrypted password\n      4.2.4. Clear recovery hash from user record\n      4.2.5. Display success message with login link\n\n5. Response Generation:\n   5.1. Password Recovery Request Response\n      5.1.1. IF user found THEN display confirmation message that email was sent\n      5.1.2. IF user not found THEN display error message about invalid username/email\n      5.1.3. Provide link to login page\n   5.2. Password Reset Response\n      5.2.1. IF password reset successful THEN display success message with login link\n      5.2.2. IF password reset failed THEN display error message about invalid data\n      5.2.3. Provide appropriate navigation options based on outcome",
  "databaseEntities": [
    "jforum_users"
  ],
  "validationRules": [
    "Either username or email must be provided",
    "User must exist in the system",
    "Recovery hash must be valid for the given email",
    "New password must not be empty"
  ],
  "dbSeedingOperations": [],
  "schema": {}
}