{
  "featureName": "ManageExtensions",
  "description": "Creates, updates, and removes file extensions for attachments.",
  "inputValues": [
    "extension-string-AttachmentExtension",
    "extensionGroup-object-AttachmentExtensionGroup",
    "extensionIds-object-ExtensionIdList",
    "comment-string-AttachmentExtension",
    "allowUpload-boolean-AttachmentExtension",
    "extensionGroupId-number-AttachmentExtension",
    "uploadIcon-string-AttachmentExtension"
  ],
  "businessLogic": "1. Input Collection\n   1.1. Collect extension information\n       1.1.1. Extension name (mandatory string)\n       1.1.2. Extension group ID (mandatory number)\n       1.1.3. Allow upload flag (mandatory boolean)\n       1.1.4. Comment (optional string)\n       1.1.5. Upload icon (optional string)\n   1.2. For extension removal, collect extension IDs (array of numbers)\n   1.3. For extension group management, collect group information\n       1.3.1. Group name (mandatory string)\n       1.3.2. Download mode (mandatory number - physical or inline)\n       1.3.3. Allow group flag (mandatory boolean)\n       1.3.4. Upload icon (optional string)\n\n2. Data Validation\n   2.1. Validate extension information\n       2.1.1. Extension name must not be empty\n       2.1.2. Extension name must follow proper format (alphanumeric characters)\n       2.1.3. If extension name starts with a dot, remove it before processing\n       2.1.4. Extension name must be unique in the system\n       2.1.5. Extension group ID must reference an existing extension group\n   2.2. Validate extension group information\n       2.2.1. Group name must not be empty\n       2.2.2. Group name must be unique in the system\n       2.2.3. Download mode must be a valid option\n   2.3. For extension removal\n       2.3.1. Verify all extension IDs exist in the system\n       2.3.2. Check if extensions are currently in use by attachments\n   2.4. For upload icons\n       2.4.1. Verify icon path/name is valid if provided\n\n3. Business Rule Processing\n   3.1. Check system permissions\n       3.1.1. Verify user has administrative rights to manage extensions\n       3.1.2. Ensure system allows extension management at current time\n   3.2. Evaluate extension security implications\n       3.2.1. Check if extension type is potentially dangerous (executable, script, etc.)\n       3.2.2. Apply additional security restrictions if needed\n   3.3. Determine extension group compatibility\n       3.3.1. Verify extension is appropriate for the assigned group\n       3.3.2. Check if group settings are compatible with extension requirements\n   3.4. Handle batch operations\n       3.4.1. For batch updates, verify all records exist\n       3.4.2. For batch deletions, check dependencies for each item\n\n4. Core Operation Execution\n   4.1. For adding new extension\n       4.1.1. Create new extension record with provided information\n       4.1.2. Associate extension with specified extension group\n       4.1.3. Set upload permission based on allow flag\n       4.1.4. Store comment and upload icon information\n       4.1.5. Log extension creation activity\n   4.2. For updating existing extension\n       4.2.1. Retrieve existing extension record by ID\n       4.2.2. Update extension properties with new values\n       4.2.3. If extension group changed, update association\n       4.2.4. Update upload icon if provided\n       4.2.5. Log extension modification activity\n   4.3. For removing extensions\n       4.3.1. For each extension ID in the removal list:\n           4.3.1.1. Check if extension is used by any attachments\n           4.3.1.2. If used, either prevent deletion or mark as deprecated\n           4.3.1.3. If unused, remove extension record\n       4.3.2. Log extension removal activity\n   4.4. For extension group operations\n       4.4.1. For adding new group:\n           4.4.1.1. Create group record with provided information\n           4.4.1.2. Set download mode and permissions\n           4.4.1.3. Associate upload icon if provided\n       4.4.2. For updating groups:\n           4.4.2.1. Retrieve each group by ID\n           4.4.2.2. Update properties with new values\n           4.4.2.3. Update associated extensions if needed\n       4.4.3. For removing groups:\n           4.4.3.1. Check for extensions using this group\n           4.4.3.2. Either prevent deletion or reassign extensions\n           4.4.3.3. Remove group if dependencies resolved\n\n5. Response Generation\n   5.1. For successful operations\n       5.1.1. Return confirmation message with operation details\n       5.1.2. Include summary of affected extensions/groups\n       5.1.3. Provide list of updated extension security settings\n   5.2. For failed operations\n       5.2.1. Return specific error message explaining the failure reason\n       5.2.2. Include guidance on how to resolve the issue\n       5.2.3. Maintain current state of extensions/groups\n   5.3. Update extension management interface\n       5.3.1. Refresh extension list with current information\n       5.3.2. Highlight newly added or modified extensions\n       5.3.3. Remove deleted extensions from display\n       5.3.4. Update extension group associations and display",
  "databaseEntities": [
    "jforum_attachments",
    "jforum_extension_groups",
    "jforum_quota_limit"
  ],
  "validationRules": [
    "Extension name must not be empty",
    "Extension name must follow proper format (alphanumeric characters)",
    "Extension name must be unique in the system",
    "Extension group ID must reference an existing extension group",
    "Extension group name must not be empty",
    "Extension group name must be unique in the system",
    "User must have administrative rights to manage extensions",
    "Download mode must be a valid option",
    "If extension starts with a dot, it should be removed before processing"
  ],
  "dbSeedingOperations": [
    "Create default extension groups: Images, Documents, Archives, Media",
    "Add common file extensions to appropriate groups",
    "Set default security settings for each extension group"
  ],
  "schema": {
    "AttachmentExtension": {
      "id": "number",
      "extension": "string",
      "extensionGroupId": "number",
      "allowUpload": "boolean",
      "comment": "string",
      "uploadIcon": "string"
    },
    "AttachmentExtensionGroup": {
      "id": "number",
      "name": "string",
      "allow": "boolean",
      "downloadMode": "number",
      "uploadIcon": "string"
    },
    "ExtensionIdList": {
      "ids": "number[]"
    }
  }
}