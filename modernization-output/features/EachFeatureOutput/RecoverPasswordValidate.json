{
  "featureName": "RecoverPasswordValidate",
  "description": "Validates recovery hash and saves new user password.",
  "inputValues": [
    "recoverHash-string-User",
    "email-string-User",
    "newPassword-string-User"
  ],
  "businessLogic": "1. Input Collection:\n   - Collect the following required inputs:\n     a. recoverHash: A unique string identifier for the password recovery request\n     b. email: The user's email address\n     c. newPassword: The new password chosen by the user\n   - All fields are mandatory for this operation\n\n2. Data Validation:\n   a. Email Validation:\n      - Verify email is not empty\n      - Verify email follows standard email format\n      - Error message should indicate invalid email format if validation fails\n   b. Recovery Hash Validation:\n      - Verify recovery hash is not empty\n      - Verify hash is in the expected format\n      - Error message should indicate invalid recovery link if validation fails\n   c. Password Validation:\n      - Verify new password is not empty\n      - Verify password meets minimum length requirements\n      - Verify password meets complexity requirements (if applicable)\n      - Error message should indicate specific password requirements if validation fails\n\n3. Business Rule Processing:\n   a. Verify User Existence:\n      - Check if a user with the provided email exists in the system\n      - IF user does not exist, THEN:\n         i. Generate appropriate error message\n         ii. Abort the password recovery process\n   b. Validate Recovery Hash Association:\n      - Verify the recovery hash is associated with the provided email\n      - Verify the recovery hash has not expired\n      - IF hash is invalid or expired, THEN:\n         i. Generate error message indicating invalid or expired recovery link\n         ii. Abort the password recovery process\n\n4. Core Operation Execution:\n   a. Password Update:\n      - Process the new password (encrypt/hash it according to system requirements)\n      - Update the user's password in the system\n      - Clear any recovery hash information associated with the user\n      - IF password update fails, THEN:\n         i. Generate appropriate error message\n         ii. Maintain recovery hash validity for retry\n         iii. Abort the operation\n\n5. Response Generation:\n   a. Success Response:\n      - Generate success message confirming password has been changed\n      - Provide link to login page\n      - Clear any session data related to the recovery process\n   b. Error Response:\n      - Provide specific error message based on the validation or processing failure\n      - Maintain appropriate state for retry if applicable\n      - Provide guidance on next steps (retry, contact support, etc.)",
  "databaseEntities": [
    "jforum_users"
  ],
  "validationRules": [
    "Email must not be empty",
    "Email must be in valid format",
    "Recovery hash must not be empty",
    "Recovery hash must match the one stored for the user",
    "New password must not be empty",
    "New password must meet minimum length requirements",
    "User with provided email must exist in the system"
  ],
  "dbSeedingOperations": [],
  "schema": {}
}