{
  "featureName": "FindUsersByName",
  "description": "Searches for users by name with option for exact or partial matching.",
  "inputValues": [
    "searchName-string-User",
    "exactMatch-boolean-User"
  ],
  "businessLogic": "1. Input Collection\n   1.1. Collect the search name input from the user\n      1.1.1. The search name must be provided as a text string\n      1.1.2. The search name is mandatory\n   1.2. Collect the exact match preference\n      1.2.1. The exact match is a boolean flag (true/false)\n      1.2.2. If not specified, default to false (partial matching)\n\n2. Data Validation\n   2.1. Validate search name input\n      2.1.1. Check if search name is not empty\n      2.1.2. IF search name is empty THEN\n         2.1.2.1. Generate validation error message\n         2.1.2.2. Return error to user\n      2.1.3. Check if search name contains only valid characters\n      2.1.4. IF search name contains invalid characters THEN\n         2.1.4.1. Generate validation error message\n         2.1.4.2. Return error to user\n   2.2. Validate exact match parameter\n      2.2.1. Ensure exact match is a valid boolean value\n      2.2.2. IF exact match is invalid THEN\n         2.2.2.1. Use default value (false)\n\n3. Business Rule Processing\n   3.1. Prepare search criteria\n      3.1.1. IF exact match is true THEN\n         3.1.1.1. Set up criteria to match username exactly\n      3.1.2. ELSE\n         3.1.2.1. Set up criteria to match username partially (containing the search term)\n   3.2. Verify user has permission to search users\n      3.2.1. Check if current user has required permissions\n      3.2.2. IF user lacks permission THEN\n         3.2.2.1. Generate permission error message\n         3.2.2.2. Return error to user\n\n4. Core Operation Execution\n   4.1. Execute user search\n      4.1.1. Search for users matching the name criteria\n      4.1.2. Apply any system filters for deleted or inactive users\n      4.1.3. IF search fails due to system error THEN\n         4.1.3.1. Log the error details\n         4.1.3.2. Generate system error message\n         4.1.3.3. Return error to user\n   4.2. Process search results\n      4.2.1. Create a list to store matching users\n      4.2.2. FOR each matching user record\n         4.2.2.1. Extract user information (ID, username, email)\n         4.2.2.2. Check if user is deleted\n         4.2.2.3. Add user to results list\n      4.2.3. Sort results alphabetically by username\n\n5. Response Generation\n   5.1. Prepare success response\n      5.1.1. Include total count of matching users\n      5.1.2. Include list of matching users with their details\n      5.1.3. IF no users found THEN\n         5.1.3.1. Include appropriate message indicating no matches\n   5.2. Return response to user\n      5.2.1. Format response according to system standards\n      5.2.2. Include any pagination information if applicable",
  "databaseEntities": [
    "jforum_users"
  ],
  "validationRules": [
    "Search name must not be empty",
    "Search name must contain only valid characters",
    "Exact match parameter must be a valid boolean value",
    "User must have permission to search for users"
  ],
  "dbSeedingOperations": [],
  "schema": {
    "User": {
      "id": "number",
      "username": "string",
      "email": "string",
      "deleted": "number"
    }
  }
}