{
  "pageContent": "File Path: src/net/jforum/util/concurrent/Executor.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on 17/03/2007 20:36:18\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.util.concurrent;\n\nimport org.apache.log4j.Logger;\n\nimport EDU.oswego.cs.dl.util.concurrent.PooledExecutor;\n\n/**\n * @author Rafael Steil\n * @version $Id: Executor.java,v 1.6 2007/03/18 16:56:56 rafaelsteil Exp $\n */\npublic class Executor\n{\n\tprivate static Logger logger = Logger.getLogger(Executor.class);\n\tprivate static PooledExecutor executor = new PooledExecutor(5);\n\t\n\tstatic {\n\t\texecutor.setMinimumPoolSize(2);\n\t\texecutor.setMaximumPoolSize(10);\n\t\texecutor.setKeepAliveTime(1000 * 60 * 10);\n\t}\n\t\n\tpublic static void execute(Runnable runnable) {\n\t\ttry {\n\t\t\texecutor.execute(runnable);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlogger.error(\"Exception while running task: \" + e, e);\n\t\t}\n\t}\n}",
  "metadata": {
    "fileId": "Executor_java_chunk_1",
    "fileName": "Executor.java",
    "filePath": "src/net/jforum/util/concurrent/Executor.java"
  }
}