{
  "pageContent": "File Path: src/net/jforum/search/SearchOperation.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on 25/07/2007 19:27:48\n * \n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.search;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\n\nimport net.jforum.entities.Forum;\nimport net.jforum.repository.ForumRepository;\n\n/**\n * @author Rafael Steil\n * @version $Id: SearchOperation.java,v 1.5 2007/07/30 14:06:44 rafaelsteil Exp $\n */\npublic abstract class SearchOperation\n{\n\tpublic abstract SearchResult performSearch(SearchArgs args);\n\tpublic abstract int totalRecords();\n\tpublic abstract void prepareForDisplay();\n\tpublic abstract List results();\n\tpublic abstract String viewTemplate();\n\tprotected abstract int extractForumId(Object value);\n\t\n\tpublic final List filterResults(List results)\n\t{\n\t\tList l = new ArrayList();\n\t\t\n\t\tMap forums = new HashMap();\n\t\t\n\t\tfor (Iterator iter = results.iterator(); iter.hasNext(); ) {\n\t\t\tObject currentObject = iter.next();\n\t\t\t\n\t\t\tInteger forumId = new Integer(this.extractForumId(currentObject));\n\t\t\tForumFilterResult status = (ForumFilterResult)forums.get(forumId);\n\t\t\t\n\t\t\tif (status == null) {\n\t\t\t\tForum f = ForumRepository.getForum(forumId.intValue());\n\t\t\t\tstatus = new ForumFilterResult(f);\n\t\t\t\tforums.put(forumId, status);\n\t\t\t}\n\t\t\t\n\t\t\tif (status.isValid()) {\n\t\t\t\t// TODO: decouple\n\t\t\t\tif (currentObject instanceof SearchPost) {\n\t\t\t\t\t((SearchPost)currentObject).setForum(status.getForum());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tl.add(currentObject);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn l;\n\t}\n\t\n\tprivate static class ForumFilterResult\n\t{\n\t\tprivate Forum forum;\n\t\t\n\t\tpublic ForumFilterResult(Forum forum)\n\t\t{\n\t\t\tthis.forum = forum;\n\t\t}\n\t\t\n\t\tpublic Forum getForum() \n\t\t{\n\t\t\treturn this.forum;\n\t\t}\n\t\t\n\t\tpublic boolean isValid()\n\t\t{\n\t\t\treturn this.forum != null;\n\t\t}\n\t}\n}",
  "metadata": {
    "fileId": "SearchOperation_java_chunk_1",
    "fileName": "SearchOperation.java",
    "filePath": "src/net/jforum/search/SearchOperation.java"
  }
}