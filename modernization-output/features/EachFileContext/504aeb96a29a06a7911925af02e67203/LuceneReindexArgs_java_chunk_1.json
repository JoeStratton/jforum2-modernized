{
  "pageContent": "File Path: src/net/jforum/search/LuceneReindexArgs.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on 05/08/2007 12:14:52\n * \n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.search;\n\nimport java.util.Date;\n\n/**\n * @author Rafael Steil\n * @version $Id: LuceneReindexArgs.java,v 1.1 2007/08/05 16:29:21 rafaelsteil Exp $\n */\npublic class LuceneReindexArgs\n{\n\tpublic static final int TYPE_UNKNOWN = 0;\n\tpublic static final int TYPE_DATE = 1;\n\tpublic static final int TYPE_MESSAGE = 2;\n\t\n\tprivate Date fromDate;\n\tprivate Date toDate;\n\tprivate int firstPostId;\n\tprivate int lastPostId;\n\tprivate int type;\n\tprivate boolean avoidDuplicated;\n\t\n\tpublic LuceneReindexArgs(Date fromDate, Date toDate, int firstPostId, \n\t\tint lastPostId, boolean avoidDuplicated, int type)\n\t{\n\t\tthis.fromDate = fromDate;\n\t\tthis.toDate = toDate;\n\t\tthis.firstPostId = firstPostId;\n\t\tthis.lastPostId = lastPostId;\n\t\tthis.avoidDuplicated = avoidDuplicated;\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * @return the from\n\t */\n\tpublic Date getFromDate()\n\t{\n\t\treturn this.fromDate;\n\t}\n\n\t/**\n\t * @return the to\n\t */\n\tpublic Date getToDate()\n\t{\n\t\treturn this.toDate;\n\t}\n\n\t/**\n\t * @return the fetchStart\n\t */\n\tpublic int getFirstPostId()\n\t{\n\t\treturn this.firstPostId;\n\t}\n\n\t/**\n\t * @return the avoidDuplicated\n\t */\n\tpublic boolean avoidDuplicatedRecords()\n\t{\n\t\treturn this.avoidDuplicated;\n\t}\n\t\n\t/**\n\t * @return the fetchEnd\n\t */\n\tpublic int getLastPostId()\n\t{\n\t\treturn this.lastPostId;\n\t}\n\t\n\tpublic boolean filterByDate()\n\t{\n\t\treturn this.type == TYPE_DATE && this.getFromDate() != null && this.getToDate() != null;\n\t}\n\t\n\tpublic boolean filterByMessage()\n\t{\n\t\treturn this.type == TYPE_MESSAGE && this.getLastPostId() > this.getFirstPostId();\n\t}\n}",
  "metadata": {
    "fileId": "LuceneReindexArgs_java_chunk_1",
    "fileName": "LuceneReindexArgs.java",
    "filePath": "src/net/jforum/search/LuceneReindexArgs.java"
  }
}