{
  "pageContent": "File Path: src/net/jforum/util/legacy/commons/fileupload/DefaultFileItem.java\n\n Original Content: /*\n * Copyright 2001-2004 The Apache Software Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage net.jforum.util.legacy.commons.fileupload;\n\nimport java.io.File;\n\nimport net.jforum.util.legacy.commons.fileupload.disk.DiskFileItem;\n\n\n/**\n * <p> The default implementation of the\n * {@link org.apache.commons.fileupload.FileItem FileItem} interface.\n *\n * <p> After retrieving an instance of this class from a {@link\n * org.apache.commons.fileupload.DiskFileUpload DiskFileUpload} instance (see\n * {@link org.apache.commons.fileupload.DiskFileUpload\n * #parseRequest(javax.servlet.http.HttpServletRequest)}), you may\n * either request all contents of file at once using {@link #get()} or\n * request an {@link java.io.InputStream InputStream} with\n * {@link #getInputStream()} and process the file without attempting to load\n * it into memory, which may come handy with large files.\n *\n * @author <a href=\"mailto:Rafal.Krzewski@e-point.pl\">Rafal Krzewski</a>\n * @author <a href=\"mailto:sean@informage.net\">Sean Legassick</a>\n * @author <a href=\"mailto:jvanzyl@apache.org\">Jason van Zyl</a>\n * @author <a href=\"mailto:jmcnally@apache.org\">John McNally</a>\n * @author <a href=\"mailto:martinc@apache.org\">Martin Cooper</a>\n * @author Sean C. Sullivan\n *\n * @version $Id: DefaultFileItem.java,v 1.3 2005/07/26 03:05:00 rafaelsteil Exp $\n *\n * @deprecated Use <code>DiskFileItem</code> instead.\n */\npublic class DefaultFileItem\n    extends DiskFileItem {\n\n    // ----------------------------------------------------------- Constructors\n\n\n    /**\n     * Constructs a new <code>DefaultFileItem</code> instance.\n     *\n     * @param fieldName     The name of the form field.\n     * @param contentType   The content type passed by the browser or\n     *                      <code>null</code> if not specified.\n     * @param isFormField   Whether or not this item is a plain form field, as\n     *                      opposed to a file upload.\n     * @param fileName      The original filename in the user's filesystem, or\n     *                      <code>null</code> if not specified.\n     * @param sizeThreshold The threshold, in bytes, below which items will be\n     *                      retained in memory and above which they will be\n     *                      stored as a file.\n     * @param repository    The data repository, which is the directory in\n     *                      which files will be created, should the item size\n     *                      exceed the threshold.\n     *\n     * @deprecated Use <code>DiskFileItem</code> instead.\n     */\n    public DefaultFileItem(String fieldName, String contentType,\n            boolean isFormField, String fileName, int sizeThreshold,\n            File repository) {\n        super(fieldName, contentType, isFormField, fileName, sizeThreshold,\n                repository);\n    }\n\n\n}",
  "metadata": {
    "fileId": "DefaultFileItem_java_chunk_1",
    "fileName": "DefaultFileItem.java",
    "filePath": "src/net/jforum/util/legacy/commons/fileupload/DefaultFileItem.java"
  }
}