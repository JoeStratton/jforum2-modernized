{
  "pageContent": "File Path: src/net/jforum/dao/oracle/OracleModerationLogDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on Aug 31, 2007 7:21:02 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao.oracle;\n\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Timestamp;\nimport java.util.List;\n\nimport net.jforum.dao.generic.GenericModerationLogDAO;\nimport net.jforum.entities.ModerationLog;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.util.DbUtils;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * @author Rafael Steil\n * @version $Id: OracleModerationLogDAO.java,v 1.2 2007/09/11 04:00:45 rafaelsteil Exp $\n */\npublic class OracleModerationLogDAO extends GenericModerationLogDAO \n{\n\t/**\n\t * @see net.jforum.dao.generic.GenericModerationLogDAO#add(net.jforum.entities.ModerationLog)\n\t */\n\tpublic void add(ModerationLog log) \n\t{\n\t\tPreparedStatement p = null;\n\t\t\n\t\ttry {\n\t\t\tp = this.getStatementForAutoKeys(\"ModerationLog.addNew\");\n\t\t\t\n\t\t\tp.setInt(1, log.getUser().getId());\n\t\t\tp.setTimestamp(2, new Timestamp(System.currentTimeMillis()));\n\t\t\tp.setInt(3, log.getType());\n\t\t\tp.setInt(4, log.getPostId());\n\t\t\tp.setInt(5, log.getTopicId());\n\t\t\tp.setInt(6, log.getPosterUser().getId());\n\t\t\t\n\t\t\tif (log.getOriginalMessage() == null) {\n\t\t\t\tlog.setOriginalMessage(\"\");\n\t\t\t}\n\n\t\t\tthis.setAutoGeneratedKeysQuery(SystemGlobals.getSql(\"ModerationLog.lastGeneratedModerationLogId\"));\n\t\t\t\n\t\t\tint logId = this.executeAutoKeysQuery(p);\n\t\t\t\n\t\t\tlog.setId(logId);\n\t\t\t\n\t\t\tOracleUtils.writeBlobUTF16BinaryStream(SystemGlobals.getSql(\"ModerationLog.setDescription\"), \n\t\t\t\tlog.getId(), log.getDescription());\n\t\t\t\n\t\t\tOracleUtils.writeBlobUTF16BinaryStream(SystemGlobals.getSql(\"ModerationLog.setOriginalMessage\"), \n\t\t\t\tlog.getId(), log.getOriginalMessage());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\t\n\t/**\n\t * @see net.jforum.dao.generic.GenericModerationLogDAO#selectAll(int, int)\n\t */\n\tpublic List selectAll(int start, int count) \n\t{\n\t\treturn super.selectAll(start, start + count);\n\t}\n\t\n\t/**\n\t * @see net.jforum.dao.generic.GenericModerationLogDAO#readDesriptionFromResultSet(java.sql.ResultSet)\n\t */\n\tprotected String readDesriptionFromResultSet(ResultSet rs) throws SQLException \n\t{\n\t\treturn OracleUtils.readBlobUTF16BinaryStream(rs, \"log_description\");\n\t}\n\t\n\t/**\n\t * @see net.jforum.dao.generic.GenericModerationLogDAO#readOriginalMessageFromResultSet(java.sql.ResultSet)\n\t */\n\tprotected String readOriginalMessageFromResultSet(ResultSet rs) throws SQLException \n\t{\n\t\treturn OracleUtils.readBlobUTF16BinaryStream(rs, \"log_original_message\");\n\t}\n}",
  "metadata": {
    "fileId": "OracleModerationLogDAO_java_chunk_1",
    "fileName": "OracleModerationLogDAO.java",
    "filePath": "src/net/jforum/dao/oracle/OracleModerationLogDAO.java"
  }
}