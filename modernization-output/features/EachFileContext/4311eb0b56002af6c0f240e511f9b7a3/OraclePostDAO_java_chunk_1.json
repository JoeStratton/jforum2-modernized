{
  "pageContent": "File Path: src/net/jforum/dao/oracle/OraclePostDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on 24/05/2004 / 12:04:11\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao.oracle;\n\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.List;\n\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.dao.generic.GenericPostDAO;\nimport net.jforum.entities.Post;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.util.DbUtils;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * @author Dmitriy Kiriy\n * @version $Id: OraclePostDAO.java,v 1.12 2007/08/31 22:56:40 rafaelsteil Exp $\n */\npublic class OraclePostDAO extends GenericPostDAO\n{\n\t/**\n\t * @see net.jforum.dao.generic.GenericPostDAO#addNewPostText(net.jforum.entities.Post)\n\t */\n\tprotected void addNewPostText(Post post) throws Exception\n\t{\n\t\tPreparedStatement p = null;\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\tSystemGlobals.getSql(\"PostModel.addNewPostText\"));\n\t\t\tp.setInt(1, post.getId());\n\t\t\tp.setString(2, post.getSubject());\n\t\t\tp.executeUpdate();\n\t\t\tp.close();\n\n\t\t\tOracleUtils.writeBlobUTF16BinaryStream(SystemGlobals.getSql(\"PostModel.addNewPostTextField\"), \n\t\t\t\tpost.getId(), post.getText());\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.generic.GenericPostDAO#updatePostsTextTable(net.jforum.entities.Post)\n\t */\n\tprotected void updatePostsTextTable(Post post)\n\t{\n\t\tPreparedStatement p = null;\n\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"PostModel.updatePostText\"));\n\t\t\tp.setString(1, post.getSubject());\n\t\t\tp.setInt(2, post.getId());\n\n\t\t\tp.executeUpdate();\n\n\t\t\tOracleUtils.writeBlobUTF16BinaryStream(SystemGlobals.getSql(\"PostModel.addNewPostTextField\"), \n\t\t\t\tpost.getId(), post.getText());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.generic.GenericPostDAO#getPostTextFromResultSet(java.sql.ResultSet)\n\t */\n\tprotected String getPostTextFromResultSet(ResultSet rs) throws SQLException\n\t{\n\t\treturn OracleUtils.readBlobUTF16BinaryStream(rs, \"post_text\");\n\t}\n\n\t/**\n\t * @see net.jforum.dao.PostDAO#selectAllByTopicByLimit(int, int, int)\n\t */\n\tpublic List selectAllByTopicByLimit(int topicId, int startFrom, int count)\n\t{\n\t\treturn super.selectAllByTopicByLimit(topicId, startFrom, startFrom + count);\n\t}\n\n\t/**\n\t * @see net.jforum.dao.PostDAO#selectByUserByLimit(int, int, int)\n\t */\n\tpublic List selectByUserByLimit(int userId, int startFrom, int count)\n\t{\n\t\treturn super.selectByUserByLimit(userId, startFrom, startFrom + count);\n\t}\n}",
  "metadata": {
    "fileId": "OraclePostDAO_java_chunk_1",
    "fileName": "OraclePostDAO.java",
    "filePath": "src/net/jforum/dao/oracle/OraclePostDAO.java"
  }
}