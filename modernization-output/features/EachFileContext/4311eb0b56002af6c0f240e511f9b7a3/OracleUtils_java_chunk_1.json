{
  "pageContent": "File Path: src/net/jforum/dao/oracle/OracleUtils.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on Jan 26, 2005 4:42:44 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao.oracle;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.sql.Blob;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.util.DbUtils;\nimport oracle.sql.BLOB;\n\n/**\n * @author Dmitriy Kiriy\n * @version $Id: OracleUtils.java,v 1.14 2007/08/31 22:56:40 rafaelsteil Exp $\n */\npublic class OracleUtils\n{\n\tpublic static String readBlobUTF16BinaryStream(ResultSet rs, String fieldName) throws SQLException\n\t{\n\t\ttry {\n\t\t\tBlob clob = rs.getBlob(fieldName);\n\n\t\t\tInputStream is = clob.getBinaryStream();\n\t\t\tStringBuffer sb = new StringBuffer();\n\t\t\t\n\t\t\tint readedBytes;\n\t\t\tint bufferSize = 4096;\n\t\t\t\n\t\t\tdo {\n\t\t\t\tbyte[] bytes = new byte[bufferSize];\n\t\t\t\t\n\t\t\t\treadedBytes = is.read(bytes);\n\t\t\t\t\n\t\t\t\tif (readedBytes > 0) {\n\t\t\t\t\tString readed = new String(bytes, 0, readedBytes, \"UTF-16\");\n\t\t\t\t\tsb.append(readed);\n\t\t\t\t}\n\t\t\t} while (readedBytes == bufferSize);\n\n\t\t\tis.close();\n\t\t\treturn sb.toString();\n\t\t}\n\t\tcatch (IOException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t}\n\n\t/**\n\t * The query should look like:\n\t * \n\t * SELECT blob_field from any_table WHERE id = ? FOR UPDATE\n\t * \n\t * BUT KEEP IN MIND:\n\t * \n\t * When you insert record in previous step, it should go with empty_blob() like:\n\t * \n\t * INSERT INTO jforum_posts_text ( post_text ) VALUES (EMPTY_BLOB())\n\t * \n\t * @param query String\n\t * @param idForQuery int\n\t * @param value String\n\t * @throws SQLException\n\t */\n\tpublic static void writeBlobUTF16BinaryStream(String query, int idForQuery, String value) throws Exception\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\tOutputStream blobWriter = null;\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(query);\n\t\t\tp.setInt(1, idForQuery);\n\n\t\t\trs = p.executeQuery();\n\t\t\trs.next();\n\t\t\tBlob text = rs.getBlob(1);\n\n\t\t\tif (text instanceof BLOB) {\n\t\t\t\tblobWriter = ((BLOB) text).getBinaryOutputStream();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tblobWriter = text.setBinaryStream(0);\n\t\t\t}\n\n\t\t\tblobWriter.write(value.getBytes(\"UTF-16\"));\n\n\t\t\tblobWriter.close();\n\t\t}\n\t\tcatch (IOException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tif (blobWriter != null) {\n\t\t\t\tblobWriter.close();\n\t\t\t}\n\t\t\t\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n}",
  "metadata": {
    "fileId": "OracleUtils_java_chunk_1",
    "fileName": "OracleUtils.java",
    "filePath": "src/net/jforum/dao/oracle/OracleUtils.java"
  }
}