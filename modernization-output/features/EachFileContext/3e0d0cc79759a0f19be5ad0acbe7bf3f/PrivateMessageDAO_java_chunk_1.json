{
  "pageContent": "File Path: src/net/jforum/dao/PrivateMessageDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: 20/05/2004 - 15:37:25\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao;\n\nimport java.util.List;\n\nimport net.jforum.entities.PrivateMessage;\nimport net.jforum.entities.User;\n\n/**\n * @author Rafael Steil\n * @version $Id: PrivateMessageDAO.java,v 1.8 2007/08/01 22:30:04 rafaelsteil Exp $\n */\npublic interface PrivateMessageDAO\n{\n\t/**\n\t * Send a new <code>PrivateMessage</code>\n\t * \n\t * @param pm The pm to add\n\t */\n\tpublic void send(PrivateMessage pm) ;\n\t\n\t/**\n\t * Deletes a collection of private messages.\n\t * Each instance should at least have the private message\n\t * id and the owner user id.\n\t * \n\t * @param pm PrivateMessage[]\n\t * @param userId\n\t */\n\tpublic void delete(PrivateMessage[] pm, int userId) ;\n\t\n\t/**\n\t * Update the type of some private message.\n\t * You should pass as argument a <code>PrivateMessage</code> instance\n\t * with the pm's id and the new message status. There is no need to\n\t * fill the other members.\n\t * \n\t * @param pm The instance to update \n\t */\n\tpublic void updateType(PrivateMessage pm) ;\n\t\n\t/**\n\t * Selects all messages from the user's inbox. \n\t * \n\t * @param user The user to fetch the messages\n\t * @return A <code>List</code> with all messages found. Each \n\t * entry is a <code>PrivateMessage</code> entry.\n\t */\n\tpublic List selectFromInbox(User user) ;\n\t\n\t/**\n\t * Selects all messages from the user's sent box. \n\t * \n\t * @param user The user to fetch the messages\n\t * @return A <code>List</code> with all messages found. Each \n\t * entry is a <code>PrivateMessage</code> entry.\n\t */\n\tpublic List selectFromSent(User user) ;\n\t\n\t/**\n\t * Gets a <code>PrivateMessage</code> by its id.\n\t * \n\t * @param pm A <code>PrivateMessage</code> instance containing the pm's id\n\t * to retrieve\n\t * @return The pm contents\n\t */\n\tpublic PrivateMessage selectById(PrivateMessage pm) ;\n}",
  "metadata": {
    "fileId": "PrivateMessageDAO_java_chunk_1",
    "fileName": "PrivateMessageDAO.java",
    "filePath": "src/net/jforum/dao/PrivateMessageDAO.java"
  }
}