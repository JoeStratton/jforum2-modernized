{
  "pageContent": "File Path: src/net/jforum/dao/PollDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n *\n * Created on Dec 29, 2004 2:00:00 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao;\n\nimport net.jforum.entities.Poll;\n\npublic interface PollDAO {\n\n\t/**\n\t * Gets a specific <code>Poll</code>.\n\t * \n\t * @param pollId The Poll ID to search\n\t * @return <code>Poll</code>object containing all the information\n\t */\n\tpublic Poll selectById(int pollId) ;\n\t\t\n\t/**\n\t * Delete a Poll.\n\t * \n\t * @param pollId The Poll to delete\n\t */\n\tpublic void delete(int pollId) ;\n\t\t\n\t/**\n\t * Delete a Poll.\n\t * \n\t * @param topicId The topic id for the poll to delete\n\t */\n\tpublic void deleteByTopicId(int topicId) ;\n\t\n\t/**\n\t * Updates a Poll.\n\t * \n\t * @param poll Reference to a <code>Poll</code> object to update\n\t */\n\tpublic void update(Poll poll) ;\n\t\n\t/**\n\t * Adds a new Poll.\n\t * \n\t * @param poll Poll Reference to a valid and configured <code>Poll</code> object\n\t * @return The new ID\n\t */\n\tpublic int addNew(Poll poll) ;\n\n\t/**\n\t * Increments the vote count on the poll for the given poll id and option id\n\t * @param pollId the poll id that the vote is for\n\t * @param optionId the option that was selected for the poll\n\t * @param userId int \n\t * @param ipAddress String \n\t */\n\tpublic void voteOnPoll(int pollId, int optionId, int userId, String ipAddress);\n\t\n\t/**\n\t * Tells if the user has already voted on the given poll\n\t * @param pollId the poll id that is being checked\n\t * @param userId the user id to check the vote for\n\t * @return true if the user has already voted on the given poll\n\t */\n\tpublic boolean hasUserVotedOnPoll(int pollId, int userId) ;\n\t\n\t/**\n\t * Tells if any user has already voted on the given poll from the given IP\n\t * @param pollId the poll id that is being checked\n\t * @param ipAddress the IP address of the user to check the vote for\n\t * @return true if the user has already voted on the given poll\n\t */\n\tpublic boolean hasUserVotedOnPoll(int pollId, String ipAddress) ;\n}",
  "metadata": {
    "fileId": "PollDAO_java_chunk_1",
    "fileName": "PollDAO.java",
    "filePath": "src/net/jforum/dao/PollDAO.java"
  }
}