{
  "pageContent": "File Path: src/net/jforum/dao/BookmarkDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n *\n * Created on Jan 16, 2005 12:30:52 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao;\n\nimport java.util.List;\n\nimport net.jforum.entities.Bookmark;\n\n/**\n * @author Rafael Steil\n * @version $Id: BookmarkDAO.java,v 1.6 2006/08/23 02:13:35 rafaelsteil Exp $\n */\npublic interface BookmarkDAO\n{\n\t/**\n\t * Adds a new bookmark.\n\t * \n\t * @param b The bookmark to add\n\t */\n\tpublic void add(Bookmark b);\n\t\n\t/**\n\t * Updates a bookmark.\n\t * Only the fields <i>publicVisible</i>, <i>title</i>\n\t * and <i>description</i> are changed.\n\t * All other fields remain with the same value.\n\t * \n\t * @param b The bookmark to update\n\t */\n\tpublic void update(Bookmark b);\n\t\n\t/**\n\t * Removes a bookmark.\n\t * \n\t * @param bookmarkId The bookmark's id to remove\n\t */\n\tpublic void remove(int bookmarkId);\n\t\n\t/**\n\t * Gets all bookmarks of a given type.\n\t * \n\t * @param userId The bookmark's owner\n\t * @param relationType Any valid type declared in\n\t * <code>net.jforum.entities.BookmarkType</code>\n\t * @return A list with all results found. Each entry is\n\t * a {@link net.jforum.entities.Bookmark} instance.\n\t */\n\tpublic List selectByUser(int userId, int relationType);\n\t\n\t/**\n\t * Gets all bookmarks from some user.\n\t * \n\t * @param userId The bookmark's owner\n\t * <code>net.jforum.entities.BookmarkType</code>\n\t * @return A list with all results found. Each entry is\n\t * a {@link net.jforum.entities.Bookmark} instance.\n\t */\n\tpublic List selectByUser(int userId);\n\t\n\t/**\n\t * Gets a bookmark.\n\t * \n\t * @param bookmarkId The bookmark id\n\t * @return A Bookmark instance or null if no entry found\n\t */\n\tpublic Bookmark selectById(int bookmarkId);\n\t\n\t/**\n\t * Gets a bookmark for edition.\n\t * \n\t * @param relationId The relation's id\n\t * @param relationType The relation type.\n\t * @param userId The bookmark's owner\n\t * @return A bookmark instance of <code>null</code> if \n\t * the record cannot be found\n\t */\n\tpublic Bookmark selectForUpdate(int relationId, int relationType, int userId);\n}",
  "metadata": {
    "fileId": "BookmarkDAO_java_chunk_1",
    "fileName": "BookmarkDAO.java",
    "filePath": "src/net/jforum/dao/BookmarkDAO.java"
  }
}