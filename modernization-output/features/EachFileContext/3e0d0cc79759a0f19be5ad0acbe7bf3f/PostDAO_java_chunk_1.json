{
  "pageContent": "File Path: src/net/jforum/dao/PostDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creating date: Feb 23, 2003 / 2:49:48 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao;\n\nimport java.util.List;\n\nimport net.jforum.entities.Post;\n\n/**\n  * Model interface for {@link net.jforum.entities.Post}.\n * This interface defines methods which are expected to be\n * implementd by a specific data access driver. The intention is\n * to provide all functionality needed to update, insert, delete and\n * select some specific data.\n * \n * @author Rafael Steil\n * @version $Id: PostDAO.java,v 1.12 2007/08/20 19:35:52 rafaelsteil Exp $\n */\npublic interface PostDAO \n{\n\t/**\n\t * Gets a specific <code>Post</code>.\n\t * \n\t * @param postId The Post ID to search\n\t * @return <code>Post</code>object containing all the information\n\t */\n\tpublic Post selectById(int postId) ;\n\t\t\n\t/**\n\t * Delete a Post.\n\t * \n\t * @param post Post The Post to delete\n\t */\n\tpublic void delete(Post post) ;\n\t\n\t/**\n\t * Updates a Post.\n\t * \n\t * @param post Reference to a <code>Post</code> object to update\n\t */\n\tpublic void update(Post post) ;\n\t\n\t/**\n\t * Adds a new Post.\n\t * \n\t * @param post Post Reference to a valid and configured <code>Post</code> object\n\t * @return The new ID\n\t */\n\tpublic int addNew(Post post) ;\n\t\n\t/**\n\t * Selects all messages relacted to a specific topic. \n\t * \n\t * @param topicId The topic ID \n\t * @param startFrom The count position to start fetching\n\t * @param count The total number of records to retrieve\n\t * @return <code>ArrayList</code> containing all records found. Each entry of the <code>ArrayList</code> is a {@link net.jforum.entities.Post} object\n\t */\n\tpublic List selectAllByTopicByLimit(int topicId, int startFrom, int count) ;\n\n\n       /**\n\t * Selects all posts associated to a specific user and belonging to \n\t * given forums\n\t * @param userId int User ID.\n\t * @param startFrom int\n\t * @param count int\n\t * @return  List\n\t */\n\tpublic List selectByUserByLimit(int userId,int startFrom, int count) ;\n\n    /**\n     * Count user posts.\n     * @param userId int\n     * @return int\n     */\n\tpublic int countUserPosts(int userId) ;\n\n\t/**\n\t * Selects all messages relacted to a specific topic. \n\t * \n\t * @param topicId The topic ID \n\t * @return <code>ArrayList</code> containing all records found. Each entry of the <code>ArrayList</code> is a {@link net.jforum.entities.Post} object\n\t */\n\tpublic List selectAllByTopic(int topicId) ;\n\t\n\t/**\n\t * Delete all posts related to the given topic\n\t * \n\t * @param topicId int\n\t */\n\tpublic void deleteByTopic(int topicId) ;\n\n\t/**\n\t * Count how many previous posts there are before the given post id\n\t * @param postId int\n\t * @return int\n\t */\n\tpublic int countPreviousPosts(int postId) ;\n\t\n\tpublic List selectLatestByForumForRSS(int forumId, int limit);\n\t\n\tpublic List selectHotForRSS(int limit);\n}",
  "metadata": {
    "fileId": "PostDAO_java_chunk_1",
    "fileName": "PostDAO.java",
    "filePath": "src/net/jforum/dao/PostDAO.java"
  }
}