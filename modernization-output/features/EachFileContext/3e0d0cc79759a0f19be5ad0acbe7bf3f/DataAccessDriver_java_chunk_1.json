{
  "pageContent": "File Path: src/net/jforum/dao/DataAccessDriver.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: Mar 3, 2003 / 1:37:05 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao;\n\n\n\n/**\n * The class that every driver class must implement.\n * JForum implementation provides a simple and extremely\n * configurable way to use diferent database engines without\n * any modification to the core source code. \n * <br>\n * For example, if you want to use the Database \"XYZ\" as\n * backend, all you need to do is to implement <code>DataAccessDriver</code>,\n * all *Model classes and a specific file with the SQL queries. \n * <br>\n * The default implementation was written to support MySQL, so if you want a base code to\n * analise, look at <code>net.jforum.drivers.generic</code> package.\n * \n * @author Rafael Steil\n * @version $Id: DataAccessDriver.java,v 1.20 2007/07/28 20:07:18 rafaelsteil Exp $\n */\npublic abstract class DataAccessDriver \n{\n\tprivate static DataAccessDriver driver;\n\t\n\tprotected DataAccessDriver() {}\n\t\n\t/**\n\t * Starts the engine.\n\t * This method should be called when the system\n\t * is starting. \n\t * \n\t * @param implementation The dao.driver implementation\n\t */\n\tpublic static void init(DataAccessDriver implementation)\n\t{\n\t\tdriver = implementation;\n\t}\n\t\n\t/**\n\t * Gets a driver implementation instance. \n\t * You MUST use this method when you want a instance\n\t * of a valid <code>DataAccessDriver</code>. Never access\n\t * the driver implementation directly.  \n\t * \n\t * @return <code>DataAccessDriver</code> instance\n\t */\n\tpublic static DataAccessDriver getInstance()\n\t{\n\t\treturn driver;\n\t}\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.ForumDAO} instance. \n\t * \n\t * @return <code>net.jforum.model.ForumModel</code> instance\n\t */\n\tpublic abstract ForumDAO newForumDAO();\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.GroupDAO} instance\n\t * \n\t * @return <code>net.jforum.model.GroupModel</code> instance.\n\t */\n\tpublic abstract GroupDAO newGroupDAO();\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.PostDAO} instance.\n\t * \n\t * @return <code>net.jforum.model.PostModel</code> instance.\n\t */\n\tpublic abstract PostDAO newPostDAO();\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.PollDAO} instance.\n\t * \n\t * @return <code>net.jforum.model.PollModel</code> instance.\n\t */\n\tpublic abstract PollDAO newPollDAO();\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.RankingDAO} instance.\n\t * \n\t * @return <code>net.jforum.model.RankingModel</code> instance\n\t */\n\tpublic abstract RankingDAO newRankingDAO();\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.TopicDAO} instance.\n\t * \n\t * @return <code>net.jforum.model.TopicModel</code> instance.\n\t */\n\tpublic abstract TopicDAO newTopicDAO();\n\t\n\t/**\n\t * Gets an {@link net.jforum.dao.UserDAO} instance.\n\t * \n\t * @return <code>net.jforum.model.UserModel</code> instance.\n\t */\n\tpublic abstract UserDAO newUserDAO();\n\t\n\t/**\n\t * Gets an {@link net.jforum.dao.CategoryDAO} instance.\n\t * \n\t * @return <code>net.jforum.model.CategoryModel</code> instance.\n\t */\n\tpublic abstract CategoryDAO newCategoryDAO();\n\t\n\t/**\n\t * Gets an {@link net.jforum.dao.TreeGroupDAO} instance\n\t * \n\t * @return <code>net.jforum.model.TreeGroupModel</code> instance.\n\t */\n\tpublic abstract TreeGroupDAO newTreeGroupDAO();\n\n\t/**\n\t * Gets a {@link net.jforum.dao.SmilieDAO} instance\n\t * \n\t * @return <code>net.jforum.model.SmilieModel</code> instance.\n\t */\n\tpublic abstract SmilieDAO newSmilieDAO();\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.GroupSecurityDAO} instance\n\t * \n\t * @return <code>net.jforum.model.security.GroupSecurityModel</code> instance\n\t */\n\tpublic abstract GroupSecurityDAO newGroupSecurityDAO();\n\n\t/**\n\t * Gets a {@link net.jforum.dao.PrivateMessageDAO} instance\n\t * \n\t * @return <code>link net.jforum.model.security.PrivateMessageModel</code> instance\n\t */\n\tpublic abstract PrivateMessageDAO newPrivateMessageDAO();\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.UserSessionDAO} instance\n\t * \n\t * @return <code>link net.jforum.model.UserSessionModel</code> instance\n\t */\n\tpublic abstract UserSessionDAO newUserSessionDAO();\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.ConfigDAO} instance\n\t * \n\t * @return <code>link net.jforum.model.ConfigModel</code> instance\n\t */\n\tpublic abstract ConfigDAO newConfigDAO();\n\t/**\n\t * Gets a {@link net.jforum.dao.KarmaDAO} instance\n\t * \n\t * @return <code>link net.jforum.model.KarmaModel</code> instance\n\t */\n\tpublic abstract KarmaDAO newKarmaDAO();\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.BookmarkDAO} instance\n\t * \n\t * @return <code>link net.jforum.model.BookmarkModel</code> instance\n\t */\n\tpublic abstract BookmarkDAO newBookmarkDAO();\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.AttachmentDAO} instance\n\t * \n\t * @return <code>link net.jforum.model.AttachmentModel</code> instance\n\t */\n\tpublic abstract AttachmentDAO newAttachmentDAO();\n\t\n\t/**\n\t * Gets a {@link net.jforum.dao.ModerationDAO} instance\n\t * \n\t * @return <code>link net.jforum.model.ModerationModel</code> instance\n\t */\n\tpublic abstract ModerationDAO newModerationDAO();\n\n\t/**\n\t * Gets an {@link net.jforum.dao.BannerDAO} instance.\n\t *\n\t * @return <code>net.jforum.dao.BannerDAO</code> instance.\n\t */\n\tpublic abstract BannerDAO newBannerDAO();\n    \n    /**\n     * Gets an {@link net.jforum.dao.SummaryDAO} instance.\n     *\n     * @return <code>net.jforum.dao.SummaryDAO</code> instance.\n     */\n    public abstract SummaryDAO newSummaryDAO();\n    \n    /**\n     * Gets a {@link net.jforum.dao.MailIntegrationDAO} instance.\n     *\n     * @return <code>net.jforum.dao.MailIntegrationDAO</code> instance.\n     */\n    public abstract MailIntegrationDAO newMailIntegrationDAO();\n\n    /**\n     * Gets a {@link net.jforum.dao.ApiDAO} instance.\n     *\n     * @return <code>net.jforum.dao.ApiDAO</code> instance.\n     */\n\tpublic abstract ApiDAO newApiDAO();\n\n\tpublic abstract BanlistDAO newBanlistDAO();\n\t\n\tpublic abstract ModerationLogDAO newModerationLogDAO();\n\t\n\tpublic abstract LuceneDAO newLuceneDAO();\n}",
  "metadata": {
    "fileId": "DataAccessDriver_java_chunk_1",
    "fileName": "DataAccessDriver.java",
    "filePath": "src/net/jforum/dao/DataAccessDriver.java"
  }
}