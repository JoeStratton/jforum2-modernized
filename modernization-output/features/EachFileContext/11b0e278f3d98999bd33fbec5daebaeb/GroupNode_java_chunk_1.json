{
  "pageContent": "File Path: src/net/jforum/util/GroupNode.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n\n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n\n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: Mar 3, 2003 / 11:29:45 AM\n * net.jforum.view.GroupNode.java\n * The JForum Project\n * http://www.jforum.net\n * \n * $Id: GroupNode.java,v 1.5 2006/08/23 02:13:44 rafaelsteil Exp $\n */\npackage net.jforum.util;\n\nimport java.util.ArrayList;\n\n/** \n * Represents a node in the group hierarchy.\n * Every single group has a name and an ID, and each group may have \n * unlimited subgroups. which may have sub-subgroups and so on.\n * This class represents a specific group, supplying methods to add new\n * groups and get information about them, as well all related sugroups.\n * <p>\n * This class is also used toghether with <code>TreeGroup</code>.\n * \n * @author Rafael Steil\n */\npublic class GroupNode \n{\n\tprivate String name;\n\tprivate int id;\n\t\n\t/**\n\t * Subgroups of the instantiated group\n\t */\n\tprivate ArrayList extraNodes;\n\n\t/**\n\t * Default Constructor\n\t */\n\tpublic GroupNode()\n\t{\n\t\tthis.extraNodes = new ArrayList();\n\t}\n\n\t/**\n\t * Gets a node.\n\t * \n\t * @param pos Node position to retrieve\n\t * @return <code>GroupNode</code>\n\t * */\n\tpublic GroupNode getNode(int pos)\n\t{\n\t\treturn (GroupNode)this.extraNodes.get(pos);\n\t}\n\n\t/**\n\t * Adds a new node.\n\t * \n\t * @param n Node to add\n\t * */\n\tpublic void addNode(GroupNode n)\n\t{\n\t\tthis.extraNodes.add(n);\n\t}\n\n\t/**\n\t * Gets the total number of nodes \n\t * \n\t * @return Quantidade de nos. \n\t * */\n\tpublic int size()\n\t{\n\t\treturn this.extraNodes.size();\n\t}\n\n\t/**\n\t * Sets the node's name\n\t * \n\t * @param name Node name\n\t * */\n\tpublic void setName(String name)\n\t{\n\t\tthis.name = name;\n\t}\n\n\t/**\n\t * Sets the node's ID\n\t * \n\t * @param id Node ID\n\t * */\n\tpublic void setId(int id)\n\t{\n\t\tthis.id = id;\n\t}\n\n\t/**\n\t * Gets the name of the node\n\t * \n\t * @return String with the name\n\t * */\t\n\tpublic String getName()\n\t{\n\t\treturn this.name;\n\t}\n\t\n\t/**\n\t * Gets the ID\n\t * \n\t * @return Node ID\n\t * */\n\tpublic int getId()\n\t{\n\t\treturn this.id;\n\t}\n}",
  "metadata": {
    "fileId": "GroupNode_java_chunk_1",
    "fileName": "GroupNode.java",
    "filePath": "src/net/jforum/util/GroupNode.java"
  }
}