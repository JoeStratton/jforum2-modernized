{
  "pageContent": "File Path: src/net/jforum/security/XMLPermissionControl.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: 21/09/2003 / 16:36:44\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.security;\n\nimport java.io.File;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\n\nimport javax.xml.parsers.SAXParser;\nimport javax.xml.parsers.SAXParserFactory;\n\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.exceptions.ForumException;\nimport net.jforum.util.DbUtils;\nimport net.jforum.util.FormSelectedData;\nimport net.jforum.util.I18n;\nimport net.jforum.util.preferences.SystemGlobals;\n\nimport org.xml.sax.Attributes;\nimport org.xml.sax.InputSource;\nimport org.xml.sax.SAXException;\nimport org.xml.sax.SAXParseException;\nimport org.xml.sax.helpers.DefaultHandler;\n\n/**\n * Manipulates XML permission control file definition \n * \n * @author Rafael Steil\n * @version $Id: XMLPermissionControl.java,v 1.18 2007/09/21 03:47:41 rafaelsteil Exp $\n */\npublic class XMLPermissionControl extends DefaultHandler \n{\n    private PermissionSection section;\n\tprivate PermissionControl pc;\n\tprivate List listSections;\n\tprivate List permissionData;\n\tprivate Map queries;\n\tprivate String permissionName;\n\tprivate String permissionId;\n\tprivate String permissionType;\n\t\n\tprivate boolean alreadySelected;\n\t\n\tprivate static class SelectData\n\t{\n\t\tprivate int id;\n\t\tprivate String name;\n\t\t\n\t\tpublic SelectData(int id, String name)\n\t\t{\n\t\t\tthis.id = id;\n\t\t\tthis.name = name;\n\t\t}\n\t\t\n\t\tpublic int getId()\n\t\t{\n\t\t\treturn this.id;\n\t\t}\n\t\t\n\t\tpublic String getName()\n\t\t{\n\t\t\treturn this.name;\n\t\t}\n\t}\n\t\n\tpublic XMLPermissionControl(PermissionControl pc)\n\t{\n\t\tthis.listSections = new ArrayList();\n\t\tthis.permissionData = new ArrayList();\n\t\tthis.queries = new HashMap();\n\t\tthis.pc = pc;\n\t}\n\n\t/**\n\t * @return <code>List</code> object containing <code>Section</code> objects. Each\n\t * <code>Section</code>  contains many <code>PermissionItem</code> objects, \n\t * which represent the permission elements of some section. For its turn, the\n\t * <code>PermissionItem</code> objects have many <code>FormSelectedData</code>\n\t * objects, which are the ones responsible to store field values, and which values\n\t * are checked and which not.\n     * @param xmlFile String\n\t */\n\tpublic List loadConfigurations(String xmlFile)\n\t{\n        try\n        {\n            SAXParserFactory factory = SAXParserFactory.newInstance();\n            factory.setValidating(false);\n\n            SAXParser parser = factory.newSAXParser();\n            File fileInput = new File(xmlFile);\n\n            if (fileInput.exists()) {\n                parser.parse(fileInput, this);\n            }\n            else {\n                InputSource inputSource = new InputSource(xmlFile);\n                parser.parse(inputSource, this);\n            }\n\n            return this.listSections;\n        }\n        catch (Exception e)\n        {\n            throw new ForumException(e);\n        }\n    }\n\n\t/**\n\t * @see org.xml.sax.ContentHandler#endElement(String, String, String)\n\t */\n\tpublic void endElement(String namespaceURI, String localName, String tag)\n\t\tthrows SAXException \n\t{\n\t\tif (tag.equals(\"section\")) {\n\t\t\tthis.listSections.add(this.section);\n\t\t}\n\t\telse if (tag.equals(\"permission\")) {\n\t\t\tthis.section.addPermission(new PermissionItem(this.permissionName, this.permissionId, this.permissionType, this.permissionData));\n\n\t\t\tthis.permissionData = new ArrayList();\n\t\t}\n\t}\n\n\t/**\n\t * @see org.xml.sax.ErrorHandler#error(SAXParseException)\n\t */\n\tpublic void error(SAXParseException exception) throws SAXException \n\t{\n\t\tthrow exception;\n\t}\n\n\t/**\n\t * @see org.xml.sax.ContentHandler#startElement(String, String, String, Attributes)\n\t */\n\tpublic void startElement(\n\t\tString namespaceURI,\n\t\tString localName,\n\t\tString tag,\n\t\tAttributes atts)\n\t\tthrows SAXException \n\t{\n\t\tif (tag.equals(\"section\")) {\n\t\t\tString title = I18n.getMessage(atts.getValue(\"title\"));\n\t\t\tthis.section = new PermissionSection(title, atts.getValue(\"id\"));\n\t\t}\n\t\telse if (tag.equals(\"permission\")) {\n\t\t\tString title = I18n.getMessage(atts.getValue(\"title\"));\n\t\t\t\n\t\t\tthis.permissionName = title;\n\t\t\tthis.permissionId = atts.getValue(\"id\");\n\t\t\tthis.permissionType = atts.getValue(\"type\");\n\t\t\tthis.alreadySelected = false;\n\t\t}\n\t\telse if (tag.equals(\"sql\")) {\n\t\t\tString refName = atts.getValue(\"refName\");\n\t\t\t\n\t\t\t// If refName is present, then we have a template query\n\t\t\tif (refName != null) {\n                ResultSet rs = null;\n                PreparedStatement p = null;\n                \n\t\t\t\ttry {\n\t\t\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\t\tSystemGlobals.getSql(atts.getValue(\"queryName\")));\n\t\t\t\t\trs = p.executeQuery();\n\t\t\t\t\t\n\t\t\t\t\tString valueField = atts.getValue(\"valueField\");\n\t\t\t\t\tString captionField = atts.getValue(\"captionField\");\n\t\t\t\t\t\n\t\t\t\t\tList l = new ArrayList();\n\t\t\t\t\t\n\t\t\t\t\twhile (rs.next()) {\n\t\t\t\t\t\tl.add(new SelectData(rs.getInt(valueField), rs.getString(captionField)));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.queries.put(refName, l);\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n                    throw new DatabaseException(e);\n\t\t\t\t}\n\t\t\t\tfinally {\n                    DbUtils.close(rs, p);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If it gets here, then it should be a <sql ref=\"xxxx\"> section\n\t\t\t\tRoleValueCollection roleValues = new RoleValueCollection();\n\t\t\t\tRole role = this.pc.getRole(this.permissionId);\n\t\t\t\t\n\t\t\t\tif (role != null) {\n\t\t\t\t\troleValues = role.getValues();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tList l = (List)this.queries.get(atts.getValue(\"ref\"));\n\t\t\t\t\n\t\t\t\tfor (Iterator iter = l.iterator(); iter.hasNext(); ) {\n\t\t\t\t\tSelectData data = (SelectData)iter.next();\n\t\t\t\t\t\n\t\t\t\t\tString id = Integer.toString(data.getId());\n\t\t\t\t\tRoleValue rv = roleValues.get(id);\n\n\t\t\t\t\tthis.permissionData.add(new FormSelectedData(data.getName(), id, rv == null));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (tag.equals(\"option\")) {\n\t\t\tboolean selected = false;\n\t\t\t\n\t\t\tif (this.permissionType.equals(\"single\")) {\n\t\t\t\tif (this.pc.canAccess(this.permissionId) && atts.getValue(\"value\").equals(\"allow\") && !this.alreadySelected) {\n\t\t\t\t\tselected = true;\n\t\t\t\t\tthis.alreadySelected = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new UnsupportedOperationException(\"'option' tag with 'multiple' attribute support not yet implemented\");\n\t\t\t}\n\t\t\t\n\t\t\tthis.permissionData.add(new FormSelectedData(\n\t\t\t\tI18n.getMessage(atts.getValue(\"description\")), atts.getValue(\"value\"), selected));\n\t\t}\n\t}\n}",
  "metadata": {
    "fileId": "XMLPermissionControl_java_chunk_1",
    "fileName": "XMLPermissionControl.java",
    "filePath": "src/net/jforum/security/XMLPermissionControl.java"
  }
}