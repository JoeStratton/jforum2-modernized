{
  "pageContent": "File Path: src/net/jforum/security/RoleValueCollection.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n\n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n\n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: 08/01/2004 / 21:41:11\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.security;\n\nimport java.io.Serializable;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.LinkedHashSet;\n\n/**\n * @author Rafael Steil\n * @version $Id: RoleValueCollection.java,v 1.9 2006/08/24 01:07:01 rafaelsteil Exp $\n */\npublic class RoleValueCollection extends LinkedHashSet implements Serializable \n{\n\t/**\n\t * Gets a <code>RoleValue</code> by its name.\n\t * \n\t * @param valueName The <code>RoleValue</code> name\n\t * @return The <code>RoleValue</code> object if found, or <code>null</code> if not found\n\t */\n\tpublic RoleValue get(String valueName)\n\t{\n\t\tfor (Iterator iter = this.iterator(); iter.hasNext(); ) {\n\t\t\tRoleValue v = (RoleValue)iter.next();\n\t\t\t\n\t\t\tif (v.getValue().equals(valueName)) {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\t/** \n\t * @see java.util.HashSet#contains(java.lang.Object)\n\t */\n\tpublic boolean contains(Object o) \n\t{\n\t\tboolean c = super.contains(o);\n\t\treturn c;\n\t}\n\t\n\t/** \n\t * @see java.util.ArrayList#add(java.lang.Object)\n\t */\n\tpublic boolean add(Object o) \n\t{\n\t\tif (!(o instanceof RoleValue)) {\n\t\t\tthrow new IllegalArgumentException(\"Object passed as parameter is not a RoleValue type\");\n\t\t}\n\t\t\n\t\treturn super.add(o);\n\t}\n\n\t/** \n\t * @see java.util.Collection#addAll(java.util.Collection)\n\t */\n\tpublic boolean addAll(Collection c) \n\t{\n\t\tboolean status = true;\n\t\t\n\t\tfor (Iterator iter = c.iterator(); iter.hasNext(); ) {\n\t\t\tstatus = this.add(iter.next());\n\t\t}\n\t\t\n\t\treturn status;\n\t}\n}",
  "metadata": {
    "fileId": "RoleValueCollection_java_chunk_1",
    "fileName": "RoleValueCollection.java",
    "filePath": "src/net/jforum/security/RoleValueCollection.java"
  }
}