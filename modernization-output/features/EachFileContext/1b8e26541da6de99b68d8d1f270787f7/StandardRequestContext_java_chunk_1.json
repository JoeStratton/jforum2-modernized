{
  "pageContent": "File Path: src/net/jforum/context/standard/StandardRequestContext.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on 26/08/2006 21:56:05\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.context.standard;\n\nimport java.io.UnsupportedEncodingException;\nimport java.util.Enumeration;\nimport java.util.Hashtable;\nimport java.util.Locale;\n\nimport javax.servlet.http.Cookie;\n\nimport net.jforum.context.RequestContext;\nimport net.jforum.context.SessionContext;\n\n/**\n * Request context non-dependent of HTTP \n * @author Rafael Steil\n * @version $Id: StandardRequestContext.java,v 1.6 2007/09/20 16:07:09 rafaelsteil Exp $\n */\npublic class StandardRequestContext implements RequestContext\n{\n\tprivate Hashtable data;\n\tprivate SessionContext sessionContext;\n\t\n\tpublic StandardRequestContext()\n\t{\n\t\tthis.data = new Hashtable();\n\t\tthis.sessionContext = new StandardSessionContext();\n\t}\n\t\n\t/**\n\t * @see net.jforum.context.RequestContext#addParameter(java.lang.String, java.lang.Object)\n\t */\n\tpublic void addParameter(String name, Object value)\n\t{\n\t\tif (this.data.contains(name)) {\n\t\t\tthis.data.remove(name);\n\t\t}\n\t\t\n\t\tthis.data.put(name, value);\n\t}\n\t\n\t/**\n\t * @see net.jforum.context.RequestContext#addOrReplaceParameter(java.lang.String, java.lang.Object)\n\t */\n\tpublic void addOrReplaceParameter(String name, Object value) \n\t{\n\t\tthis.addParameter(name, value);\n\t}\n\n\t/**\n\t * @see net.jforum.context.RequestContext#getAction()\n\t */\n\tpublic String getAction()\n\t{\n\t\t\n\t\treturn null;\n\t}\n\n\t/**\n\t * @see net.jforum.context.RequestContext#getAttribute(java.lang.String)\n\t */\n\tpublic Object getAttribute(String name)\n\t{\n\t\treturn this.getParameter(name);\n\t}\n\n\t/**\n\t * This method will always return null\n\t */\n\tpublic String getContextPath()\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * This method will always return null\n\t */\n\tpublic Cookie[] getCookies()\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * This method will always return null\n\t */\n\tpublic String getHeader(String name)\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * @see net.jforum.context.RequestContext#getIntParameter(java.lang.String)\n\t */\n\tpublic int getIntParameter(String parameter)\n\t{\n\t\treturn Integer.parseInt(this.getParameter(parameter));\n\t}\n\n\t/**\n\t * @see net.jforum.context.RequestContext#getModule()\n\t */\n\tpublic String getModule()\n\t{\n\t\t\n\t\treturn null;\n\t}\n\n\t/**\n\t * @see net.jforum.context.RequestContext#getObjectParameter(java.lang.String)\n\t */\n\tpublic Object getObjectParameter(String parameter)\n\t{\n\t\treturn this.data.get(parameter);\n\t}\n\n\t/**\n\t * @see net.jforum.context.RequestContext#getParameter(java.lang.String)\n\t */\n\tpublic String getParameter(String name)\n\t{\n\t\tObject value = this.data.get(name);\n\t\treturn value != null ? value.toString() : null;\n\t}\n\n\t/**\n\t * @see net.jforum.context.RequestContext#getParameterNames()\n\t */\n\tpublic Enumeration getParameterNames()\n\t{\n\t\treturn this.data.elements();\n\t}\n\n\t/**\n\t * This method will always return null;\n\t */\n\tpublic String[] getParameterValues(String name)\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * This method will always return null\n\t */\n\tpublic String getQueryString()\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * @see net.jforum.context.RequestContext#getRemoteAddr()\n\t */\n\tpublic String getRemoteAddr()\n\t{\n\t\t\n\t\treturn null;\n\t}\n\n\t/**\n\t * This method will always return null\n\t */\n\tpublic String getRemoteUser()\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * This method will always return null\n\t */\n\tpublic String getRequestURI()\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * This method will always return null\n\t */\n\tpublic String getScheme()\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * This method will always return null\n\t */\n\tpublic String getServerName()\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * This method will always return 0\n\t */\n\tpublic int getServerPort()\n\t{\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @see net.jforum.context.RequestContext#getSessionContext()\n\t */\n\tpublic SessionContext getSessionContext()\n\t{\n\t\treturn this.sessionContext;\n\t}\n\n\t/**\n\t * This method is equal to {@link #getSessionContext()}\n\t */\n\tpublic SessionContext getSessionContext(boolean create)\n\t{\n\t\treturn this.getSessionContext();\n\t}\n\n\t/**\n\t * @see net.jforum.context.RequestContext#removeAttribute(java.lang.String)\n\t */\n\tpublic void removeAttribute(String name)\n\t{\n\t\tthis.data.remove(name);\n\t}\n\n\t/**\n\t * This method is equal to {@link #addParameter(String, Object)}\n\t */\n\tpublic void setAttribute(String name, Object o)\n\t{\n\t\tthis.addParameter(name, o);\n\t}\n\n\t/**\n\t * This method does nothing \n\t */\n\tpublic void setCharacterEncoding(String env) throws UnsupportedEncodingException {}\n\n\tpublic Locale getLocale() {\n\t\t\n\t\treturn null;\n\t}\n}",
  "metadata": {
    "fileId": "StandardRequestContext_java_chunk_1",
    "fileName": "StandardRequestContext.java",
    "filePath": "src/net/jforum/context/standard/StandardRequestContext.java"
  }
}