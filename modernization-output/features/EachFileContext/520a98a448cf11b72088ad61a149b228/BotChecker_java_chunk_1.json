{
  "pageContent": "File Path: src/net/jforum/util/legacy/clickstream/BotChecker.java\n\n Original Content: package net.jforum.util.legacy.clickstream;\n\nimport java.util.Iterator;\nimport java.util.List;\n\nimport javax.servlet.http.HttpServletRequest;\n\nimport net.jforum.util.legacy.clickstream.config.ClickstreamConfig;\nimport net.jforum.util.legacy.clickstream.config.ConfigLoader;\n\n/**\n * Determines if a request is actually a bot or spider.\n * \n * @author <a href=\"plightbo@hotmail.com\">Patrick Lightbody</a>\n * @author Rafael Steil (little hacks for JForum)\n * @version $Id: BotChecker.java,v 1.6 2005/12/18 02:12:54 rafaelsteil Exp $\n */\npublic class BotChecker\n{\n\t/**\n\t * Checks if we have a bot\n\t * @param request the request\n\t * @return <code>null</code> if there is no bots in the current request, \n\t * or the bot's name otherwise\n\t */\n\tpublic static String isBot(HttpServletRequest request)\n\t{\n\t\tif (request.getRequestURI().indexOf(\"robots.txt\") != -1) {\n\t\t\t// there is a specific request for the robots.txt file, so we assume\n\t\t\t// it must be a robot (only robots request robots.txt)\n\t\t\treturn \"Unknown (asked for robots.txt)\";\n\t\t}\n\t\t\n\t\tString userAgent = request.getHeader(\"User-Agent\");\n\t\t\n\t\tClickstreamConfig config = ConfigLoader.instance().getConfig();\n\t\t\n\t\tif (userAgent != null && config != null) {\n\t\t\tList agents = config.getBotAgents();\n\t\t\t\n\t\t\tuserAgent = userAgent.toLowerCase();\n\t\t\t\n\t\t\tfor (Iterator iterator = agents.iterator(); iterator.hasNext(); ) {\n\t\t\t\tString agent = (String) iterator.next();\n\t\t\t\t\n\t\t\t\tif (agent == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (userAgent.indexOf(agent) != -1) {\n\t\t\t\t\treturn userAgent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tString remoteHost = request.getRemoteHost(); // requires a DNS lookup\n\t\t\n\t\tif (remoteHost != null && remoteHost.length() > 0 && remoteHost.charAt(remoteHost.length() - 1) > 64) {\n\t\t\tList hosts = config.getBotHosts();\n\t\t\t\n\t\t\tremoteHost = remoteHost.toLowerCase();\n\t\t\t\n\t\t\tfor (Iterator iterator = hosts.iterator(); iterator.hasNext(); ) {\n\t\t\t\tString host = (String) iterator.next();\n\t\t\t\t\n\t\t\t\tif (host == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (remoteHost.indexOf(host) != -1) {\n\t\t\t\t\treturn remoteHost;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}",
  "metadata": {
    "fileId": "BotChecker_java_chunk_1",
    "fileName": "BotChecker.java",
    "filePath": "src/net/jforum/util/legacy/clickstream/BotChecker.java"
  }
}