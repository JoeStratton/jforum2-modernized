{
  "pageContent": "File Path: src/net/jforum/entities/Forum.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creating date: Feb 23, 2003 / 12:25:04 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.entities;\n\nimport java.io.Serializable;\nimport java.util.List;\n\nimport net.jforum.repository.ForumRepository;\n\n/**\n * Represents a specific forum.\n * \n * @author Rafael Steil\n * @version $Id: Forum.java,v 1.13 2007/07/28 14:17:09 rafaelsteil Exp $\n */\npublic class Forum implements Serializable\n{\n\tprivate int id;\n\tprivate int idCategories;\n\tprivate String name;\n\tprivate String description;\n\tprivate int order;\n\tprivate int totalTopics;\n\tprivate int totalPosts;\n\tprivate int lastPostId;\n\tprivate boolean moderated;\n\tprivate boolean unread;\n\tprivate LastPostInfo lpi;\n\n\tpublic Forum() { }\n\t\n\tpublic Forum(int forumId) {\n\t\tthis.id = forumId;\n\t}\n\t\n\tpublic Forum(Forum f)\n\t{\n\t\tthis.description = f.getDescription();\n\t\tthis.id = f.getId();\n\t\tthis.idCategories = f.getCategoryId();\n\t\tthis.lastPostId = f.getLastPostId();\n\t\tthis.moderated = f.isModerated();\n\t\tthis.name = f.getName();\n\t\tthis.order = f.getOrder();\n\t\tthis.totalPosts = f.getTotalPosts();\n\t\tthis.totalTopics = f.getTotalTopics();\n\t\tthis.unread = f.getUnread();\n\t\tthis.lpi = f.getLastPostInfo();\n\t}\n\t\n\tpublic void setLastPostInfo(LastPostInfo lpi) {\n\t\tthis.lpi = lpi;\n\t}\n\t\n\tpublic LastPostInfo getLastPostInfo() {\n\t\treturn this.lpi;\n\t}\n\t\n\tpublic List getModeratorList() \n\t{\n\t\treturn ForumRepository.getModeratorList(this.id);\n\t}\n\t\n\t/**\n\t * Gets the forum's description\n\t * \n\t * @return String with the description\n\t */\n\tpublic String getDescription() {\n\t\treturn this.description;\n\t}\n\n\t/**\n\t * Gets the forum's ID\n\t * \n\t * @return int value representing the ID\n\t */\n\tpublic int getId() {\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * Gets the category which the forum belongs to\n\t * \n\t * @return int value representing the ID of the category \n\t */\n\tpublic int getCategoryId() {\n\t\treturn this.idCategories;\n\t}\n\n\t/**\n\t * Gets the ID of the last post\n\t * \n\t * @return int value representing the ID of the post\n\t */\n\tpublic int getLastPostId() {\n\t\treturn this.lastPostId;\n\t}\n\n\t/**\n\t * Checks if is a moderated forum\n\t * \n\t * @return boolean value. <code>true</code> if the forum is moderated, <code>false</code> if not.\n\t */\n\tpublic boolean isModerated() {\n\t\treturn this.moderated;\n\t}\n\n\t/**\n\t * Gets the name of the forum\n\t * \n\t * @return String with the name\n\t */\n\tpublic String getName() {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * Gets the order\n\t * \n\t * @return int value representing the order of the forum\n\t */\n\tpublic int getOrder() {\n\t\treturn this.order;\n\t}\n\n\t/**\n\t * Gets the total number of topics posted in the forum\n\t * \n\t * @return int value with the total number of the topics\n\t */\n\tpublic int getTotalTopics() {\n\t\treturn this.totalTopics;\n\t}\n\t\n\tpublic boolean getUnread() {\n\t\treturn this.unread;\n\t}\n\n\t/**\n\t * Sets the description.\n\t * \n\t * @param description The description to set\n\t */\n\tpublic void setDescription(String description) {\n\t\tthis.description = description;\n\t}\n\n\t/**\n\t * Sets the id.\n\t * \n\t * @param id The id to set\n\t */\n\tpublic void setId(int id) {\n\t\tthis.id = id;\n\t}\n\n\t/**\n\t * Sets the category id\n\t * \n\t * @param idCategories The ID of the category  to set to the forum\n\t */\n\tpublic void setIdCategories(int idCategories) {\n\t\tthis.idCategories = idCategories;\n\t}\n\n\t/**\n\t * Sets the ID of the last post\n\t * \n\t * @param lastPostId The post id\n\t */\n\tpublic void setLastPostId(int lastPostId) {\n\t\tthis.lastPostId = lastPostId;\n\t}\n\n\t/**\n\t * Sets the moderated flag to the forum\n\t * \n\t * @param moderated <code>true</code> or <code>false</code>\n\t */\n\tpublic void setModerated(boolean moderated) {\n\t\tthis.moderated = moderated;\n\t}\n\n\t/**\n\t * Sets the name of the forum\n\t * \n\t * @param name The name to set\n\t */\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\t/**\n\t * Sets the order.\n\t * \n\t * @param order The order to set\n\t */\n\tpublic void setOrder(int order) {\n\t\tthis.order = order;\n\t}\n\t\n\tpublic void setUnread(boolean status) {\n\t\tthis.unread = status;\n\t}\n\n\t/**\n\t * Sets the total number of topics\n\t * \n\t * @param totalTopics int value with the total number of topics\n\t */\n\tpublic void setTotalTopics(int totalTopics) {\n\t\tthis.totalTopics = totalTopics;\n\t}\n\t\n\tpublic int getTotalPosts() {\n\t\treturn this.totalPosts;\n\t}\n\t\n\tpublic void setTotalPosts(int totalPosts) {\n\t\tthis.totalPosts = totalPosts;\n\t}\n\t\n\t/** \n\t * @see java.lang.Object#equals(java.lang.Object)\n\t */\n\tpublic boolean equals(Object o) \n\t{\n\t\treturn ((o instanceof Forum) && (((Forum)o).getId() == this.id));\n\t}\n\n\t/** \n\t * @see java.lang.Object#hashCode()\n\t */\n\tpublic int hashCode() \n\t{\n\t\treturn this.id;\n\t}\n\t\n\t/** \n\t * @see java.lang.Object#toString()\n\t */\n\tpublic String toString() {\n\t\treturn \"[\" + this.name + \", id=\" + this.id + \", order=\" + this.order + \"]\";\n\t}\n}",
  "metadata": {
    "fileId": "Forum_java_chunk_1",
    "fileName": "Forum.java",
    "filePath": "src/net/jforum/entities/Forum.java"
  }
}