{
  "pageContent": "File Path: src/net/jforum/entities/Post.java\n\n Original Content: public class Post implements Serializable \n{\n\tprivate int id;\n\tprivate int topicId;\n\tprivate int forumId;\n\tprivate String formatedTime;\n\tprivate int userId;\n\tprivate Date time;\n\tprivate String text;\n\tprivate String subject;\n\tprivate String postUsername;\n\tprivate boolean bbCodeEnabled = true;\n\tprivate boolean htmlEnabled = true;\n\tprivate boolean smiliesEnabled = true;\n\tprivate boolean signatureEnabled = true;\n\tprivate Date editTime;\n\tprivate int editCount;\n\tprivate String userIp;\n\tprivate boolean canEdit;\n\tprivate KarmaStatus karma;\n\tprivate boolean hasAttachments;\n\tprivate boolean moderate;\n\n\tpublic Post() { }\n\t\n\tpublic Post(int postId)\n\t{\n\t\tthis.id = postId;\n\t}\n\t\n\t/**\n\t * Copy constructor\n\t * \n\t * @param p The Post to make a copy from\n\t */\n\tpublic Post(Post p)\n\t{\n\t\tthis.setBbCodeEnabled(p.isBbCodeEnabled());\n\t\tthis.setCanEdit(p.getCanEdit());\n\t\tthis.setEditCount(p.getEditCount());\n\t\tthis.setEditTime(p.getEditTime());\n\t\tthis.setFormatedTime(p.getFormatedTime());\n\t\tthis.setForumId(p.getForumId());\n\t\tthis.setHtmlEnabled(p.isHtmlEnabled());\n\t\tthis.setId(p.getId());\n\t\tthis.setPostUsername(p.getPostUsername());\n\t\tthis.setSignatureEnabled(p.isSignatureEnabled());\n\t\tthis.setSmiliesEnabled(p.isSmiliesEnabled());\n\t\tthis.setSubject(p.getSubject());\n\t\tthis.setText(p.getText());\n\t\tthis.setTime(p.getTime());\n\t\tthis.setTopicId(p.getTopicId());\n\t\tthis.setUserId(p.getUserId());\n\t\tthis.setUserIp(p.getUserIp());\n\t\tthis.setKarma(new KarmaStatus(p.getKarma()));\n\t\tthis.setModerate(p.isModerationNeeded());\n\t\tthis.hasAttachments(p.hasAttachments());\n\t}\n\t\n\tpublic void setModerate(boolean status)\n\t{\n\t\tthis.moderate = status;\n\t}\n\t\n\tpublic boolean isModerate()\n\t{\n\t\treturn this.isModerationNeeded();\n\t}\n\t\n\tpublic boolean isModerationNeeded()\n\t{\n\t\treturn this.moderate;\n\t}\n\t\n\tpublic KarmaStatus getKarma()\n\t{\n\t\treturn this.karma;\n\t}\n\t\n\tpublic void setKarma(KarmaStatus karma)\n\t{\n\t\tthis.karma = karma;\n\t}\n\t\n\t/**\n\t * Checks if the BB code is enabled\n\t * \n\t * @return boolean value representing the result\n\t */\n\tpublic boolean isBbCodeEnabled() {\n\t\treturn this.bbCodeEnabled;\n\t}\n\n\t/**\n\t * Gets the total number of times the post was edited\n\t * \n\t * @return int value with the total number of times the post was edited\n\t */\n\tpublic int getEditCount() {\n\t\treturn this.editCount;\n\t}\n\n\t/**\n\t * Gets the edit time of the post\n\t * \n\t * @return long value representing the time\n\t */\n\tpublic Date getEditTime() {\n\t\treturn this.editTime;\n\t}\n\n\t/**\n\t * Gets the forum's id the post is associated\n\t * \n\t * @return int value with the id of the forum\n\t */\n\tpublic int getForumId() {\n\t\treturn this.forumId;\n\t}\n\n\t/**\n\t * Checks if HTML is enabled in the topic\n\t * \n\t * @return boolean value representing the result\n\t */\n\tpublic boolean isHtmlEnabled() {\n\t\treturn this.htmlEnabled;\n\t}\n\n\t/**\n\t * Gets the ID of the post\n\t * \n\t * @return int value with the ID\n\t */\n\tpublic int getId() {\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * Gets the username of the user ( an anonymous user ) that have posted the message\n\t * \n\t * @return String with the username\n\t */\n\tpublic String getPostUsername() {\n\t\treturn this.postUsername;\n\t}\n\n\t/**\n\t * Checks if signature is allowd in the message\n\t * \n\t * @return boolean representing the result\n\t */\n\tpublic boolean isSignatureEnabled() {\n\t\treturn this.signatureEnabled;\n\t}\n\n\t/**\n\t * Checks if smart Smilies are enabled :)\n\t * \n\t * @return boolean representing the result\n\t */\n\tpublic boolean isSmiliesEnabled() {\n\t\treturn this.smiliesEnabled;\n\t}\n\n\t/**\n\t * Gets the time, represented as long, of the message post\n\t * \n\t * @return long representing the post time\n\t */\n\tpublic Date getTime() {\n\t\treturn this.time;\n\t}\n\n\t/**\n\t * Gets the id of the topic this message is associated\n\t * \n\t * @return int value with the topic id\n\t */\n\tpublic int getTopicId() {\n\t\treturn this.topicId;\n\t}\n\n\t/**\n\t * Gets the ID of the user that have posted the message\n\t * \n\t * @return int value with the user id\n\t */\n\tpublic int getUserId() {\n\t\treturn this.userId;\n\t}\n\n\t/**\n\t * Gets the IP of the user who have posted the message\n\t * \n\t * @return String value with the user IP\n\t */\n\tpublic String getUserIp() {\n\t\treturn this.userIp;\n\t}\n\t/**\n\t * Sets the status for BB code in the message\n\t * \n\t * @param bbCodeEnabled <code>true</code> or <code>false</code>, depending the intention\n\t */\n\tpublic void setBbCodeEnabled(boolean bbCodeEnabled) {\n\t\tthis.bbCodeEnabled = bbCodeEnabled;\n\t}\n\n\t/**\n\t * Sets the count times the message was edited\n\t * \n\t * @param editCount The count time\n\t */\n\tpublic void setEditCount(int editCount) {\n\t\tthis.editCount = editCount;\n\t}\n\n\t/**\n\t * Sets the edit time the message was last edited\n\t * \n\t * @param editTime long value representing the time\n\t */\n\tpublic void setEditTime(Date editTime) {\n\t\tthis.editTime = editTime;\n\t}\n\n\t/**\n\t * Sets the id of the forum this message belongs to\n\t * \n\t * @param forumId The forum's id\n\t */\n\tpublic void setForumId(int forumId) {\n\t\tthis.forumId = forumId;\n\t}\n\n\t/**\n\t * Sets the status for HTML code in the message\n\t * \n\t * @param htmlEnabled <code>true</code> or <code>false</code>, depending the intention\n\t */\n\tpublic void setHtmlEnabled(boolean htmlEnabled) {\n\t\tthis.htmlEnabled = htmlEnabled;\n\t}\n\n\t/**\n\t * Sets the id for the message\n\t * \n\t * @param id The id\n\t */\n\tpublic void setId(int id) {\n\t\tthis.id = id;\n\t}\n\n\t/**\n\t * Sets the username of the anonymous user that have sent the message\n\t * \n\t * @param postUsername String with the username\n\t */\n\tpublic void setPostUsername(String postUsername) {\n\t\tthis.postUsername = postUsername;\n\t}\n\n\t/**\n\t * Sets the status for signatures in the message\n\t * \n\t * @param signatureEnabled <code>true</code> or <code>false</code>, depending the intention\n\t */\n\tpublic void setSignatureEnabled(boolean signatureEnabled) {\n\t\tthis.signatureEnabled = signatureEnabled;\n\t}\n\n\t/**\n\t * Sets the status for smilies in the message\n\t * \n\t * @param smiliesEnabled <code>true</code> or <code>false</code>, depending the intention\n\t */\n\tpublic void setSmiliesEnabled(boolean smiliesEnabled) {\n\t\tthis.smiliesEnabled = smiliesEnabled;\n\t}\n\n\t/**\n\t * Sets the time the message was sent\n\t * \n\t * @param time The time \n\t */\n\tpublic void setTime(Date time) {\n\t\tthis.time = time;\n\t}\n\t\n\tpublic void setFormatedTime(String t)\n\t{\n\t\tthis.formatedTime = t;\n\t}\n\t\n\tpublic String getFormatedTime()\n\t{\n\t\tif (this.formatedTime == null && this.time != null) {\n\t\t\tthis.formatedTime = ViewCommon.formatDate(this.time);\n\t\t}\n\t\t\n\t\treturn this.formatedTime;\n\t}\n\n\t/**\n\t * Sets the id of the topic that the message belongs to\n\t * \n\t * @param topicId The id of the topic\n\t */\n\tpublic void setTopicId(int topicId) {\n\t\tthis.topicId = topicId;\n\t}\n\n\t/**\n\t * Sets the id of the user that sent the message\n\t * \n\t * @param userId The user Id\n\t */\n\tpublic void setUserId(int userId) {\n\t\tthis.userId = userId;\n\t}\n\t\n\t/**\n\t * Gets the message of the post\n\t * \n\t * @return String containing the text\n\t */\n\tpublic String getText() {\n\t\treturn this.text;\n\t}\n\n\t/**\n\t * Sets the text of the post\n\t * \n\t * @param text The text to set\n\t */\n\tpublic void setText(String text) {\n\t\tthis.text = text;\n\t}\n\t\n\t/**\n\t * Gets the subject of the post \n\t * \n\t * @return String with the subject\n\t */\n\tpublic String getSubject() {\n\t\treturn this.subject;\n\t}\n\n\t/**\n\t * Sets the subject for the message\n\t * \n\t * @param subject The subject to set\n\t */\n\tpublic void setSubject(String subject) {\n\t\tthis.subject = subject;\n\t}\n\n\t/**\n\t * Sets the IP of the user\n\t * \n\t * @param userIP The IP address of the user\n\t */\n\tpublic void setUserIp(String userIp) {\n\t\tthis.userIp = userIp;\n\t}\n\tpublic boolean getCanEdit() {\n\t\treturn this.canEdit;\n\t}\n\t\n\tpublic void setCanEdit(boolean canEdit) {\n\t\tthis.canEdit = canEdit;\n\t}\n\t\n\t/**\n\t * @return Returns the hasAttachments.\n\t */\n\tpublic boolean hasAttachments()\n\t{\n\t\treturn this.hasAttachments;\n\t}\n\t\n\t/**\n\t * @param hasAttachments The hasAttachments to set.\n\t */\n\tpublic void hasAttachments(boolean hasAttachments)\n\t{\n\t\tthis.hasAttachments = hasAttachments;\n\t}\n\t\n\t/**\n\t * @see java.lang.Object#equals(java.lang.Object)\n\t */\n\tpublic boolean equals(Object o)\n\t{\n\t\tif (!(o instanceof Post)) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\treturn ((Post)o).getId() == this.id;\n\t}\n\t\n\t/**\n\t * @see java.lang.Object#hashCode()\n\t */\n\tpublic int hashCode()\n\t{\n\t\treturn this.id;\n\t}\n}",
  "metadata": {
    "fileId": "Post_java_chunk_2",
    "fileName": "Post.java",
    "filePath": "src/net/jforum/entities/Post.java"
  }
}