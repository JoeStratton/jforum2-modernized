{
  "pageContent": "File Path: src/net/jforum/entities/KarmaStatus.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on Jan 11, 2005 11:05:57 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.entities;\n\nimport java.io.Serializable;\n\n/**\n * @author Rafael Steil\n * @version $Id: KarmaStatus.java,v 1.8 2006/08/23 02:13:46 rafaelsteil Exp $\n */\npublic class KarmaStatus implements Serializable\n{\n\tprivate int id;\n\t\n\t/**\n\t * Karma average. Total points receveid / number of votes.\n\t */\n\tprivate double karmaPoints;\n\t\n\t/**\n\t * Sum of all votes received.\n\t */\n\tprivate int totalPoints;\n\t\n\t/**\n\t * Number of votes received.\n\t */\n\tprivate int votesReceived;\n\t\n\t/**\n\t * Number of votes given to other users.\n\t */\n\tprivate int votesGiven;\n\t\n\t\n\tpublic KarmaStatus() {}\n\t\n\tpublic KarmaStatus(KarmaStatus karma)\n\t{\n\t\tif (karma != null) {\n\t\t\tthis.id = karma.getId();\n\t\t\tthis.karmaPoints = karma.getKarmaPoints();\n\t\t}\n\t}\n\t\n\tpublic KarmaStatus(int id, double points)\n\t{\n\t\tthis.id = id;\n\t\tthis.karmaPoints = points;\n\t}\n\t\n\t/**\n\t * @return Returns the karmaPoints.\n\t */\n\tpublic double getKarmaPoints()\n\t{\n\t\treturn this.karmaPoints;\n\t}\n\t\n\tpublic void setKarmaPoints(double points)\n\t{\n\t\tthis.karmaPoints = points;\n\t}\n\t\n\t/**\n\t * @return Returns the userId.\n\t */\n\tpublic int getId()\n\t{\n\t\treturn this.id;\n\t}\n\t\n\t/**\n\t * @param userId The userId to set.\n\t */\n\tpublic void setId(int userId)\n\t{\n\t\tthis.id = userId;\n\t}\n\t\n    public int getVotesReceived()\n    {\n        return votesReceived;\n    }\n    \n    public void setVotesReceived(int votesReceived)\n    {\n        this.votesReceived = votesReceived;\n    }\n    \n    public int getTotalPoints()\n    {\n        return totalPoints;\n    }\n    \n    public void setTotalPoints(int totalPoints)\n    {\n        this.totalPoints = totalPoints;\n    }\n    \n    public int getVotesGiven()\n    {\n        return votesGiven;\n    }\n    public void setVotesGiven(int votesGiven)\n    {\n        this.votesGiven = votesGiven;\n    }\n}",
  "metadata": {
    "fileId": "KarmaStatus_java_chunk_1",
    "fileName": "KarmaStatus.java",
    "filePath": "src/net/jforum/entities/KarmaStatus.java"
  }
}