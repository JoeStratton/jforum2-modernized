{
  "pageContent": "File Path: src/net/jforum/entities/AttachmentInfo.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on Jan 18, 2005 2:59:54 PM\n  * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.entities;\n\nimport java.util.Date;\n\n/**\n * @author Rafael Steil\n * @version $Id: AttachmentInfo.java,v 1.6 2006/08/20 22:47:36 rafaelsteil Exp $\n */\npublic class AttachmentInfo\n{\n\tprivate int id;\n\tprivate int attachId;\n\tprivate int downloadCount;\n\t\n\tprivate String physicalFilename;\n\tprivate String realFilename;\n\tprivate String comment;\n\tprivate String mimetype;\n\t\n\tprivate long uploadTimeInMillis;\n\tprivate long filesize;\n\t\n\tprivate boolean hasThumb;\n\n\tprivate Date uploadTime;\n\tprivate AttachmentExtension extension;\n\t\n\t/**\n\t * @return Returns the attachId.\n\t */\n\tpublic int getAttachId()\n\t{\n\t\treturn this.attachId;\n\t}\n\t\n\t/**\n\t * @param attachId The attachId to set.\n\t */\n\tpublic void setAttachId(int attachId)\n\t{\n\t\tthis.attachId = attachId;\n\t}\n\t\n\t/**\n\t * @return Returns the comment.\n\t */\n\tpublic String getComment()\n\t{\n\t\treturn this.comment;\n\t}\n\t\n\t/**\n\t * @param comment The comment to set.\n\t */\n\tpublic void setComment(String comment)\n\t{\n\t\tthis.comment = comment;\n\t}\n\t\n\t/**\n\t * @return Returns the downloadCount.\n\t */\n\tpublic int getDownloadCount()\n\t{\n\t\treturn this.downloadCount;\n\t}\n\t\n\t/**\n\t * @param downloadCount The downloadCount to set.\n\t */\n\tpublic void setDownloadCount(int downloadCount)\n\t{\n\t\tthis.downloadCount = downloadCount;\n\t}\n\t\n\t/**\n\t * @return Returns the extension.\n\t */\n\tpublic AttachmentExtension getExtension()\n\t{\n\t\treturn this.extension;\n\t}\n\t\n\t/**\n\t * @param extension The extension to set.\n\t */\n\tpublic void setExtension(AttachmentExtension extension)\n\t{\n\t\tthis.extension = extension;\n\t}\n\t\n\t/**\n\t * @return Returns the filesize.\n\t */\n\tpublic long getFilesize()\n\t{\n\t\treturn this.filesize;\n\t}\n\t\n\t/**\n\t * @param filesize The filesize to set.\n\t */\n\tpublic void setFilesize(long filesize)\n\t{\n\t\tthis.filesize = filesize;\n\t}\n\t\n\t/**\n\t * @return Returns the hasThumb.\n\t */\n\tpublic boolean isHasThumb()\n\t{\n\t\treturn this.hasThumb;\n\t}\n\t\n\t/**\n\t * @param hasThumb The hasThumb to set.\n\t */\n\tpublic void setHasThumb(boolean hasThumb)\n\t{\n\t\tthis.hasThumb = hasThumb;\n\t}\n\t\n\t/**\n\t * @return Returns the id.\n\t */\n\tpublic int getId()\n\t{\n\t\treturn this.id;\n\t}\n\t\n\t/**\n\t * @param id The id to set.\n\t */\n\tpublic void setId(int id)\n\t{\n\t\tthis.id = id;\n\t}\n\t\n\t/**\n\t * @return Returns the mimetype.\n\t */\n\tpublic String getMimetype()\n\t{\n\t\treturn this.mimetype;\n\t}\n\t\n\t/**\n\t * @param mimetype The mimetype to set.\n\t */\n\tpublic void setMimetype(String mimetype)\n\t{\n\t\tthis.mimetype = mimetype;\n\t}\n\t\n\t/**\n\t * @return Returns the physicalFilename.\n\t */\n\tpublic String getPhysicalFilename()\n\t{\n\t\treturn this.physicalFilename;\n\t}\n\t\n\t/**\n\t * @param physicalFilename The physicalFilename to set.\n\t */\n\tpublic void setPhysicalFilename(String physicalFilename)\n\t{\n\t\tthis.physicalFilename = physicalFilename;\n\t}\n\t\n\t/**\n\t * @return Returns the realFilename.\n\t */\n\tpublic String getRealFilename()\n\t{\n\t\treturn this.realFilename;\n\t}\n\t\n\t/**\n\t * @param realFilename The realFilename to set.\n\t */\n\tpublic void setRealFilename(String realFilename)\n\t{\n\t\tthis.realFilename = realFilename;\n\t}\n\t\n\t/**\n\t * @return Returns the uploadTime.\n\t */\n\tpublic Date getUploadTime()\n\t{\n\t\treturn this.uploadTime;\n\t}\n\t\n\t/**\n\t * @param uploadTime The uploadTime to set.\n\t */\n\tpublic void setUploadTime(Date uploadTime)\n\t{\n\t\tthis.uploadTime = uploadTime;\n\t}\n\t\n\t/**\n\t * @return Returns the uploadTimeInMillis.\n\t */\n\tpublic long getUploadTimeInMillis()\n\t{\n\t\treturn this.uploadTimeInMillis;\n\t}\n\t\n\t/**\n\t * @param uploadTimeInMillis The uploadTimeInMillis to set.\n\t */\n\tpublic void setUploadTimeInMillis(long uploadTimeInMillis)\n\t{\n\t\tthis.uploadTimeInMillis = uploadTimeInMillis;\n\t}\n}",
  "metadata": {
    "fileId": "AttachmentInfo_java_chunk_1",
    "fileName": "AttachmentInfo.java",
    "filePath": "src/net/jforum/entities/AttachmentInfo.java"
  }
}