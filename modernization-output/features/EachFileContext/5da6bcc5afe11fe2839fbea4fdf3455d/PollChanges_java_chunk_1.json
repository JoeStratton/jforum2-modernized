{
  "pageContent": "File Path: src/net/jforum/entities/PollChanges.java\n\n Original Content: package net.jforum.entities;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport net.jforum.view.forum.common.PostCommon;\n\n/**\n * An helper class that holds changes made to the pool.\n * \n * @author Rafael Steil\n * @version $Id: PollChanges.java,v 1.4 2007/04/24 02:19:46 rafaelsteil Exp $\n */\npublic class PollChanges {\n\tprivate List deletedOptions = new ArrayList();\n\tprivate List newOptions = new ArrayList();\n\tprivate List changedOptions = new ArrayList();\n\t\n\tprivate boolean hasChanges;\n\t\n\tprivate Poll first;\n\tprivate Poll second;\n\t\n\t/**\n\t * @param first The \"complete\", most recent poll version. Usually the one\n\t * that's in the database. \n\t * @param second The poll to compare with. It usually will be a poll filled\n\t * by {@link PostCommon#fillPostFromRequest()}, so matches will be done againts the \n\t * existing poll and the data comming from the server. \n\t */\n\tpublic PollChanges(Poll first, Poll second) {\n\t\tthis.first = first;\n\t\tthis.second = second;\n\t}\n\t\n\tpublic void addChangedOption(PollOption option) {\n\t\tthis.changedOptions.add(option);\n\t\tthis.hasChanges = true;\n\t}\n\t\n\tpublic List getChangedOptions() {\n\t\treturn this.changedOptions;\n\t}\n\t\n\tpublic void addDeletedOption(PollOption option) {\n\t\tthis.deletedOptions.add(option);\n\t\tthis.hasChanges = true;\n\t}\n\n\tpublic List getDeletedOptions() {\n\t\treturn this.deletedOptions;\n\t}\n\t\n\tpublic void addNewOption(PollOption option) {\n\t\tthis.newOptions.add(option);\n\t\tthis.hasChanges = true;\n\t}\n\n\tpublic List getNewOptions() {\n\t\treturn this.newOptions;\n\t}\n\t\n\tpublic boolean hasChanges() {\n\t\tthis.searchForChanges();\n\t\treturn this.hasChanges;\n\t}\n\t\n\tprivate void searchForChanges() {\n\t\tif (first == null || second == null) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tboolean isSame = first.getLabel().equals(second.getLabel());\n\t\tisSame &= first.getLength() == second.getLength();\n\t\t\n\t\tthis.hasChanges = !isSame;\n\t\t\n\t\tList firstOptions = first.getOptions();\n\t\tList secondOptions = second.getOptions();\n\t\t\n\t\t// Search for changes in existing options\n\t\tfor (Iterator iter = firstOptions.iterator(); iter.hasNext(); ) {\n\t\t\tPollOption option = (PollOption)iter.next();\n\t\t\tPollOption changed = this.findOptionById(option.getId(), secondOptions);\n\t\t\t\n\t\t\tif (changed != null && !option.getText().equals(changed.getText())) {\n\t\t\t\tthis.addChangedOption(changed);\n\t\t\t}\n\t\t\telse if (changed == null) {\n\t\t\t\tthis.addDeletedOption(option);\n\t\t\t}\n\t\t}\n\n\t\t// Check if the incoming poll added options\n\t\tfor (Iterator iter = secondOptions.iterator(); iter.hasNext(); ) {\n\t\t\tPollOption option = (PollOption)iter.next();\n\t\t\t\n\t\t\tif (this.findOptionById(option.getId(), firstOptions) == null) {\n\t\t\t\tthis.addNewOption(option);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate PollOption findOptionById(int id, List options) {\n\t\tfor (Iterator iter = options.iterator(); iter.hasNext(); ) {\n\t\t\tPollOption o = (PollOption)iter.next();\n\t\t\t\n\t\t\tif (o.getId() == id) {\n\t\t\t\treturn o;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n}",
  "metadata": {
    "fileId": "PollChanges_java_chunk_1",
    "fileName": "PollChanges.java",
    "filePath": "src/net/jforum/entities/PollChanges.java"
  }
}