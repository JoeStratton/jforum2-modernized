{
  "pageContent": "File Path: src/net/jforum/util/legacy/clickstream/config/ConfigLoader.java\n\n Original Content: package net.jforum.util.legacy.clickstream.config;\n\nimport java.io.File;\nimport java.io.IOException;\n\nimport javax.xml.parsers.ParserConfigurationException;\nimport javax.xml.parsers.SAXParser;\nimport javax.xml.parsers.SAXParserFactory;\n\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\n\nimport org.apache.log4j.Logger;\nimport org.xml.sax.Attributes;\nimport org.xml.sax.InputSource;\nimport org.xml.sax.SAXException;\nimport org.xml.sax.helpers.DefaultHandler;\n\n/**\n *Loads clickstream.xml for JForum.\n * \n * @author <a href=\"plightbo@hotmail.com\">Patrick Lightbody</a>\n * @author Rafael Steil (little hacks for JForum)\n * @version $Id: ConfigLoader.java,v 1.6 2005/12/18 02:12:52 rafaelsteil Exp $\n */\npublic class ConfigLoader\n{\n\tprivate static final Logger log = Logger.getLogger(ConfigLoader.class);\n\n\tprivate ClickstreamConfig config;\n\n\tprivate static ConfigLoader instance = new ConfigLoader();;\n\n\tpublic static ConfigLoader instance()\n\t{\n\t\treturn instance;\n\t}\n\n\tprivate ConfigLoader() {}\n\n\tpublic ClickstreamConfig getConfig()\n\t{\n\t\tif (this.config != null) {\n\t\t\treturn this.config;\n\t\t}\n\n\t\tsynchronized (instance) {\n\t\t\tthis.config = new ClickstreamConfig();\n\t\n\t\t\ttry {\n\t\t\t\tSAXParser parser = SAXParserFactory.newInstance().newSAXParser();\n\t\n\t\t\t\tString path = SystemGlobals.getValue(ConfigKeys.CLICKSTREAM_CONFIG);\n\t\t\t\t\n\t\t\t\tif (path != null) {\n\t\t\t\t\tif (log.isInfoEnabled()) {\n\t\t\t\t\t\tlog.info(\"Loading clickstream config from \" + path);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tFile fileInput = new File(path);\n\t\t\t\t\t\n\t\t\t\t\tif (fileInput.exists()) {\n\t\t\t\t\t\tparser.parse(fileInput, new ConfigHandler());\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tparser.parse(new InputSource(path), new ConfigHandler());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn config;\n\t\t\t}\n\t\t\tcatch (SAXException e) {\n\t\t\t\tlog.error(\"Could not parse clickstream XML\", e);\n\t\t\t\tthrow new RuntimeException(e.getMessage());\n\t\t\t}\n\t\t\tcatch (IOException e) {\n\t\t\t\tlog.error(\"Could not read clickstream config from stream\", e);\n\t\t\t\tthrow new RuntimeException(e.getMessage());\n\t\t\t}\n\t\t\tcatch (ParserConfigurationException e) {\n\t\t\t\tlog.fatal(\"Could not obtain SAX parser\", e);\n\t\t\t\tthrow new RuntimeException(e.getMessage());\n\t\t\t}\n\t\t\tcatch (RuntimeException e) {\n\t\t\t\tlog.fatal(\"RuntimeException\", e);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tcatch (Throwable e) {\n\t\t\t\tlog.fatal(\"Exception\", e);\n\t\t\t\tthrow new RuntimeException(e.getMessage());\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * SAX Handler implementation for handling tags in config file and building config objects.\n\t */\n\tprivate class ConfigHandler extends DefaultHandler\n\t{\n\t\tpublic void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException\n\t\t{\n\t\t\tif (qName.equals(\"bot-host\")) {\n\t\t\t\tconfig.addBotHost(attributes.getValue(\"name\"));\n\t\t\t}\n\t\t\telse if (qName.equals(\"bot-agent\")) {\n\t\t\t\tconfig.addBotAgent(attributes.getValue(\"name\"));\n\t\t\t}\n\t\t}\n\t}\n}",
  "metadata": {
    "fileId": "ConfigLoader_java_chunk_1",
    "fileName": "ConfigLoader.java",
    "filePath": "src/net/jforum/util/legacy/clickstream/config/ConfigLoader.java"
  }
}