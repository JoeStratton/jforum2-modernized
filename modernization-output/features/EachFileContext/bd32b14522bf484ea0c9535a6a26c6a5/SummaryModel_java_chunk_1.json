{
  "pageContent": "File Path: src/net/jforum/summary/SummaryModel.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Class created on Jul 15, 2005\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.summary;\n\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport net.jforum.dao.DataAccessDriver;\nimport net.jforum.dao.SummaryDAO;\nimport net.jforum.entities.User;\nimport net.jforum.util.mail.Spammer;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\nimport net.jforum.view.forum.common.ViewCommon;\n\nimport org.apache.log4j.Logger;\n\nimport freemarker.template.SimpleHash;\n\n/**\n * Manage the Summary sends.\n * \n * @see net.jforum.summary.SummaryJob\n * @see net.jforum.summary.SummaryScheduler\n * \n * @author Franklin S. Dattein (<a href=\"mailto:franklin@hp.com\">franklin@hp.com</a>)\n * @version $Id: SummaryModel.java,v 1.11 2007/09/08 02:36:36 andowson Exp $\n */\npublic class SummaryModel extends Spammer\n{\n\tprivate SummaryDAO dao;\n\n\tprivate static Logger logger = Logger.getLogger(SummaryModel.class);\n\n\tpublic SummaryModel()\n\t{\n\t\tthis.dao = DataAccessDriver.getInstance().newSummaryDAO();\n\t}\n\n\tpublic void sendPostsSummary(List recipients)\n\t{\n\t\tlogger.info(\"Sending Weekly summary...\");\n\n\t\t// Gets a Date seven days before now\n\t\tint daysBefore = Integer.parseInt(SystemGlobals.getValue(ConfigKeys.SUMMARY_DAYS_BEFORE));\n\n\t\t// New date \"X\" days before now, where \"X\" is the number set on the variable daysBefore\n\t\tlong dateBefore = Calendar.getInstance().getTimeInMillis() - (daysBefore * 1000 * 60 * 60 * 24);\n\n\t\tList posts = listPosts(new Date(dateBefore), new Date());\n\n\t\tString forumLink = ViewCommon.getForumLink();\n\n\t\tSimpleHash params = new SimpleHash();\n\t\tparams.put(\"posts\", posts);\n\t\tparams.put(\"url\", forumLink);\n\t\tparams.put(\"extension\", SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION));\n\n\t\tString subject = SystemGlobals.getValue(ConfigKeys.MAIL_SUMMARY_SUBJECT);\n\t\t\n\t\tthis.setUsers(this.recipientsAsUsers(recipients));\n\t\tthis.setTemplateParams(params);\n\n\t\tthis.prepareMessage(subject, SystemGlobals.getValue(ConfigKeys.MAIL_SUMMARY_FILE));\n\t\tsuper.dispatchMessages();\n\t}\n\t\n\tprivate List recipientsAsUsers(List recipients)\n\t{\n\t\tList l = new ArrayList();\n\t\t\n\t\tfor (Iterator iter = recipients.iterator(); iter.hasNext(); ) {\n\t\t\tString email = (String)iter.next();\n\t\t\t\n\t\t\tUser u = new User();\n\t\t\tu.setEmail(email);\n\t\t\t\n\t\t\tl.add(u);\n\t\t}\n\t\t\n\t\treturn l;\n\t}\n\n\t/**\n\t * List all recipients able to receive posts summaries.\n\t * \n\t * @return List of users\n\t */\n\tpublic List listRecipients()\n\t{\n\t\treturn this.dao.listRecipients();\n\t}\n\n\t/**\n\t * List last posts of a period like a week, day or month.\n\t * \n\t * @param firstDate First date of a period.\n\t * @param lastDate Last date of a period.\n\t * @return List of Posts\n\t */\n\tpublic List listPosts(Date firstDate, Date lastDate)\n\t{\n\t\treturn this.dao.selectLastPosts(firstDate, lastDate);\n\t}\n}",
  "metadata": {
    "fileId": "SummaryModel_java_chunk_1",
    "fileName": "SummaryModel.java",
    "filePath": "src/net/jforum/summary/SummaryModel.java"
  }
}