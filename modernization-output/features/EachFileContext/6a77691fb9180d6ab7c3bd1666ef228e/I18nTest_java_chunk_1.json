{
  "pageContent": "File Path: tests/core/net/jforum/util/I18nTest.java\n\n Original Content: /*\n * Copyright (c) 2003, Rafael Steil\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: 30/09/2004 - 12:50:46\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.util;\n\nimport junit.framework.TestCase;\nimport net.jforum.SessionFacade;\nimport net.jforum.TestCaseUtils;\nimport net.jforum.entities.UserSession;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * @author Rafael Steil\n * @version $Id: I18nTest.java,v 1.4 2005/07/26 03:04:41 rafaelsteil Exp $\n */\npublic class I18nTest extends TestCase\n{\n\tprivate static boolean loaded = false;\n\tprivate static final String SESSION_ID = \"1\";\n\tprivate UserSession us;\n\t\n\t/**\n\t * @see TestCase#setUp()\n\t */\n\tprotected void setUp() throws Exception\n\t{\n\t\tif (!loaded) {\n\t\t\tTestCaseUtils.loadEnvironment();\n\t\t\tSystemGlobals.setValue(ConfigKeys.RESOURCE_DIR, \n\t\t\t\t\t\t\tSystemGlobals.getApplicationResourceDir() + \"/tests\");\n\t\t\tloaded = true;\n\t\t}\n\t\t\n\t\tSystemGlobals.setValue(ConfigKeys.I18N_DEFAULT_ADMIN, \"default\");\n\t\tSystemGlobals.setValue(ConfigKeys.I18N_DEFAULT, \"default\");\n\t\t\n\t\tthis.us = new UserSession();\n\t\tthis.us.setSessionId(SESSION_ID);\n\t\tSessionFacade.add(this.us, SESSION_ID);\n\t\t\n\t\tI18n.reset();\n\t\tI18n.load();\n\t}\n\t\n\tpublic void testLoad() throws Exception\n\t{\n\t\tassertTrue(I18n.contains(\"default\"));\n\t}\n\t\n\tpublic void testDefaultKeys()\n\t{\n\t\tassertEquals(\"default value 1\", I18n.getMessage(\"defaultKey1\", this.us));\n\t\tassertEquals(\"default value 2\", I18n.getMessage(\"defaultKey2\", this.us));\n\t\tassertEquals(\"default value 3\", I18n.getMessage(\"defaultKey3\", this.us));\n\t\tassertEquals(\"default value 4\", I18n.getMessage(\"defaultKey4\", this.us));\n\t\tassertEquals(\"default value 5\", I18n.getMessage(\"defaultKey5\", this.us));\n\t}\n\t\n\tpublic void testLoadCheese() throws Exception\n\t{\n\t\tI18n.load(\"cheese\");\n\t\tassertTrue(I18n.contains(\"cheese\"));\n\t}\n\t\n\tpublic void testCheeseKeys()\n\t{\n\t\tthis.us.setLang(\"cheese\");\n\t\tassertEquals(\"default cheese 1\", I18n.getMessage(\"defaultKey1\", this.us));\n\t\tassertEquals(\"default cheese 2\", I18n.getMessage(\"defaultKey2\", this.us));\n\t\tassertEquals(\"default cheese 3\", I18n.getMessage(\"defaultKey3\", this.us));\n\t\tassertEquals(\"default cheese 4\", I18n.getMessage(\"defaultKey4\", this.us));\n\t\tassertEquals(\"default value 5\", I18n.getMessage(\"defaultKey5\", this.us));\n\t}\n\t\n\tpublic void testLoadOrange() throws Exception\n\t{\n\t\tI18n.load(\"orange\");\n\t\tassertTrue(I18n.contains(\"orange\"));\n\t}\n\t\n\tpublic void testOrangeKeys()\n\t{\n\t\tthis.us.setLang(\"orange\");\n\t\tassertEquals(\"default orange 1\", I18n.getMessage(\"defaultKey1\", this.us));\n\t\tassertEquals(\"default orange 2\", I18n.getMessage(\"defaultKey2\", this.us));\n\t\tassertEquals(\"default orange 3\", I18n.getMessage(\"defaultKey3\", this.us));\n\t\tassertEquals(\"default value 4\", I18n.getMessage(\"defaultKey4\", this.us));\n\t\tassertEquals(\"default value 5\", I18n.getMessage(\"defaultKey5\", this.us));\n\t\tassertEquals(\"orange is not cheese\", I18n.getMessage(\"orange\", this.us));\n\t}\n\t\n\tpublic void testGetMessageWithLocale()\n\t{\n\t\tassertEquals(\"default value 1\", I18n.getMessage(\"default\", \"defaultKey1\"));\n\t\tassertEquals(\"default cheese 1\", I18n.getMessage(\"cheese\", \"defaultKey1\"));\n\t\tassertEquals(\"default orange 1\", I18n.getMessage(\"orange\", \"defaultKey1\"));\n\t\tassertNull(I18n.getMessage(\"default\", \"orange\"));\n\t}\n\t\n\tpublic void testRest()\n\t{\n\t\tI18n.reset();\n\t\tassertFalse(I18n.contains(\"default\"));\n\t\tassertFalse(I18n.contains(\"orange\"));\n\t\tassertFalse(I18n.contains(\"cheese\"));\n\t}\n\t\n\tpublic void testMergeCheeseOrange() throws Exception\n\t{\n\t\tthis.testRest();\n\t\tI18n.load(\"cheese\", \"orange\");\n\t\tassertTrue(I18n.contains(\"cheese\"));\n\t\tassertTrue(I18n.contains(\"orange\"));\n\t\tassertEquals(\"default cheese 1\", I18n.getMessage(\"cheese\", \"defaultKey1\"));\n\t\tassertEquals(\"orange is not cheese\", I18n.getMessage(\"cheese\", \"orange\"));\n\t}\n\t\n\tpublic void testOrangeIsDefault() throws Exception\n\t{\n\t\tthis.testRest();\n\t\tSystemGlobals.setValue(ConfigKeys.I18N_DEFAULT, \"orange\");\n\t\tI18n.load();\n\t\tassertTrue(I18n.contains(\"default\"));\n\t\tassertTrue(I18n.contains(\"orange\"));\n\t\tthis.testOrangeKeys();\n\t}\n}",
  "metadata": {
    "fileId": "I18nTest_java_chunk_1",
    "fileName": "I18nTest.java",
    "filePath": "tests/core/net/jforum/util/I18nTest.java"
  }
}