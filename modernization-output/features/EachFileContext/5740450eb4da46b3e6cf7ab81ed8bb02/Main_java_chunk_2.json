{
  "pageContent": "File Path: tools/phpbb2jforum/src/net/jforum/tools/phpbb2jforum/Main.java\n\n Original Content: public class Main\n{\n\tprivate Connection conn;\n\tprivate Connection conn2;\n\tprivate String[][] regexps;\n\n\tpublic Main()\n\t{\n\t\tthis.regexps = new String[][] { { ConfigKeys.B_REGEX, ConfigKeys.B_REPLACE },\n\t\t\t{ ConfigKeys.COLOR_REGEX, ConfigKeys.COLOR_REPLACE }, { ConfigKeys.I_REGEX, ConfigKeys.I_REPLACE },\n\t\t\t{ ConfigKeys.LIST_REGEX, ConfigKeys.LIST_REPLACE },\n\t\t\t{ ConfigKeys.QUOTE_REGEX, ConfigKeys.QUOTE_REPLACE },\n\t\t\t{ ConfigKeys.QUOTE_USERNAME_OPEN_REGEX, ConfigKeys.QUOTE_USERNAME_OPEN_REPLACE },\n\t\t\t{ ConfigKeys.QUOTE_USERNAME_CLOSE_REGEX, ConfigKeys.QUOTE_USERNAME_CLOSE_REPLACE },\n\t\t\t{ ConfigKeys.U_REGEX, ConfigKeys.U_REPLACE }, { ConfigKeys.IMG_REGEX, ConfigKeys.IMG_REPLACE },\n\t\t\t{ ConfigKeys.CODE_REGEX, ConfigKeys.CODE_REPLACE }, { ConfigKeys.SIZE_REGEX, ConfigKeys.SIZE_REPLACE } };\n\t}\n\n\tprivate Connection openConnection() throws ClassNotFoundException, SQLException\n\t{\n\t\tClass.forName(SystemGlobals.getValue(ConfigKeys.DATABASE_DRIVER));\n\t\treturn DriverManager.getConnection(SystemGlobals.getValue(ConfigKeys.DATABASE_JFORUM_URL));\n\t}\n\n\tprivate void init(String baseDir) throws IOException\n\t{\n\t\tSystemGlobals.initGlobals(baseDir, baseDir + \"/phpbb2jforum/resource/SystemGlobals.properties\");\n\t\tSystemGlobals.loadQueries(baseDir + \"/phpbb2jforum/resource/\" + SystemGlobals.getValue(ConfigKeys.DATABASE_QUERIES));\n\t}\n\n\tprivate void runForrestRun() throws Exception\n\t{\n\t\tthis.cleanTables();\n\t\t\n\t\tthis.importUsers();\n\t\tthis.importTables();\n\t\tthis.importPrivateMessages();\n\t\tthis.importPosts();\n\t\t\n\t\tthis.setupPermissions();\n\t}\n\n\tprivate void importPosts() throws SQLException\n\t{\n\t\tint total = this.getTotalPosts();\n\n\t\tif (total == 0) {\n\t\t\tSystem.out.println(\"Seems like there are no posts to import. Skipping...\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tSystem.out.println(\"Importing posts. This may take a looooong time...\");\n\t\tSystem.out.println(\"Going to process \" + total + \" posts...\");\n\n\t\tint counter = 0;\n\n\t\tStatement s = null;\n\t\tResultSet rs = null;\n\t\tPreparedStatement insert = null;\n\t\t\n\t\ttry {\n\t\t\ts = this.conn2.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);\n\t\t\ts.setFetchSize(50);\n\t\n\t\t\tinsert = this.conn.prepareStatement(this.getSql(ConfigKeys.QUERY_POSTS_TEXT));\n\t\t\trs = s.executeQuery(this.getSql(ConfigKeys.QUERY_SELECT_POSTS_TEXT));\n\t\t\t\n\t\t\tSystem.out.println(\"Ok, here we go\");\n\t\t\t\n\t\t\twhile (rs.next()) {\n\t\t\t\tif ((++counter % 100) == 0) {\n\t\t\t\t\tSystem.out.println(\"Processed \" + counter + \" posts so far\");\n\t\t\t\t}\n\t\n\t\t\t\tinsert.setInt(1, rs.getInt(\"post_id\"));\n\t\t\t\tinsert.setString(2, rs.getString(\"post_subject\"));\n\t\t\t\tinsert.setString(3, this.applyRegexToPostText(rs.getString(\"post_text\")));\n\t\n\t\t\t\tinsert.executeUpdate();\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, insert);\n\t\t\tDbUtils.close(s);\n\t\t}\n\t\t\n\t\tSystem.out.println(\"Post importing done...\");\n\t}\n\n\tprivate void importPrivateMessages() throws SQLException\n\t{\n\t\tSystem.out.println(\"Importing private messages...\");\n\n\t\tStatement s = null;\n\t\tResultSet rs = null;\n\t\tPreparedStatement insert = null; \n\n\t\ttry {\n\t\t\tinsert = this.conn.prepareStatement(this.getSql(ConfigKeys.QUERY_PRIVMSGS_TEXT));\n\t\t\ts = this.conn.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);\n\t\t\ts.setFetchSize(50);\n\t\t\t\n\t\t\trs = s.executeQuery(this.getSql(ConfigKeys.QUERY_SELECT_PM));\n\t\n\t\t\twhile (rs.next()) {\n\t\t\t\tinsert.setInt(1, rs.getInt(\"privmsgs_text_id\"));\n\t\t\t\tinsert.setString(2, this.applyRegexToPostText(rs.getString(\"privmsgs_text\")));\n\t\n\t\t\t\tinsert.executeUpdate();\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, insert);\n\t\t\tDbUtils.close(s);\n\t\t}\n\n\t\tSystem.out.println(\"Private messages text imported...\");\n\t}\n\t\n\tprivate void importUsers() throws SQLException\n\t{\n\t\tSystem.out.println(\"Importing users...\");\n\t\t\n\t\tResultSet rs = null;\n\t\tStatement s = null;\n\t\tPreparedStatement insert = null;\n\n\t\ttry {\n\t\t\tinsert = this.conn.prepareStatement(this.getSql(ConfigKeys.QUERY_USERS));\n\t\t\ts = this.conn.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);\n\t\t\ts.setFetchSize(50);\n\t\t\t\n\t\t\trs = s.executeQuery(this.getSql(ConfigKeys.QUERY_SELECT_USERS));\n\t\t\t\n\t\t\twhile (rs.next()) {\n\t\t\t\tinsert.setInt(1, rs.getInt(\"user_id\"));\n\t\t\t\tinsert.setString(2, rs.getString(\"user_active\"));\n\t\t\t\tinsert.setString(3, rs.getString(\"username\"));\n\t\t\t\tinsert.setString(4, rs.getString(\"user_password\"));\n\t\t\t\tinsert.setString(5, rs.getString(\"user_regdate\"));\n\t\t\t\tinsert.setString(6, rs.getString(\"user_level\"));\n\t\t\t\tinsert.setString(7, rs.getString(\"user_posts\"));\n\t\t\t\tinsert.setString(8, rs.getString(\"user_timezone\"));\n\t\t\t\tinsert.setString(9, rs.getString(\"user_style\"));\n\t\t\t\tinsert.setString(10, \"\");\n\t\t\t\tinsert.setString(11, rs.getString(\"user_dateformat\"));\n\t\t\t\tinsert.setString(12, rs.getString(\"user_new_privmsg\"));\n\t\t\t\tinsert.setString(13, rs.getString(\"user_unread_privmsg\"));\n\t\t\t\tinsert.setString(14, rs.getString(\"user_last_privmsg\"));\n\t\t\t\tinsert.setString(15, rs.getString(\"user_viewemail\"));\n\t\t\t\tinsert.setString(16, rs.getString(\"user_attachsig\"));\n\t\t\t\tinsert.setString(17, rs.getString(\"user_allowhtml\"));\n\t\t\t\tinsert.setString(18, rs.getString(\"user_allowbbcode\"));\n\t\t\t\tinsert.setString(19, rs.getString(\"user_allowsmile\"));\n\t\t\t\tinsert.setString(20, rs.getString(\"user_allowavatar\"));\n\t\t\t\tinsert.setString(21, rs.getString(\"user_allow_pm\"));\n\t\t\t\tinsert.setString(22, rs.getString(\"user_notify\"));\n\t\t\t\tinsert.setString(23, rs.getString(\"user_notify_pm\"));\n\t\t\t\tinsert.setString(24, rs.getString(\"user_popup_pm\"));\n\t\t\t\tinsert.setString(25, rs.getString(\"user_rank\"));\n\t\t\t\tinsert.setString(26, rs.getString(\"user_avatar\"));\n\t\t\t\tinsert.setString(27, rs.getString(\"user_avatar_type\"));\n\t\t\t\tinsert.setString(28, rs.getString(\"user_email\"));\n\t\t\t\tinsert.setString(29, rs.getString(\"user_icq\"));\n\t\t\t\tinsert.setString(30, rs.getString(\"user_website\"));\n\t\t\t\tinsert.setString(31, rs.getString(\"user_from\"));\n\t\t\t\tinsert.setString(32, this.applyRegexToPostText(rs.getString(\"user_sig\")));\n\t\t\t\tinsert.setString(33, rs.getString(\"user_aim\"));\n\t\t\t\tinsert.setString(34, rs.getString(\"user_yim\"));\n\t\t\t\tinsert.setString(35, rs.getString(\"user_msnm\"));\n\t\t\t\tinsert.setString(36, rs.getString(\"user_occ\"));\n\t\t\t\tinsert.setString(37, rs.getString(\"user_interests\"));\n\t\t\t\tinsert.setString(38, rs.getString(\"user_allow_viewonline\"));\n\t\n\t\t\t\tinsert.executeUpdate();\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, insert);\n\t\t\tDbUtils.close(s);\n\t\t}\n\t}\n\n\tprivate String applyRegexToPostText(String text)\n\t{\n\t\tfor (int i = 0; i < this.regexps.length; i++) {\n\t\t\tif (text == null) {\n\t\t\t\ttext = \"\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext = text.replaceAll(SystemGlobals.getValue(this.regexps[i][0]), \n\t\t\t\t\tSystemGlobals.getValue(this.regexps[i][1]));\n\t\t\t}\n\t\t}\n\n\t\treturn text;\n\t}\n\n\tprivate int getTotalPosts() throws SQLException\n\t{\n\t\tint total = 0;\n\t\t\n\t\tStatement s = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\ts = this.conn.createStatement();\n\t\t\trs = s.executeQuery(this.getSql(ConfigKeys.QUERY_TOTAL_POSTS));\n\t\n\t\t\tif (rs.next()) {\n\t\t\t\ttotal = rs.getInt(1);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, s);\n\t\t}\n\n\t\treturn total;\n\t}\n\n\tprivate void cleanTables() throws SQLException\n\t{\n\t\tSystem.out.println(\"Cleaning tables...\");\n\n\t\tString[] queries = { ConfigKeys.QUERY_CLEAN_BANLIST, ConfigKeys.QUERY_CLEAN_CATEGORIES, \n\t\t\tConfigKeys.QUERY_CLEAN_FORUMS, ConfigKeys.QUERY_CLEAN_POSTS, ConfigKeys.QUERY_CLEAN_POSTS_TEXT, \n\t\t\tConfigKeys.QUERY_CLEAN_PRIVMSGS, ConfigKeys.QUERY_CLEAN_PRIVMSGS_TEXT, \n\t\t\tConfigKeys.QUERY_CLEAN_RANKS, ConfigKeys.QUERY_CLEAN_SMILIES, ConfigKeys.QUERY_CLEAN_TOPICS, \n\t\t\tConfigKeys.QUERY_CLEAN_TOPICS_WATCH, ConfigKeys.QUERY_CLEAN_USERS, \n\t\t\tConfigKeys.QUERY_CLEAN_VOTE_DESC, ConfigKeys.QUERY_CLEAN_VOTE_RESULTS, \n\t\t\tConfigKeys.QUERY_CLEAN_VOTE_VOTERS, ConfigKeys.QUERY_CLEAN_GROUPS, ConfigKeys.QUERY_CLEAN_USERGROUPS  };\n\n\t\tfor (int i = 0; i < queries.length; i++) {\n\t\t\tSystem.out.println(\"Cleaning \" + queries[i]);\n\n\t\t\tStatement s = this.conn.createStatement();\n\t\t\ts.executeUpdate(this.getSql(queries[i]));\n\t\t\ts.close();\n\t\t}\n\n\t\tSystem.out.println(\"Tables cleaned...\");\n\t}\n\n\tprivate void importTables() throws SQLException\n\t{ \n\t\tString[][] queries = { { \"categories\", ConfigKeys.QUERY_CATEGORIES }, { \"forums\", ConfigKeys.QUERY_FORUMS },\n\t\t\t{ \"private messages\", ConfigKeys.QUERY_PRIVMSGS }, { \"rankings\", ConfigKeys.QUERY_RANKS },\n\t\t\t{ \"topics\", ConfigKeys.QUERY_TOPICS }, { \"topics watch\", ConfigKeys.QUERY_TOPICS_WATCH },\n\t\t\t{ \"posts\", ConfigKeys.QUERY_POSTS }, { \"anonymous update\", ConfigKeys.QUERY_UPDATE_ANONYMOUS }, \n\t\t\t{ \"banlist\", ConfigKeys.QUERY_BANLIST }, { \"Vote Desc\", ConfigKeys.QUERY_VOTE_DESC }, \n\t\t\t{ \"Vote voters\", ConfigKeys.QUERY_VOTE_VOTERS }, { \"Vote results\", ConfigKeys.QUERY_VOTE_RESULTS}, \n\t\t\t{ \"Groups\", ConfigKeys.QUERY_GROUPS }, { \"User groups\", ConfigKeys.QUERY_USERGROUPS }, \n\t\t\t{ \"Anonymous user\", ConfigKeys.QUERY_ANONYMOUSUSER_GROUP }, \n\t\t\t{ \"Admin group\", ConfigKeys.QUERY_ADMINGROUP }, { \"Admin role\", ConfigKeys.QUERY_ADMINROLE } };\n\n\t\tfor (int i = 0; i < queries.length; i++) {\n\t\t\tSystem.out.println(\"Importing \" + queries[i][0] + \"...\");\n\n\t\t\tStatement s = null;\n\t\t\t\n\t\t\ttry {\n\t\t\t\ts = this.conn.createStatement();\n\t\t\t\ts.executeUpdate(this.getSql(queries[i][1]));\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tDbUtils.close(s);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate void setupPermissions() throws SQLException\n\t{\n\t\tStatement s = null;\n\t\tResultSet rs = null;\n\t\tPreparedStatement p = null;\n\t\t\n\t\ttry {\n\t\t\ts = this.conn.createStatement();\n\t\t\trs = s.executeQuery(this.getSql(ConfigKeys.QUERY_MAXGROUPID));\n\t\t\t\n\t\t\tif (rs.next()) {\n\t\t\t\tint groupId = rs.getInt(1);\n\t\t\t\t\n\t\t\t\tp = this.conn.prepareStatement(this.getSql(ConfigKeys.QUERY_ADMINUSERGROUPS));\n\t\t\t\tp.setInt(1, groupId);\n\t\t\t\tp.executeUpdate();\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t\tDbUtils.close(s);\n\t\t}\n\t}\n\t\n\tprivate String getSql(String queryName)\n\t{\n\t\tString query = SystemGlobals.getSql(queryName);\n\t\t\n\t\tquery = StringUtils.replace(query, \"${phpbb}\", SystemGlobals.getValue(ConfigKeys.DATABASE_PHPBB));\n\t\tquery = StringUtils.replace(query, \"${table.prefix}\", SystemGlobals.getValue(ConfigKeys.PHPBB_TABLE_PREFIX));\n\t\t\n\t\treturn query;\n\t}",
  "metadata": {
    "fileId": "Main_java_chunk_2",
    "fileName": "Main.java",
    "filePath": "tools/phpbb2jforum/src/net/jforum/tools/phpbb2jforum/Main.java"
  }
}