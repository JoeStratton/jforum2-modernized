{
  "pageContent": "File Path: src/net/jforum/SessionFacade.java\n\n Original Content: /**\n\t * Persists user session information.\n\t * This method will get a <code>Connection</code> making a call to\n\t * <code>DBConnection.getImplementation().getConnection()</code>, and\n\t * then releasing the connection after the method is processed.   \n\t * \n\t * @param sessionId The session which we're going to persist information\n\t * @see #storeSessionData(String, Connection)\n\t */\n\tpublic static void storeSessionData(String sessionId)\n\t{\n\t\tConnection conn = null;\n\t\ttry {\n\t\t\tconn = DBConnection.getImplementation().getConnection();\n\t\t\tSessionFacade.storeSessionData(sessionId, conn);\n\t\t}\n\t\tfinally {\n\t\t\tif (conn != null) {\n\t\t\t\ttry {\n\t\t\t\t\tDBConnection.getImplementation().releaseConnection(conn);\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n\t\t\t\t\tlogger.warn(\"Error while releasing a connection: \" + e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Persists user session information.\n\t * \n\t * @param sessionId The session which we're going to persist\n\t * @param conn A <code>Connection</code> to be used to connect to\n\t * the database. \n\t * @see #storeSessionData(String)\n\t */\n\tpublic static void storeSessionData(String sessionId, Connection conn) \n\t{\n\t\tUserSession us = SessionFacade.getUserSession(sessionId);\n\t\tif (us != null) {\n\t\t\ttry {\n\t\t\t\tif (us.getUserId() != SystemGlobals.getIntValue(ConfigKeys.ANONYMOUS_USER_ID)) {\n\t\t\t\t\tDataAccessDriver.getInstance().newUserSessionDAO().update(us, conn);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSecurityRepository.remove(us.getUserId());\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tlogger.warn(\"Error storing user session data: \" + e, e);\n\t\t\t}\n\t\t}\n\t}\n}",
  "metadata": {
    "fileId": "SessionFacade_java_chunk_3",
    "fileName": "SessionFacade.java",
    "filePath": "src/net/jforum/SessionFacade.java"
  }
}