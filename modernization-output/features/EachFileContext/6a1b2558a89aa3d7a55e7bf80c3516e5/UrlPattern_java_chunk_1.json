{
  "pageContent": "File Path: src/net/jforum/UrlPattern.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms,\n * with or without modification, are permitted provided\n * that the following conditions are met:\n *\n * 1) Redistributions of source code must retain the above\n * copyright notice, this list of conditions and the\n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the\n * above copyright notice, this list of conditions and\n * the following disclaimer in the documentation and/or\n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor\n * the names of its contributors may be used to endorse\n * or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT\n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING,\n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL\n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\n * IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n *\n *\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum;\n\n/**\n * URL Patterns keeper.\n * Represents a single URL pattern. Each pattern is composed\n * by a name, the pattern itself, the pattern's size and the\n * splited variables. <br><br>\n *\n * The pattern is expected in the form <i>var1, var2, varN</i>, in the\n * correct order. This means that if <i>var1</i> comes first, it <b>must</b>\n * come first in the URL. The same is valid to others.<br><br>\n *\n * Please note that \"first\" here is \"first\" after regular URL, which is\n * composed by server and servlet name, in the most simple case.<br><br>\n *\n * <b>Example:</b><br>\n *\n * URL: <i>http://localhost:8080/webappName/someDir/myServlet/news/view/3.page<i>.\n * <br>\n * In this case, <i>http://localhost:8080/webappName/someDir/myServlet/</i> is the\n * regular URL, the part that we don't care about. We only want the part\n * <i>news/view/3.page</i> ( where .page is the servlet extension ).\n * <br>For this URL, we could make the following pattern:<br><br>\n *\n * <i>news.view.1 = news_id</i><br><br>\n *\n * Here, <i>news.view.1</i> is the pattern's name, and <i>news_id</i> is\n * the patterns itself. <br>\n * Another example:<br><br>\n *\n * <i>news.view.2 = page, news_id</i><br><br>\n *\n * In this case we have a new var called <i>page</i>, that represents the page being seen.<br>\n * Each entry is composed in the form:<br><br>\n *\n * <i>&lt;moduleName&gt;.&lt;actionName&gt;.&lt;numberOfParameters&gt; = &lt;var 1&gt;,&lt;var n&gt;</i>\n * <br><br>\n *\n * Please note that module and action's name aren't pattern's composition, so\n * don't put them there. The system will consider that the pattern only contains\n * the variables diferent to each request ( e.g, id's ). If the pattern you're\n * constructing doesn't have any variable, just leave it blank, like<br><br>\n *\n * <i>myModule.myAction.0 = </i><br><br>\n *\n * @author Rafael Steil\n * @version $Id: UrlPattern.java,v 1.1 2006/08/23 02:13:49 rafaelsteil Exp $\n */\npublic class UrlPattern\n{\n    private String name;\n    private String value;\n    private int size;\n    private String[] vars;\n\n    public UrlPattern(String name, String value)\n    {\n        this.name = name;\n        this.value = value;\n\n        this.processPattern();\n    }\n\n    private void processPattern()\n    {\n        String[] p = this.value.split(\",\");\n\n        this.vars = new String[p.length];\n        this.size = ((((p[0]).trim()).equals(\"\")) ? 0 : p.length);\n\n        for (int i = 0; i < this.size; i++) {\n            this.vars[i] = (p[i]).trim();\n        }\n    }\n\n    /**\n     * Gets the pattern name\n     *\n     * @return String with the pattern name\n     */\n    public String getName()\n    {\n        return this.name;\n    }\n\n    /**\n     * Get pattern's total vars\n     *\n     * @return The total\n     */\n    public int getSize()\n    {\n        return this.size;\n    }\n\n    /**\n     * Gets the vars.\n     * The URL variables are in the correct order, which means\n     * that the first position always will be \"something1\", the\n     * second \"something2\" and so on. The system expects this\n     * order never changes from requisition to requisition.\n     *\n     * @return The vars\n     */\n    public String[] getVars()\n    {\n        return this.vars;\n    }\n}",
  "metadata": {
    "fileId": "UrlPattern_java_chunk_1",
    "fileName": "UrlPattern.java",
    "filePath": "src/net/jforum/UrlPattern.java"
  }
}