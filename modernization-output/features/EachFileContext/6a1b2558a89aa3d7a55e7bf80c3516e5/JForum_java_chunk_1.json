{
  "pageContent": "File Path: src/net/jforum/JForum.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: Mar 3, 2003 / 11:43:35 AM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum;\n\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.Writer;\nimport java.sql.Connection;\n\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport net.jforum.context.JForumContext;\nimport net.jforum.context.RequestContext;\nimport net.jforum.context.ResponseContext;\nimport net.jforum.context.web.WebRequestContext;\nimport net.jforum.context.web.WebResponseContext;\nimport net.jforum.dao.MySQLVersionWorkarounder;\nimport net.jforum.entities.Banlist;\nimport net.jforum.exceptions.ExceptionWriter;\nimport net.jforum.exceptions.ForumStartupException;\nimport net.jforum.repository.BanlistRepository;\nimport net.jforum.repository.ModulesRepository;\nimport net.jforum.repository.RankingRepository;\nimport net.jforum.repository.SecurityRepository;\nimport net.jforum.repository.SmiliesRepository;\nimport net.jforum.util.I18n;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\nimport freemarker.template.SimpleHash;\nimport freemarker.template.Template;\n\n/**\n * Front Controller.\n * \n * @author Rafael Steil\n * @version $Id: JForum.java,v 1.116 2007/10/10 04:54:20 rafaelsteil Exp $\n */\npublic class JForum extends JForumBaseServlet \n{\n\tprivate static boolean isDatabaseUp;\n\t\n\t/**\n\t * @see javax.servlet.Servlet#init(javax.servlet.ServletConfig)\n\t */\n\tpublic void init(ServletConfig config) throws ServletException\n\t{\n\t\tsuper.init(config);\n\t\tsuper.startApplication();\n\t\t\n\t\t// Start database\n\t\tisDatabaseUp = ForumStartup.startDatabase();\n\t\t\n\t\ttry {\n\t\t\tConnection conn = DBConnection.getImplementation().getConnection();\n\t\t\tconn.setAutoCommit(!SystemGlobals.getBoolValue(ConfigKeys.DATABASE_USE_TRANSACTIONS));\n\t\t\t\n\t\t\t// Try to fix some MySQL problems\n\t\t\tMySQLVersionWorkarounder dw = new MySQLVersionWorkarounder();\n\t\t\tdw.handleWorkarounds(conn);\n\t\t\t\n\t\t\t// Continues loading the forum\n\t\t\tJForumExecutionContext ex = JForumExecutionContext.get();\n\t\t\tex.setConnection(conn);\n\t\t\tJForumExecutionContext.set(ex);\n\t\t\t\n\t\t\t// Init general forum stuff\n\t\t\tForumStartup.startForumRepository();\n\t\t\tRankingRepository.loadRanks();\n\t\t\tSmiliesRepository.loadSmilies();\n\t\t\tBanlistRepository.loadBanlist();\n\t\t}\n\t\tcatch (Throwable e) {\n            e.printStackTrace();\n            throw new ForumStartupException(\"Error while starting jforum\", e);\n\t\t}\n\t\tfinally {\n\t\t\tJForumExecutionContext.finish();\n\t\t}\n\t}\n\t\n\t/**\n\t * @see javax.servlet.http.HttpServlet#service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n\t */\n\tpublic void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException\n\t{\n\t\tWriter out = null;\n\t\tJForumContext forumContext = null;\n\t\tRequestContext request = null;\n\t\tResponseContext response = null;\n\t\tString encoding = SystemGlobals.getValue(ConfigKeys.ENCODING);\n\n\t\ttry {\n\t\t\t// Initializes the execution context\n\t\t\tJForumExecutionContext ex = JForumExecutionContext.get();\n\n\t\t\trequest = new WebRequestContext(req);\n            response = new WebResponseContext(res);\n\n\t\t\tthis.checkDatabaseStatus();\n\n            forumContext = new JForumContext(request.getContextPath(),\n                SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION),\n                request,\n                response\n            );\n            ex.setForumContext(forumContext);\n\n            JForumExecutionContext.set(ex);\n\n\t\t\t// Setup stuff\n\t\t\tSimpleHash context = JForumExecutionContext.getTemplateContext();\n\t\t\t\n\t\t\tControllerUtils utils = new ControllerUtils();\n\t\t\tutils.refreshSession();\n\t\t\t\n\t\t\tcontext.put(\"logged\", SessionFacade.isLogged());\n\t\t\t\n\t\t\t// Process security data\n\t\t\tSecurityRepository.load(SessionFacade.getUserSession().getUserId());\n\n\t\t\tutils.prepareTemplateContext(context, forumContext);\n\n\t\t\tString module = request.getModule();\n\t\t\t\n\t\t\t// Gets the module class name\n\t\t\tString moduleClass = module != null \n\t\t\t\t? ModulesRepository.getModuleClass(module) \n\t\t\t\t: null;\n\t\t\t\n\t\t\tif (moduleClass == null) {\n\t\t\t\t// Module not found, send 404 not found response\n\t\t\t\tresponse.sendError(HttpServletResponse.SC_NOT_FOUND);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tboolean shouldBan = this.shouldBan(request.getRemoteAddr());\n\t\t\t\t\n\t\t\t\tif (!shouldBan) {\n\t\t\t\t\tcontext.put(\"moduleName\", module);\n\t\t\t\t\tcontext.put(\"action\", request.getAction());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmoduleClass = ModulesRepository.getModuleClass(\"forums\");\n\t\t\t\t\tcontext.put(\"moduleName\", \"forums\");\n\t\t\t\t\t((WebRequestContext)request).changeAction(\"banned\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (shouldBan && SystemGlobals.getBoolValue(ConfigKeys.BANLIST_SEND_403FORBIDDEN)) {\n\t\t\t\t\tresponse.sendError(HttpServletResponse.SC_FORBIDDEN);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontext.put(\"language\", I18n.getUserLanguage());\n\t\t\t\t\tcontext.put(\"session\", SessionFacade.getUserSession());\n\t\t\t\t\tcontext.put(\"request\", req);\n\t\t\t\t\tcontext.put(\"response\", response);\n\t\t\t\t\t\n\t\t\t\t\tout = this.processCommand(out, request, response, encoding, context, moduleClass);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthis.handleException(out, response, encoding, e, request);\n\t\t}\n\t\tfinally {\n\t\t\tthis.handleFinally(out, forumContext, response);\n\t\t}\t\t\n\t}\n\n\tprivate Writer processCommand(Writer out, RequestContext request, ResponseContext response, \n\t\t\tString encoding, SimpleHash context, String moduleClass) throws Exception\n\t{\n\t\t// Here we go, baby\n\t\tCommand c = this.retrieveCommand(moduleClass);\n\t\tTemplate template = c.process(request, response, context);\n\n\t\tif (JForumExecutionContext.getRedirectTo() == null) {\n\t\t\tString contentType = JForumExecutionContext.getContentType();\n\t\t\t\n\t\t\tif (contentType == null) {\n\t\t\t\tcontentType = \"text/html; charset=\" + encoding;\n\t\t\t}\n\t\t\t\n\t\t\tresponse.setContentType(contentType);\n\t\t\t\n\t\t\t// Binary content are expected to be fully \n\t\t\t// handled in the action, including outputstream\n\t\t\t// manipulation\n\t\t\tif (!JForumExecutionContext.isCustomContent()) {\n\t\t\t\tout = new BufferedWriter(new OutputStreamWriter(response.getOutputStream(), encoding));\n\t\t\t\ttemplate.process(JForumExecutionContext.getTemplateContext(), out);\n\t\t\t\tout.flush();\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn out;\n\t}\n\n\tprivate void checkDatabaseStatus()\n\t{\n\t\tif (!isDatabaseUp) {\n\t\t\tsynchronized (this) {\n\t\t\t\tif (!isDatabaseUp) {\n\t\t\t\t\tisDatabaseUp = ForumStartup.startDatabase();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void handleFinally(Writer out, JForumContext forumContext, ResponseContext response) throws IOException\n\t{\n\t\ttry {\n\t\t\tif (out != null) { out.close(); }\n\t\t}\n\t\tcatch (Exception e) {\n\t\t    // catch close error \n\t\t}\n\t\t\n\t\tString redirectTo = JForumExecutionContext.getRedirectTo();\n\t\tJForumExecutionContext.finish();\n\t\t\n\t\tif (redirectTo != null) {\n\t\t\tif (forumContext != null && forumContext.isEncodingDisabled()) {\n\t\t\t\tresponse.sendRedirect(redirectTo);\n\t\t\t} \n\t\t\telse {\n\t\t\t\tresponse.sendRedirect(response.encodeRedirectURL(redirectTo));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void handleException(Writer out, ResponseContext response, String encoding, \n\t\tException e, RequestContext request) throws IOException\n\t{\n\t\tJForumExecutionContext.enableRollback();\n\t\t\n\t\tif (e.toString().indexOf(\"ClientAbortException\") == -1) {\n\t\t\tresponse.setContentType(\"text/html; charset=\" + encoding);\n\t\t\tif (out != null) {\n\t\t\t\tnew ExceptionWriter().handleExceptionData(e, out, request);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnew ExceptionWriter().handleExceptionData(e, new BufferedWriter(new OutputStreamWriter(response.getOutputStream())), request);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate boolean shouldBan(String ip)\n\t{\n\t\tBanlist b = new Banlist();\n\t\t\n\t\tb.setUserId(SessionFacade.getUserSession().getUserId());\n\t\tb.setIp(ip);\n\t\t\n\t\treturn BanlistRepository.shouldBan(b);\n\t}\n\n\tprivate Command retrieveCommand(String moduleClass) throws Exception\n\t{\n\t\treturn (Command)Class.forName(moduleClass).newInstance();\n\t}\n\t\n\t/** \n\t * @see javax.servlet.GenericServlet#destroy()\n\t */\n\tpublic void destroy() {\n\t\tsuper.destroy();\n\t\tSystem.out.println(\"Destroying JForum...\");\n\t\t\n\t\ttry {\n\t\t\tDBConnection.getImplementation().realReleaseAllConnections();\n\t\t\tConfigLoader.stopCacheEngine();\n\t\t}\n\t\tcatch (Exception e) { }\n\t}\n}",
  "metadata": {
    "fileId": "JForum_java_chunk_1",
    "fileName": "JForum.java",
    "filePath": "src/net/jforum/JForum.java"
  }
}