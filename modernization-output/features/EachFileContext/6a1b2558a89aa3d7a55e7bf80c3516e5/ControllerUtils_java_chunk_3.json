{
  "pageContent": "File Path: src/net/jforum/ControllerUtils.java\n\n Original Content: if (cookies != null) {\n\t\t\tfor (int i = 0; i < cookies.length; i++) {\n\t\t\t\tCookie c = cookies[i];\n\n\t\t\t\tif (c.getName().equals(name)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\t\n\t/**\n\t * Template method to get a cookie.\n\t * Useful to situations when a subclass\n\t * wants to have a different way to \n\t * retrieve a cookie.\n\t * @param name The cookie name to retrieve\n\t * @return The Cookie object if found, or null otherwise\n\t * @see #getCookie(String)\n\t */\n\tprotected Cookie getCookieTemplate(String name)\n\t{\n\t\treturn ControllerUtils.getCookie(name);\n\t}\n\n\t/**\n\t * Add or update a cookie. This method adds a cookie, serializing its value using XML.\n\t * \n\t * @param name The cookie name.\n\t * @param value The cookie value\n\t */\n\tpublic static void addCookie(String name, String value)\n\t{\n\t\tint maxAge = 3600 * 24 * 365;\n\t\t\n\t\tif (value == null) {\n\t\t\tmaxAge = 0;\n\t\t\tvalue = \"\";\n\t\t}\n\t\t\n\t\tCookie cookie = new Cookie(name, value);\n\t\tcookie.setMaxAge(maxAge);\n\t\tcookie.setPath(\"/\");\n\n\t\tJForumExecutionContext.getResponse().addCookie(cookie);\n\t}\n\t\n\t/**\n\t * Template method to add a cookie.\n\t * Useful to suatins when a subclass wants to add\n\t * a cookie in a fashion different than the normal \n\t * behaviour\n\t * @param name The cookie name\n\t * @param value The cookie value\n\t * @see #addCookie(String, String)\n\t */\n\tprotected void addCookieTemplate(String name, String value)\n\t{\n\t\tControllerUtils.addCookie(name, value);\n\t}\n}",
  "metadata": {
    "fileId": "ControllerUtils_java_chunk_3",
    "fileName": "ControllerUtils.java",
    "filePath": "src/net/jforum/ControllerUtils.java"
  }
}