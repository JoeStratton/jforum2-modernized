{
  "pageContent": "File Path: src/net/jforum/repository/Tpl.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * \n * All rights reserved.\n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on Mar 14, 2005 3:27:33 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.repository;\n\nimport java.io.FileInputStream;\nimport java.util.Iterator;\nimport java.util.Properties;\n\nimport net.jforum.cache.CacheEngine;\nimport net.jforum.cache.Cacheable;\nimport net.jforum.exceptions.ConfigLoadException;\n\n/**\n * @author Rafael Steil\n * @version $Id: Tpl.java,v 1.7 2007/04/12 02:11:54 rafaelsteil Exp $\n */\npublic class Tpl implements Cacheable\n{\n\tprivate static final String FQN = \"templates\";\n\t\n\tprivate static CacheEngine cache;\n\t\n\t/**\n\t * @see net.jforum.cache.Cacheable#setCacheEngine(net.jforum.cache.CacheEngine)\n\t */\n\tpublic void setCacheEngine(CacheEngine engine)\n\t{\n\t\tcache = engine;\n\t}\n\n\t/**\n\t * Loads the HTML mappings file. \n\t * \n\t * @param filename The complete path to the file to load\n\t * @throws ConfigLoadException if the file is not found or\n\t * some other error occurs when loading the file.\n\t */\n\tpublic static void load(String filename)\n\t{\n\t\tFileInputStream fis = null;\n\t\t\n\t\ttry {\n\t\t\tProperties p = new Properties();\n\t\t\tfis = new FileInputStream(filename);\n\t\t\tp.load(fis);\n\t\t\t\n\t\t\tfor (Iterator iter = p.keySet().iterator(); iter.hasNext(); ) {\n\t\t\t\tString key = (String)iter.next();\n\t\t\t\t\n\t\t\t\tcache.add(FQN, key, p.getProperty(key));\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tthrow new ConfigLoadException(\"Error while trying to load \" + filename + \": \" + e);\n\t\t}\n\t\tfinally {\n\t\t\tif (fis != null) {\n\t\t\t\ttry { fis.close(); } catch (Exception e) {}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Gets a template filename by its configuration's key\n\t * \n\t * @param key The Key to load.\n\t * @return The html template filename\n\t */\n\tpublic static String name(String key)\n\t{\n\t\treturn (String)cache.get(FQN, key);\n\t}\n}",
  "metadata": {
    "fileId": "Tpl_java_chunk_1",
    "fileName": "Tpl.java",
    "filePath": "src/net/jforum/repository/Tpl.java"
  }
}