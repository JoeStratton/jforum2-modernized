{
  "pageContent": "File Path: src/net/jforum/repository/SmiliesRepository.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: 13/01/2004 / 20:23:52\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.repository;\n\nimport java.util.Iterator;\nimport java.util.List;\n\nimport net.jforum.cache.CacheEngine;\nimport net.jforum.cache.Cacheable;\nimport net.jforum.dao.DataAccessDriver;\nimport net.jforum.entities.Smilie;\nimport net.jforum.exceptions.SmiliesLoadException;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * @author Rafael Steil\n * @version $Id: SmiliesRepository.java,v 1.15 2006/08/20 22:47:38 rafaelsteil Exp $\n */\npublic class SmiliesRepository implements Cacheable\n{\n\tprivate static CacheEngine cache;\n\tprivate static final String FQN = \"smilies\";\n\tprivate static final String ENTRIES = \"entries\";\n\tprivate static boolean contexted = false;\n\n\t/**\n\t * @see net.jforum.cache.Cacheable#setCacheEngine(net.jforum.cache.CacheEngine)\n\t */\n\tpublic void setCacheEngine(CacheEngine engine)\n\t{\n\t\tcache = engine;\n\t}\n\t\n\tpublic static void loadSmilies()\n\t{\n\t\ttry {\n\t\t\tcache.add(FQN, ENTRIES, DataAccessDriver.getInstance().newSmilieDAO().selectAll());\n\t\t\tcontexted = false;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SmiliesLoadException(\"Error while loading smilies: \" + e);\n\t\t}\n\t}\n\t\n\tpublic static List getSmilies()\n\t{\n\t\tList list = (List)cache.get(FQN, ENTRIES);\n\t\tif (!contexted) {\n\t\t\tString forumLink = SystemGlobals.getValue(ConfigKeys.FORUM_LINK);\n\t\t\t\n\t\t\tfor (Iterator iter = list.iterator(); iter.hasNext(); ) {\n\t\t\t\tSmilie s = (Smilie)iter.next();\n\t\t\t\ts.setUrl(s.getUrl().replaceAll(\"#CONTEXT#\", forumLink).replaceAll(\"\\\\\\\\\", \"\"));\n\t\t\t}\n\t\t\t\n\t\t\tcache.add(FQN, ENTRIES, list);\n\t\t\tcontexted = true;\n\t\t}\n\t\t\n\t\treturn list;\n\t}\n}",
  "metadata": {
    "fileId": "SmiliesRepository_java_chunk_1",
    "fileName": "SmiliesRepository.java",
    "filePath": "src/net/jforum/repository/SmiliesRepository.java"
  }
}