{
  "pageContent": "File Path: src/net/jforum/sso/RemoteUserSSO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on Mar 28, 2005 7:36:00 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.sso;\n\nimport net.jforum.context.RequestContext;\nimport net.jforum.entities.UserSession;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * Simple SSO authenticator. This class will try to validate an user by simple checking\n * <code>request.getRemoteUser()</code> is not null.\n * \n * @author Rafael Steil\n * @author Daniel Campagnoli\n * @version $Id: RemoteUserSSO.java,v 1.10 2006/08/23 02:13:53 rafaelsteil Exp $\n */\npublic class RemoteUserSSO implements SSO\n{\n\t/**\n\t * @see net.jforum.sso.SSO#authenticateUser(net.jforum.context.RequestContext)\n     * @param request AWebContextRequest     * @return String\n\t */\n\tpublic String authenticateUser(RequestContext request)\n\t{\n\t\treturn request.getRemoteUser();\n\t}\n\n\tpublic boolean isSessionValid(UserSession userSession, RequestContext request)\n\t{\n\t\tString remoteUser = request.getRemoteUser();\n\n\t\t// user has since logged out\n\t\tif (remoteUser == null && userSession.getUserId() != SystemGlobals.getIntValue(ConfigKeys.ANONYMOUS_USER_ID)) {\n\t\t\treturn false;\n\t\t}\n\t\t// user has since logged in\n\t\telse if (remoteUser != null\n\t\t\t\t&& userSession.getUserId() == SystemGlobals.getIntValue(ConfigKeys.ANONYMOUS_USER_ID)) {\n\t\t\treturn false;\n\t\t}\n\t\t// user has changed user\n\t\telse if (remoteUser != null && !remoteUser.equals(userSession.getUsername())) {\n\t\t\treturn false;\n\t\t}\n        \n\t\treturn true;\n\t}\n}",
  "metadata": {
    "fileId": "RemoteUserSSO_java_chunk_1",
    "fileName": "RemoteUserSSO.java",
    "filePath": "src/net/jforum/sso/RemoteUserSSO.java"
  }
}