{
  "pageContent": "File Path: src/net/jforum/util/bbcode/BBCodeHandler.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: 03/08/2003 / 05:28:03\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.util.bbcode;\n\n import java.io.File;\nimport java.io.Serializable;\nimport java.util.Collection;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\n\nimport javax.xml.parsers.SAXParser;\nimport javax.xml.parsers.SAXParserFactory;\n\nimport net.jforum.exceptions.ForumException;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\n\nimport org.xml.sax.Attributes;\nimport org.xml.sax.InputSource;\nimport org.xml.sax.SAXException;\nimport org.xml.sax.SAXParseException;\nimport org.xml.sax.helpers.DefaultHandler;\n\n/**\n * @author Rafael Steil\n * @version $Id: BBCodeHandler.java,v 1.19 2007/07/28 14:17:09 rafaelsteil Exp $\n */\npublic class BBCodeHandler extends DefaultHandler implements Serializable\n{\n\tprivate Map bbMap = new LinkedHashMap();\n\tprivate Map alwaysProcessMap = new LinkedHashMap();\n\tprivate String tagName = \"\";\n\tprivate StringBuffer sb;\t\n\tprivate BBCode bb;\n\t\n\tpublic BBCodeHandler() { }\n\t\n\tpublic BBCodeHandler parse()\n\t{\n\t\ttry\n\t\t{\n\t\t\tSAXParser parser = SAXParserFactory.newInstance().newSAXParser();\n\t\t\tBBCodeHandler bbParser = new BBCodeHandler();\n\n\t\t\tString path = SystemGlobals.getValue(ConfigKeys.CONFIG_DIR) + \"/bb_config.xml\";\n\n\t\t\tFile fileInput = new File(path);\n\n\t\t\tif (fileInput.exists()) {\n\t\t\t\tparser.parse(fileInput, bbParser);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tInputSource input = new InputSource(path);\n\t\t\t\tparser.parse(input, bbParser);\n\t\t\t}\n\n\t\t\treturn bbParser;\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\tthrow new ForumException(e);\n\t\t}\n\t}\n\n\tpublic void addBb(BBCode bb)\n\t{\n\t\tif (bb.alwaysProcess()) {\n\t\t\tthis.alwaysProcessMap.put(bb.getTagName(), bb);\n\t\t}\n\t\telse {\n\t\t\tthis.bbMap.put(bb.getTagName(), bb);\n\t\t}\n\t}\n\t\n\tpublic Collection getBbList()\n\t{\n\t\treturn this.bbMap.values();\n\t}\n\t\n\tpublic Collection getAlwaysProcessList()\n\t{\n\t\treturn this.alwaysProcessMap.values();\n\t}\n\t\n\tpublic BBCode findByName(String tagName)\n\t{\n\t\treturn (BBCode)this.bbMap.get(tagName);\n\t}\n\t\n\tpublic void startElement(String uri, String localName, String tag, Attributes attrs)\n\t{\n\t\tif (tag.equals(\"match\")) {\n\t\t\tthis.sb = new StringBuffer();\n\t\t\tthis.bb = new BBCode();\n\t\t\t\n\t\t\tString tagName = attrs.getValue(\"name\");\n\t\t\tif (tagName != null) {\n\t\t\t\tthis.bb.setTagName(tagName);\n\t\t\t}\n\t\t\t\n\t\t\t// Shall we remove the infamous quotes?\n\t\t\tString removeQuotes = attrs.getValue(\"removeQuotes\");\n\t\t\tif (removeQuotes != null && removeQuotes.equals(\"true\")) {\n\t\t\t\tthis.bb.enableRemoveQuotes();\n\t\t\t}\n\t\t\t\n\t\t\tString alwaysProcess = attrs.getValue(\"alwaysProcess\");\n\t\t\tif (alwaysProcess != null && \"true\".equals(alwaysProcess)) {\n\t\t\t\tthis.bb.enableAlwaysProcess();\n\t\t\t}\n\t\t}\n\t\n\t\tthis.tagName = tag;\n\t}\n\n\tpublic void endElement(String uri, String localName, String tag)\n\t{\t\n\t\tif (tag.equals(\"match\")) {\n\t\t\tthis.addBb(this.bb);\n\t\t}\n\t\telse if (this.tagName.equals(\"replace\")) {\n\t\t\tthis.bb.setReplace(this.sb.toString().trim());\n\t\t\tthis.sb.delete(0, this.sb.length());\n\t\t}\n\t\telse if (this.tagName.equals(\"regex\")) {\n\t\t\tthis.bb.setRegex(this.sb.toString().trim());\n\t\t\tthis.sb.delete(0, this.sb.length());\n\t\t}\n\t\n\t\tthis.tagName = \"\";\n\t}\n\n\tpublic void characters(char ch[], int start, int length)\n\t{\n\t\tif (this.tagName.equals(\"replace\") || this.tagName.equals(\"regex\"))\n\t\t\tthis.sb.append(ch, start, length);\n\t}\n\n\tpublic void error(SAXParseException exception) throws SAXException \n\t{\n\t\tthrow exception;\n\t}\n}",
  "metadata": {
    "fileId": "BBCodeHandler_java_chunk_1",
    "fileName": "BBCodeHandler.java",
    "filePath": "src/net/jforum/util/bbcode/BBCodeHandler.java"
  }
}