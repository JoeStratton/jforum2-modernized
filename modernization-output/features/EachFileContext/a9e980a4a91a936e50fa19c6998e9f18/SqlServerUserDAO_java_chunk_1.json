{
  "pageContent": "File Path: src/net/jforum/dao/sqlserver/SqlServerUserDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n\n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n\n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on 24/05/2004 22:36:07\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao.sqlserver;\n\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.List;\n\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.util.DbUtils;\nimport net.jforum.util.preferences.SystemGlobals;\n\nimport org.apache.log4j.Logger;\n\n\n/**\n * @author Andre de Andrade da Silva - andre.de.andrade@gmail.com\n * @author Dirk Rasmussen - d.rasmussen@bevis.de (2007/02/19, modifs for MS SqlServer 2005)\n * @see WEB-INF\\config\\database\\sqlserver\\sqlserver.sql (2007/02/19, MS SqlServer 2005 specific version!)\n * @version $Id: SqlServerUserDAO.java,v 1.11 2007/03/03 18:33:45 rafaelsteil Exp $\n */\npublic class SqlServerUserDAO extends net.jforum.dao.generic.GenericUserDAO\n{\n\tprivate static final Logger logger = Logger.getLogger(SqlServerUserDAO.class);\n\n\t/**\n\t * @see net.jforum.dao.UserDAO#selectAll(int, int)\n\t */\n\tpublic List selectAll(int startFrom, int count)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\tString sqlStmnt = null;\n\n\t\ttry {\n\t\t\tif (count > 0) {\n\t\t\t\tsqlStmnt = SystemGlobals.getSql(\"UserModel.selectAllByLimit\");\n\t\t\t\tif (logger.isDebugEnabled())\n\t\t\t\t{\n\t\t\t\t\tlogger.debug(\"selectAll(\"+startFrom+\",\"+count+\")..., sqlStmnt=\"+sqlStmnt);\n\t\t\t\t}\n\t\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(sqlStmnt);\n\t\t\t\tp.setInt(1, startFrom);\n\t\t\t\tp.setInt(2, startFrom+count);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsqlStmnt = SystemGlobals.getSql(\"UserModel.selectAll\");\n\t\t\t\tif (logger.isDebugEnabled())\n\t\t\t\t{\n\t\t\t\t\tlogger.debug(\"selectAll(\"+startFrom+\",\"+count+\")..., sqlStmnt=\"+sqlStmnt);\n\t\t\t\t}\n\t\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(sqlStmnt);\n\t\t\t}\n\n\t\t\trs = p.executeQuery();\n\n\t\t\treturn super.processSelectAll(rs);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tlogger.error(sqlStmnt, e);\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.UserDAO#selectAllByGroup(int, int, int)\n\t */\n\tpublic List selectAllByGroup(int groupId, int startFrom, int count)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\tString sqlStmnt = SystemGlobals.getSql(\"UserModel.selectAllByGroup\");\n\t\tif (logger.isDebugEnabled())\n\t\t{\n\t\t\tlogger.debug(\"selectAllByGroup(\"+groupId+\",\"+startFrom+\",\"+count+\")..., sqlStmnt=\"+sqlStmnt);\n\t\t}\n\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(sqlStmnt);\n\t\t\tp.setInt(1, groupId);\n\t\t\tp.setInt(2, startFrom);\n\t\t\tp.setInt(3, count);\n\n\t\t\trs = p.executeQuery();\n\n\t\t\treturn this.processSelectAll(rs);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\n\t/**\n\t * @see net.jforum.dao.UserDAO#selectAllWithKarma(int, int)\n\t */\n\tpublic List selectAllWithKarma(int startFrom, int count)\n\t{\n\t\treturn super.loadKarma(this.selectAll(startFrom, count));\n\t}\n}",
  "metadata": {
    "fileId": "SqlServerUserDAO_java_chunk_1",
    "fileName": "SqlServerUserDAO.java",
    "filePath": "src/net/jforum/dao/sqlserver/SqlServerUserDAO.java"
  }
}