{
  "pageContent": "File Path: tests/core/net/jforum/OnlineUsersTest.java\n\n Original Content: /*\n * Created on Jun 15, 2005 11:57:08 AM\n */\npackage net.jforum;\n\nimport junit.framework.TestCase;\nimport net.jforum.cache.DefaultCacheEngine;\nimport net.jforum.context.web.WebRequestContext;\nimport net.jforum.context.web.WebResponseContext;\nimport net.jforum.context.RequestContext;\nimport net.jforum.context.ResponseContext;\nimport net.jforum.context.ForumContext;\nimport net.jforum.context.JForumContext;\nimport net.jforum.entities.UserSession;\nimport net.jforum.http.FakeHttpRequest;\nimport net.jforum.http.FakeHttpResponse;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * Test {@link net.jforum.SessionFacade} methods for online users\n * \n * @author Rafael Steil\n * @version $Id: OnlineUsersTest.java,v 1.9 2006/08/24 21:03:00 sergemaslyukov Exp $\n */\npublic class OnlineUsersTest extends TestCase\n{\n\tprivate static final int ANONYMOUS = 1;\n\t\n\tprotected void setUp() throws Exception\n\t{\n\t\tnew SessionFacade().setCacheEngine(new DefaultCacheEngine());\n\t\t\n        RequestContext requestContext = new WebRequestContext(new FakeHttpRequest());\n        ResponseContext responseContext = new WebResponseContext(new FakeHttpResponse());\n\n        ForumContext forumContext = new JForumContext(\n            requestContext.getContextPath(),\n            SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION),\n            requestContext,\n            responseContext,\n            false\n        );\n        JForumExecutionContext ex = JForumExecutionContext.get();\n        ex.setForumContext( forumContext );\n\n\t\tJForumExecutionContext.set(ex);\n\t\t\n\t\tSystemGlobals.setValue(ConfigKeys.ANONYMOUS_USER_ID, Integer.toString(ANONYMOUS));\n\t}\n\t\n\t/**\n\t * Check if guest users are being counted correctly\n\t */\n\tpublic void testAnonymousCount()\n\t{\n\t\tthis.createUserSession(ANONYMOUS, ANONYMOUS + 1 + \"_\" + System.currentTimeMillis());\n\t\tthis.createUserSession(ANONYMOUS, ANONYMOUS + 2 + \"_\" + System.currentTimeMillis());\n\t\tthis.createUserSession(ANONYMOUS, ANONYMOUS + 3 + \"_\" + System.currentTimeMillis());\n\t\t\n\t\tassertEquals(3, SessionFacade.anonymousSize());\n\t}\n\t\n\t/**\n\t * Check if counting of both guest and logged users is correct\n\t */\n\tpublic void test2Anymous1Logged() \n\t{\n\t\t// Anonymous\n\t\tthis.createUserSession(ANONYMOUS, ANONYMOUS + \"1_\" + System.currentTimeMillis());\n\t\tthis.createUserSession(ANONYMOUS, ANONYMOUS + \"2_\" + System.currentTimeMillis());\n\t\t\n\t\t// Logged\n\t\tSessionFacade.setAttribute(\"logged\", \"1\");\n\t\tthis.createUserSession(2, \"logged\" + System.currentTimeMillis());\n\t\t\n\t\t// Assert\n\t\tassertEquals(2, SessionFacade.anonymousSize());\n\t\tassertEquals(1, SessionFacade.registeredSize());\n\t}\n\t\n\t/**\n\t * First register as anonymous, then change to logged, and check counting\n\t */\n\tpublic void testAnonymousThenLogged()\n\t{\n\t\t// Anonymous\n\t\tString sessionId = ANONYMOUS + \"1_\" + System.currentTimeMillis();\n\t\t\n\t\tthis.createUserSession(ANONYMOUS, sessionId);\n\t\t\n\t\tassertEquals(1, SessionFacade.anonymousSize());\n\t\tassertEquals(0, SessionFacade.registeredSize());\n\t\t\n\t\t// Logged\n\t\tUserSession us = SessionFacade.getUserSession(sessionId);\n\t\tus.setUserId(2);\n\t\t\n\t\tSessionFacade.setAttribute(\"logged\", \"1\");\n\t\t\n\t\tSessionFacade.remove(sessionId);\n\t\tSessionFacade.add(us);\n\t\t\n\t\tassertEquals(0, SessionFacade.anonymousSize());\n\t\tassertEquals(1, SessionFacade.registeredSize());\n\t}\n\t\n\tpublic void test3LoggedThen1Logout()\n\t{\n\t\t// Logged\n\t\tSessionFacade.setAttribute(\"logged\", \"1\");\n\t\t\n\t\tthis.createUserSession(2, \"2_\" + System.currentTimeMillis());\n\t\t\n\t\tString sessionId = \"3_\" + System.currentTimeMillis();\n\t\tthis.createUserSession(3, sessionId);\n\n\t\tthis.createUserSession(4, \"4_\" + System.currentTimeMillis());\n\t\t\n\t\tassertEquals(3, SessionFacade.registeredSize());\n\t\tassertEquals(0, SessionFacade.anonymousSize());\n\t\t\n\t\t// Logout (goes as guest)\n\t\tSessionFacade.removeAttribute(\"logged\");\n\t\tSessionFacade.remove(sessionId);\n\t\t\n\t\tthis.createUserSession(ANONYMOUS, sessionId);\n\t\t\n\t\tassertEquals(2, SessionFacade.registeredSize());\n\t\tassertEquals(1, SessionFacade.anonymousSize());\n\t}\n\t\n\tprivate void createUserSession(int userId, String sessionId)\n\t{\n\t\tUserSession us = new UserSession();\n\n\t\tus.setUserId(userId);\n\t\tus.setSessionId(sessionId);\n\t\tus.setUsername(\"blah_\" + System.currentTimeMillis());\n\t\t\n\t\tSessionFacade.add(us, sessionId);\n\t}\n}",
  "metadata": {
    "fileId": "OnlineUsersTest_java_chunk_1",
    "fileName": "OnlineUsersTest.java",
    "filePath": "tests/core/net/jforum/OnlineUsersTest.java"
  }
}