{
  "pageContent": "File Path: src/net/jforum/api/integration/mail/pop/POPPostAction.java\n\n Original Content: /*\n * Created on 26/08/2006 22:20:46\n */\npackage net.jforum.api.integration.mail.pop;\n\nimport java.util.HashMap;\nimport java.util.Iterator;\n\nimport org.apache.log4j.Logger;\n\nimport freemarker.template.SimpleHash;\n\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.SessionFacade;\nimport net.jforum.context.JForumContext;\nimport net.jforum.context.RequestContext;\nimport net.jforum.context.standard.StandardRequestContext;\nimport net.jforum.context.standard.StandardSessionContext;\nimport net.jforum.dao.DataAccessDriver;\nimport net.jforum.dao.ForumDAO;\nimport net.jforum.entities.Topic;\nimport net.jforum.entities.User;\nimport net.jforum.entities.UserSession;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.view.forum.PostAction;\n\n/**\n * @author Rafael Steil\n * @version $Id: POPPostAction.java,v 1.10 2007/07/31 13:52:47 rafaelsteil Exp $\n */\npublic class POPPostAction\n{\n\tprivate static Logger logger = Logger.getLogger(POPPostAction.class);\n\t\n\tpublic void insertMessages(POPParser parser)\n\t{\n\t\tlong ms = System.currentTimeMillis();\n\t\tint counter = 0;\n\t\t\n\t\ttry {\n\t\t\tJForumExecutionContext ex = JForumExecutionContext.get();\n\t\t\t\n\t\t\tRequestContext request = new StandardRequestContext();\n\t\t\tex.setForumContext(new JForumContext(\"/\", \"\", request, null));\n\t\t\t\n\t\t\tJForumExecutionContext.set(ex);\n\t\t\t\n\t\t\tSessionFacade.setAttribute(ConfigKeys.TOPICS_READ_TIME, new HashMap());\n\t\t\t\n\t\t\tfor (Iterator iter = parser.getMessages().iterator(); iter.hasNext(); ) {\n\t\t\t\tPOPMessage m = (POPMessage)iter.next();\n\t\t\t\tString sessionId = ms + m.getSender() + counter++;\n\t\t\t\t\n\t\t\t\trequest.getSessionContext().setAttribute(StandardSessionContext.SESSION_ID, sessionId);\n\t\t\t\t\n\t\t\t\tUser user = this.findUser(m.getSender());\n\t\t\t\t\n\t\t\t\tif (user == null) {\n\t\t\t\t\tlogger.warn(\"Could not find user with email \" + m.getSender() + \". Ignoring his message.\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tUserSession us = new UserSession();\n\t\t\t\t\tus.setUserId(user.getId());\n\t\t\t\t\tus.setUsername(us.getUsername());\n\t\t\t\t\tus.setSessionId(sessionId);\n\t\t\t\t\t\n\t\t\t\t\tSessionFacade.add(us, sessionId);\n\t\t\t\t\tSessionFacade.setAttribute(ConfigKeys.LOGGED, \"1\");\n\t\t\t\t\t\n\t\t\t\t\tSessionFacade.removeAttribute(ConfigKeys.LAST_POST_TIME);\n\t\t\t\t\tSessionFacade.setAttribute(ConfigKeys.REQUEST_IGNORE_CAPTCHA, \"1\");\n\t\t\t\t\t\n\t\t\t\t\tthis.insertMessage(m, user);\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\tSessionFacade.remove(sessionId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tJForumExecutionContext.finish();\n\t\t}\n\t}\n\t\n\t/**\n\t * Calls {@link PostAction#insertSave()}\n\t * @param m the mail message\n\t * @param user the user who's sent the message\n\t */\n\tprivate void insertMessage(POPMessage m, User user)\n\t{\n\t\tthis.addDataToRequest(m, user);\n\t\t\n\t\tPostAction postAction = new PostAction(JForumExecutionContext.getRequest(), new SimpleHash());\n\t\tpostAction.insertSave();\n\t}\n\t\n\t/**\n\t * Extracts information from a mail message and adds it to the request context\n\t * @param m the mail message\n\t * @param user the user who's sending the message\n\t */\n\tprivate void addDataToRequest(POPMessage m, User user)\n\t{\n\t\tRequestContext request = JForumExecutionContext.getRequest(); \n\t\t\n\t\trequest.addParameter(\"forum_id\", Integer.toString(this.discoverForumId(m.getListEmail())));\n\t\trequest.addParameter(\"topic_type\", Integer.toString(Topic.TYPE_NORMAL));\n\t\trequest.addParameter(\"quick\", \"1\");\n\t\trequest.addParameter(\"subject\", m.getSubject());\n\t\trequest.addParameter(\"message\", m.getMessage());\n\t\t\n\t\tint topicId = this.discoverTopicId(m);\n\t\t\n\t\tif (topicId > 0) {\n\t\t\trequest.addParameter(\"topic_id\", Integer.toString(topicId));\n\t\t}\n\t\t\n\t\tif (!user.isBbCodeEnabled()) {\n\t\t\trequest.addParameter(\"disable_bbcode\", \"on\");\n\t\t}\n\t\t\n\t\tif (!user.isSmiliesEnabled()) {\n\t\t\trequest.addParameter(\"disable_smilies\", \"on\");\n\t\t}\n\t\t\n\t\tif (!user.isHtmlEnabled()) {\n\t\t\trequest.addParameter(\"disable_html\", \"on\");\n\t\t}\n\t}\n\t\n\t/**\n\t * Tries to extract message relationship from the headers\n\t * @param m the message to extract headers from\n\t * @return the topic id, if found, or 0 (zero) othwerwise\n\t */\n\tprivate int discoverTopicId(POPMessage m)\n\t{\n\t\tint topicId = 0;\n\t\t\n\t\tString inReplyTo = m.getInReplyTo();\n\t\t\n\t\tif (inReplyTo != null) {\n\t\t\ttopicId = MessageId.parse(inReplyTo).getTopicId();\n\t\t}\n\t\t\n\t\treturn topicId;\n\t}\n\t\n\t/**\n\t * Given an email address, finds the forum instance associated to it\n\t * @param listEmail the forum's email address to search for\n\t * @return the forum's id, or 0 (zero) if nothing was found\n\t */\n\tprivate int discoverForumId(String listEmail)\n\t{\n\t\tForumDAO dao = DataAccessDriver.getInstance().newForumDAO();\n\t\treturn dao.discoverForumId(listEmail);\n\t}\n\t\n\t/**\n\t * Finds an user by his email address\n\t * @param email the email address to use in the search\n\t * @return the matching record, or null if nothing was found\n\t */\n\tprivate User findUser(String email)\n\t{\n\t\treturn DataAccessDriver.getInstance().newUserDAO().findByEmail(email);\n\t}\n}",
  "metadata": {
    "fileId": "POPPostAction_java_chunk_1",
    "fileName": "POPPostAction.java",
    "filePath": "src/net/jforum/api/integration/mail/pop/POPPostAction.java"
  }
}