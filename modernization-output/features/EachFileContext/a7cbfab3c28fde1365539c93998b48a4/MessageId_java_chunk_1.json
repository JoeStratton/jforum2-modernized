{
  "pageContent": "File Path: src/net/jforum/api/integration/mail/pop/MessageId.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on 24/09/2006 23:04:29\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.api.integration.mail.pop;\n\nimport java.util.Random;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport net.jforum.entities.Topic;\n\n/**\n * Represents the In-Reply-To and Message-ID mail header.\n * \n * @author Rafael Steil\n * @version $Id: MessageId.java,v 1.4 2006/10/09 03:05:54 rafaelsteil Exp $\n */\npublic class MessageId\n{\n\tprivate static final Random random = new Random(System.currentTimeMillis());\n\tprivate int topicId;\n\t\n\t/**\n\t * Returns the topic id this header holds.\n\t * \n\t * @return the topic id represented by this instance\n\t */\n\tpublic int getTopicId()\n\t{\n\t\treturn this.topicId;\n\t}\n\t\n\t/**\n\t * Constructs the Message-ID header.\n\t * The form is \"&lt;postId.topicId.forumId.randomNumber@jforum&gt;\".\n\t * \n\t * @param postId the post id of this message\n\t * @param topicId the topic id of this message\n\t * @param forumId the forum id of this message\n\t * @return the Message-ID header\n\t */\n\tpublic static String buildMessageId(int postId, int topicId, int forumId)\n\t{\n\t\treturn new StringBuffer()\n\t\t\t.append('<')\n\t\t\t.append(postId)\n\t\t\t.append('.')\n\t\t\t.append(topicId)\n\t\t\t.append('.')\n\t\t\t.append(forumId)\n\t\t\t.append('.')\n\t\t\t.append(System.currentTimeMillis())\n\t\t\t.append(random.nextInt(999999999))\n\t\t\t.append(\"@jforum>\")\n\t\t\t.toString();\n\t}\n\n\t/**\n\t * Constructs the In-Reply-To header.\n\t * The form is \"&lt;topicFirstPostId.topicId.forumId.randomNumber@jforum&gt;\".\n\t *  \n\t * @param topic The topic we're replying to. If should have at least the\n\t * values for {@link Topic#getFirstPostId()}, {@link Topic#getId()}\n\t * and {@link Topic#getForumId()}\n\t * \n\t * @return the In-Reply-To header\n\t */\n\tpublic static String buildInReplyTo(Topic topic)\n\t{\n\t\treturn buildMessageId(topic.getFirstPostId(), topic.getId(), topic.getForumId());\n\t}\n\t\n\t/**\n\t * Parses the header, extracting the information it holds\n\t * @param header the header's contents to parse\n\t * @return the header information parsed\n\t */\n\tpublic static MessageId parse(String header)\n\t{\n\t\tMessageId messageId = new MessageId();\n\t\t\n\t\tif (header != null) {\n\t\t\t// <postId.topicId.forumId.randomNumber@host>\n\t\t\tMatcher matcher = Pattern.compile(\"<(.*?)\\\\.(.*?)\\\\.(.*?)\\\\.(.*?)@.*>\").matcher(header);\n\t\t\t\n\t\t\tif (matcher.matches()) {\n\t\t\t\tString s = matcher.group(2);\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tmessageId.topicId = Integer.parseInt(s);\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) { }\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn messageId;\n\t}\n}",
  "metadata": {
    "fileId": "MessageId_java_chunk_1",
    "fileName": "MessageId.java",
    "filePath": "src/net/jforum/api/integration/mail/pop/MessageId.java"
  }
}