{
  "pageContent": "File Path: src/net/jforum/cache/EhCacheEngine.java\n\n Original Content: /******************************************************************************\n * Sony Online Entertainment\n * Application Engineering\n *\n * Unpublished work Copyright 2005 Sony Online Entertainment Inc.\n * All rights reserved.\n * Created on Oct 11, 2005\n ******************************************************************************/\npackage net.jforum.cache;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport net.jforum.util.preferences.SystemGlobals;\nimport net.sf.ehcache.Cache;\nimport net.sf.ehcache.CacheException;\nimport net.sf.ehcache.CacheManager;\nimport net.sf.ehcache.Element;\n\nimport org.apache.log4j.Logger;\n/**\n * The rest of the application seems to make some invalid assumptions about how\n * things are cached.  Those assumptions might be benign, but it is hard to tell\n * without deep testing.  Until this is finishe the JBossCacheEngine should be \n * configured in a local mode.\n *\n * Created on Oct 11, 2005 \n *\n * @author Jake Fear\n * @version $Id: EhCacheEngine.java,v 1.1 2005/10/14 00:15:54 rafaelsteil Exp $\n */\npublic class EhCacheEngine implements CacheEngine {\n\n\tprivate static final Logger log = Logger.getLogger(EhCacheEngine.class);\n\t\n\tprivate CacheManager manager;\n\t\n\tpublic void init() {\n\t\ttry {\n\t\t\tmanager = CacheManager.create(SystemGlobals.getValue(\"ehcache.cache.properties\"));\n\t\t} catch (CacheException ce) {\n\t\t\tlog.error(\"EhCache could not be initialized\", ce);\n\t\t\tthrow new RuntimeException(ce);\n\t\t}\n\t}\n\n\tpublic void stop() {\n\t\tmanager.shutdown();\n\t}\n\n\tpublic void add(String key, Object value) {\n\t\tif (log.isDebugEnabled()) {\n\t\t\tlog.debug(\"Caching \" + value + \" with key \" + key);\n\t\t}\n\t\tadd(DUMMY_FQN, key, value);\n\t}\n\n\tpublic void add(String fullyQualifiedName, String key, Object value) {\n\t\tif (!manager.cacheExists(fullyQualifiedName)) {\n\t\t\ttry {\n\t\t\t\tmanager.addCache(fullyQualifiedName);\n\t\t\t} catch (CacheException ce) {\n\t\t\t\tlog.error(ce, ce);\n\t\t\t\tthrow new RuntimeException(ce);\n\t\t\t}\n\t\t}\n\t\tCache cache = manager.getCache(fullyQualifiedName);\n\t\t\n\t\tElement element = new Element(key, (Serializable)value);\n\t\tcache.put(element);\n\t}\n\n\tpublic Object get(String fullyQualifiedName, String key) {\n\t\ttry {\n\t\t\tif (!manager.cacheExists(fullyQualifiedName)) {\n\t\t\t\tmanager.addCache(fullyQualifiedName);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tCache cache = manager.getCache(fullyQualifiedName);\n\t\t\tElement element = cache.get(key);\n\t\t\tif (element != null) {\n\t\t\t\treturn element.getValue();\n\t\t\t} \n\t\t\t\n\t\t\treturn null;\n\t\t} catch (CacheException ce) {\n\t\t\tlog.error(\"EhCache could not be shutdown\", ce);\n\t\t\tthrow new RuntimeException(ce);\n\t\t}\n\t}\n\n\tpublic Object get(String fullyQualifiedName) {\n\t\tif (!manager.cacheExists(fullyQualifiedName)) {\n\t\t\ttry {\n\t\t\t\tmanager.addCache(fullyQualifiedName);\n\t\t\t} catch (CacheException ce) {\n\t\t\t\tlog.error(\"EhCache could not be shutdown\", ce);\n\t\t\t\tthrow new RuntimeException(ce);\n\t\t\t}\n\t\t}\n\t\tCache cache = manager.getCache(fullyQualifiedName);\n\t\treturn cache;\n\t}\n\n\tpublic Collection getValues(String fullyQualifiedName) {\n\t\ttry {\n\t\t\tif (!manager.cacheExists(fullyQualifiedName)) {\n\t\t\t\tmanager.addCache(fullyQualifiedName);\n\t\t\t\treturn new ArrayList();\n\t\t\t}\n\t\t\tCache cache = manager.getCache(fullyQualifiedName);\n\t\t\tList values = new ArrayList(cache.getSize());\n\t\t\tList keys = cache.getKeys();\n\t\t\t\n\t\t\tfor (Iterator iter = keys.iterator(); iter.hasNext(); ) {\n\t\t\t\tvalues.add(cache.get((Serializable)iter.next()));\n\t\t\t}\n\n\t\t\treturn values;\n\t\t} catch (CacheException ce) {\n\t\t\tlog.error(\"EhCache could not be shutdown\", ce);\n\t\t\tthrow new RuntimeException(ce);\n\t\t}\n\t}\n\n\tpublic void remove(String fullyQualifiedName, String key) {\n\t\tCache cache = manager.getCache(fullyQualifiedName);\n\t\t\n\t\tif (cache != null) {\n\t\t\tcache.remove(key);\n\t\t}\n\t}\n\n\tpublic void remove(String fullyQualifiedName) {\n\t\tif (manager.cacheExists(fullyQualifiedName)) {\n\t\t\tmanager.removeCache(fullyQualifiedName);\n\t\t}\n\t}\n\n}",
  "metadata": {
    "fileId": "EhCacheEngine_java_chunk_1",
    "fileName": "EhCacheEngine.java",
    "filePath": "src/net/jforum/cache/EhCacheEngine.java"
  }
}