{
  "pageContent": "File Path: src/net/jforum/view/admin/ModerationAction.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on Jan 30, 2005 2:49:29 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.view.admin;\n\nimport net.jforum.context.RequestContext;\nimport net.jforum.dao.DataAccessDriver;\nimport net.jforum.dao.PostDAO;\nimport net.jforum.dao.TopicDAO;\nimport net.jforum.dao.UserDAO;\nimport net.jforum.entities.Post;\nimport net.jforum.entities.Topic;\nimport net.jforum.entities.User;\nimport net.jforum.repository.ForumRepository;\nimport net.jforum.repository.PostRepository;\nimport net.jforum.repository.TopicRepository;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\nimport net.jforum.util.preferences.TemplateKeys;\nimport net.jforum.view.forum.common.AttachmentCommon;\nimport net.jforum.view.forum.common.PostCommon;\nimport net.jforum.view.forum.common.TopicsCommon;\nimport freemarker.template.SimpleHash;\n\n/**\n * @author Rafael Steil\n * @version $Id: ModerationAction.java,v 1.27 2007/09/10 23:07:00 rafaelsteil Exp $\n */\npublic class ModerationAction extends AdminCommand\n{\n\tpublic ModerationAction() {}\n\t\n\tpublic ModerationAction(SimpleHash context, RequestContext request)\n\t{\n\t\tthis.context = context;\n\t\tthis.request = request;\n\t}\n\t\n\t/**\n\t * @see net.jforum.Command#list()\n\t */\n\tpublic void list()\n\t{\n\t\tthis.setTemplateName(TemplateKeys.MODERATION_ADMIN_LIST);\n\t\tthis.context.put(\"infoList\", DataAccessDriver.getInstance().newModerationDAO().categoryPendingModeration());\n\t}\n\t\n\tpublic void view()\n\t{\n\t\tint forumId = this.request.getIntParameter(\"forum_id\");\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.MODERATION_ADMIN_VIEW);\n\t\tthis.context.put(\"forum\", ForumRepository.getForum(forumId));\n\t\tthis.context.put(\"topics\", DataAccessDriver.getInstance().newModerationDAO().topicsByForum(\n\t\t\t\tforumId));\n\t}\n\t\n\tpublic void doSave()\n\t{\n\t\tString[] posts = this.request.getParameterValues(\"post_id\");\n\n\t\tif (posts != null) {\n\t\t\tTopicDAO topicDao = DataAccessDriver.getInstance().newTopicDAO();\n\t\t\t\n\t\t\tfor (int i = 0; i < posts.length; i++) {\n\t\t\t\tint postId = Integer.parseInt(posts[i]);\n\t\t\t\t\n\t\t\t\tString status = this.request.getParameter(\"status_\" + postId);\n\t\t\t\t\n\t\t\t\tif (\"defer\".startsWith(status)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (\"aprove\".startsWith(status)) {\n\t\t\t\t\tPost p = DataAccessDriver.getInstance().newPostDAO().selectById(postId);\n\t\t\t\t\t\n\t\t\t\t\t// Check is the post is in fact waiting for moderation\n\t\t\t\t\tif (!p.isModerationNeeded()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tUserDAO userDao = DataAccessDriver.getInstance().newUserDAO();\n\t\t\t\t\tUser u = userDao.selectById(p.getUserId());\n\t\t\t\t\t\n\t\t\t\t\tboolean first = false;\n\t\t\t\t\tTopic t = TopicRepository.getTopic(new Topic(p.getTopicId()));\n\t\t\t\t\t\n\t\t\t\t\tif (t == null) {\n\t\t\t\t\t\tt = topicDao.selectById(p.getTopicId());\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (t.getId() == 0) {\n\t\t\t\t\t\t\tfirst = true;\n\t\t\t\t\t\t\tt = topicDao.selectRaw(p.getTopicId());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tDataAccessDriver.getInstance().newModerationDAO().aprovePost(postId);\n\t\t\t\t\t\n\t\t\t\t\tboolean firstPost = (t.getFirstPostId() == postId);\n\t\t\t\t\t\n\t\t\t\t\tif (!firstPost) {\n\t\t\t\t\t\tt.setTotalReplies(t.getTotalReplies() + 1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tt.setLastPostId(postId);\n\t\t\t\t\tt.setLastPostBy(u);\n\t\t\t\t\tt.setLastPostDate(p.getTime());\n\t\t\t\t\tt.setLastPostTime(p.getFormatedTime());\n\t\t\t\t\t\n\t\t\t\t\ttopicDao.update(t);\n\t\t\t\t\t\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tt = topicDao.selectById(t.getId());\n\t\t\t\t\t}\n\n\t\t\t\t\tTopicsCommon.updateBoardStatus(t, postId, firstPost,\n\t\t\t\t\t\ttopicDao, DataAccessDriver.getInstance().newForumDAO());\n\t\t\t\t\t\n\t\t\t\t\tForumRepository.updateForumStats(t, u, p);\n\t\t\t\t\tTopicsCommon.notifyUsers(t, p);\n\t\t\t\t\t\n\t\t\t\t\tuserDao.incrementPosts(p.getUserId());\n\t\t\t\t\t\n\t\t\t\t\tif (SystemGlobals.getBoolValue(ConfigKeys.POSTS_CACHE_ENABLED)) {\n\t\t\t\t\t\tPostRepository.append(p.getTopicId(), PostCommon.preparePostForDisplay(p));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tPostDAO pm = DataAccessDriver.getInstance().newPostDAO();\n\t\t\t\t\tPost post = pm.selectById(postId);\n\t\t\t\t\t\n\t\t\t\t\tif (post == null || !post.isModerationNeeded()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpm.delete(post);\n\t\t\t\t\t\n\t\t\t\t\tnew AttachmentCommon(this.request, post.getForumId()).deleteAttachments(postId, post.getForumId());\n\t\t\t\t\t\n\t\t\t\t\tint totalPosts = topicDao.getTotalPosts(post.getTopicId());\n\t\t\t\t\t\n\t\t\t\t\tif (totalPosts == 0) {\n\t\t\t\t\t\tTopicsCommon.deleteTopic(post.getTopicId(), post.getForumId(), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic void save()\n\t{\n\t\tthis.doSave();\n\t\tthis.view();\n\t}\n}",
  "metadata": {
    "fileId": "ModerationAction_java_chunk_1",
    "fileName": "ModerationAction.java",
    "filePath": "src/net/jforum/view/admin/ModerationAction.java"
  }
}