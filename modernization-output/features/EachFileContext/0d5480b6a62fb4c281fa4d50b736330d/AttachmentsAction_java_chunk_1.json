{
  "pageContent": "File Path: src/net/jforum/view/admin/AttachmentsAction.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on Jan 17, 2005 2:46:30 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.view.admin;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport net.jforum.dao.AttachmentDAO;\nimport net.jforum.dao.DataAccessDriver;\nimport net.jforum.entities.AttachmentExtension;\nimport net.jforum.entities.AttachmentExtensionGroup;\nimport net.jforum.entities.QuotaLimit;\nimport net.jforum.util.TreeGroup;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\nimport net.jforum.util.preferences.TemplateKeys;\n\n/**\n * @author Rafael Steil\n * @version $Id: AttachmentsAction.java,v 1.16 2006/08/20 22:47:45 rafaelsteil Exp $\n */\npublic class AttachmentsAction extends AdminCommand\n{\n\tpublic void configurations()\n\t{\n\t\tthis.context.put(\"icon\", SystemGlobals.getValue(ConfigKeys.ATTACHMENTS_ICON));\n\t\tthis.context.put(\"createThumb\", SystemGlobals.getBoolValue(ConfigKeys.ATTACHMENTS_IMAGES_CREATE_THUMB));\n\t\tthis.context.put(\"thumbH\", SystemGlobals.getValue(ConfigKeys.ATTACHMENTS_IMAGES_MAX_THUMB_H));\n\t\tthis.context.put(\"thumbW\", SystemGlobals.getValue(ConfigKeys.ATTACHMENTS_IMAGES_MAX_THUMB_W));\n\t\tthis.context.put(\"maxPost\", SystemGlobals.getValue(ConfigKeys.ATTACHMENTS_MAX_POST));\n\t\tthis.context.put(\"thumbBorder\", SystemGlobals.getBoolValue(ConfigKeys.ATTACHMENTS_IMAGES_THUMB_BOX_SHOW));\n\n\t\tthis.setTemplateName(TemplateKeys.ATTACHMENTS_CONFIG);\n\t}\n\t\n\tpublic void configurationsSave()\n\t{\n\t\tConfigAction ca = new ConfigAction(this.request, this.response, this.context);\n\t\tca.updateData(ca.getConfig());\n\t\t\n\t\tthis.configurations();\n\t}\n\t\n\tpublic void quotaLimit()\n\t{\n\t\tAttachmentDAO am = DataAccessDriver.getInstance().newAttachmentDAO();\n\t\t\n\t\tthis.context.put(\"quotas\", am.selectQuotaLimit());\n\t\tthis.setTemplateName(TemplateKeys.ATTACHMENTS_QUOTA_LIMIT);\n\t\tthis.context.put(\"groups\", new TreeGroup().getNodes());\n\t\tthis.context.put(\"selectedList\", new ArrayList());\n\t\tthis.context.put(\"groupQuotas\", am.selectGroupsQuotaLimits());\n\t}\n\t\n\tpublic void quotaLimitSave()\n\t{\n\t\tQuotaLimit ql = new QuotaLimit();\n\t\tql.setDescription(this.request.getParameter(\"quota_description\"));\n\t\tql.setSize(this.request.getIntParameter(\"max_filesize\"));\n\t\tql.setType(this.request.getIntParameter(\"type\"));\n\t\t\n\t\tDataAccessDriver.getInstance().newAttachmentDAO().addQuotaLimit(ql);\n\t\tthis.quotaLimit();\n\t}\n\t\n\tpublic void quotaLimitUpdate()\n\t{\n\t\tAttachmentDAO am = DataAccessDriver.getInstance().newAttachmentDAO();\n\t\t\n\t\t// First check if we should delete some entry\n\t\tString[] delete = this.request.getParameterValues(\"delete\");\n\t\tList deleteList = new ArrayList();\n\t\tif (delete != null) {\n\t\t\tdeleteList = Arrays.asList(delete);\n\t\t\tam.removeQuotaLimit(delete);\n\t\t}\n\t\t\n\t\t// Now update the remaining\n\t\tint total = this.request.getIntParameter(\"total_records\");\n\t\tfor (int i = 0; i < total; i++) {\n\t\t\tif (deleteList.contains(this.request.getParameter(\"id_\" + i))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tQuotaLimit ql = new QuotaLimit();\n\t\t\tql.setId(this.request.getIntParameter(\"id_\" + i));\n\t\t\tql.setDescription(this.request.getParameter(\"quota_desc_\" + i));\n\t\t\tql.setSize(this.request.getIntParameter(\"max_filesize_\" + i));\n\t\t\tql.setType(this.request.getIntParameter(\"type_\" + i));\n\t\t\t\n\t\t\tam.updateQuotaLimit(ql);\n\t\t}\n\t\t\n\t\tthis.quotaLimit();\n\t}\n\t\n\tpublic void extensionGroups()\n\t{\n\t\tthis.setTemplateName(TemplateKeys.ATTACHMENTS_EXTENSION_GROUPS);\n\t\tthis.context.put(\"groups\", DataAccessDriver.getInstance().newAttachmentDAO().selectExtensionGroups());\n\t}\n\t\n\tpublic void extensionGroupsSave()\n\t{\n\t\tAttachmentExtensionGroup g = new AttachmentExtensionGroup();\t\t\n\t\tg.setAllow(this.request.getParameter(\"allow\") != null);\n\t\tg.setDownloadMode(this.request.getIntParameter(\"download_mode\"));\n\t\tg.setName(this.request.getParameter(\"name\"));\n\t\tg.setUploadIcon(this.request.getParameter(\"upload_icon\"));\n\t\t\n\t\tDataAccessDriver.getInstance().newAttachmentDAO().addExtensionGroup(g);\n\t\tthis.extensionGroups();\n\t}\n\t\n\tpublic void extensionGroupsUpdate()\n\t{\n\t\tAttachmentDAO am = DataAccessDriver.getInstance().newAttachmentDAO();\n\t\t\n\t\t// Check if there are records to remove\n\t\tString[] delete = this.request.getParameterValues(\"delete\");\n\t\tList deleteList = new ArrayList();\n\t\tif (delete != null) {\n\t\t\tdeleteList = Arrays.asList(delete);\n\t\t\tam.removeExtensionGroups(delete);\n\t\t}\n\t\t\n\t\t// Update\n\t\tint total = this.request.getIntParameter(\"total_records\");\n\t\tfor (int i = 0; i < total; i++) {\n\t\t\tif (deleteList.contains(this.request.getParameter(\"id_\" + i))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tAttachmentExtensionGroup g = new AttachmentExtensionGroup();\n\t\t\tg.setId(this.request.getIntParameter(\"id_\" + i));\n\t\t\tg.setAllow(this.request.getParameter(\"allow_\" + i) != null);\n\t\t\tg.setDownloadMode(this.request.getIntParameter(\"download_mode_\" + i));\n\t\t\tg.setName(this.request.getParameter(\"name_\" + i));\n\t\t\tg.setUploadIcon(this.request.getParameter(\"upload_icon_\" + i));\n\t\t\t\n\t\t\tam.updateExtensionGroup(g);\n\t\t}\n\t\t\n\t\tthis.extensionGroups();\n\t}\n\t\n\tpublic void extensions()\n\t{\n\t\tAttachmentDAO am = DataAccessDriver.getInstance().newAttachmentDAO();\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.ATTACHMENTS_EXTENSIONS);\n\t\tthis.context.put(\"extensions\", am.selectExtensions());\n\t\tthis.context.put(\"groups\", am.selectExtensionGroups());\n\t}\n\t\n\tpublic void extensionsSave() \n\t{\n\t\tAttachmentExtension e = new AttachmentExtension();\n\t\te.setAllow(this.request.getParameter(\"allow\") != null);\n\t\te.setComment(this.request.getParameter(\"comment\"));\n\t\te.setExtension(this.request.getParameter(\"extension\"));\n\t\te.setUploadIcon(this.request.getParameter(\"upload_icon\"));\n\t\te.setExtensionGroupId(this.request.getIntParameter(\"extension_group\"));\n\t\t\n\t\tif (e.getExtension().startsWith(\".\")) {\n\t\t\te.setExtension(e.getExtension().substring(1));\n\t\t}\n\t\t\n\t\tDataAccessDriver.getInstance().newAttachmentDAO().addExtension(e);\n\t\tthis.extensions();\n\t}\n\t\n\tpublic void extensionsUpdate()\n\t{\n\t\tAttachmentDAO am = DataAccessDriver.getInstance().newAttachmentDAO();\n\t\t\n\t\t// Check for records to delete\n\t\tString[] delete = this.request.getParameterValues(\"delete\");\n\t\tList deleteList = new ArrayList();\n\n\t\tif (delete != null) {\n\t\t\tdeleteList = Arrays.asList(delete);\n\t\t\tam.removeExtensions(delete);\n\t\t}\n\t\t\n\t\tint total = this.request.getIntParameter(\"total_records\");\n\n\t\tfor (int i = 0; i < total; i++) {\n\t\t\tif (deleteList.contains(this.request.getParameter(\"id_\" + i))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tAttachmentExtension e = new AttachmentExtension();\n\t\t\te.setAllow(this.request.getParameter(\"allow_\" + i) != null);\n\t\t\te.setComment(this.request.getParameter(\"comment_\" + i));\n\t\t\te.setExtension(this.request.getParameter(\"extension_\" + i));\n\t\t\te.setExtensionGroupId(this.request.getIntParameter(\"extension_group_\" + i));\n\t\t\te.setId(this.request.getIntParameter(\"id_\" + i));\n\t\t\te.setUploadIcon(this.request.getParameter(\"upload_icon_\" + i));\n\t\t\t\n\t\t\tam.updateExtension(e);\n\t\t}\n\t\t\n\t\tthis.extensions();\n\t}\n\t\n\tpublic void quotaGroupsSave() \n\t{\n\t\tint total = this.request.getIntParameter(\"total_groups\");\n\t\tAttachmentDAO am = DataAccessDriver.getInstance().newAttachmentDAO();\n\t\tam.cleanGroupQuota();\n\t\t\n\t\tfor (int i = 0; i < total; i++) {\n\t\t\tString l = this.request.getParameter(\"limit_\" + i);\n\t\t\t\n\t\t\tif (l == null || l.equals(\"\")) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tint limitId = Integer.parseInt(l);\n\t\t\tint groupId = this.request.getIntParameter(\"group_\" + i);\n\t\t\t\n\t\t\tif (groupId > 0) {\n\t\t\t\tam.setGroupQuota(groupId, limitId);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.quotaLimit();\n\t}\n\t\n\t/**\n\t * @see net.jforum.Command#list()\n\t */\n\tpublic void list()\n\t{\n\t\tthis.configurations();\n\t}\n}",
  "metadata": {
    "fileId": "AttachmentsAction_java_chunk_1",
    "fileName": "AttachmentsAction.java",
    "filePath": "src/net/jforum/view/admin/AttachmentsAction.java"
  }
}