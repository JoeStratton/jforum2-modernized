{
  "pageContent": "File Path: src/net/jforum/view/admin/SmiliesAction.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: 13/01/2004 / 18:45:31\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.view.admin;\n\nimport java.io.File;\n\nimport net.jforum.dao.DataAccessDriver;\nimport net.jforum.dao.SmilieDAO;\nimport net.jforum.entities.Smilie;\nimport net.jforum.repository.SmiliesRepository;\nimport net.jforum.util.MD5;\nimport net.jforum.util.legacy.commons.fileupload.FileItem;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\nimport net.jforum.util.preferences.TemplateKeys;\nimport net.jforum.view.forum.common.UploadUtils;\n\n/**\n * @author Rafael Steil\n * @version $Id: SmiliesAction.java,v 1.16 2008/01/22 23:52:41 rafaelsteil Exp $\n */\npublic class SmiliesAction extends AdminCommand \n{\n\tprivate String processUpload()\n\t{\n\t\tString imgName = \"\";\n\t\t\n\t\tif (this.request.getObjectParameter(\"smilie_img\") != null) {\n\t\t\tFileItem item = (FileItem)this.request.getObjectParameter(\"smilie_img\");\n\t\t\tUploadUtils uploadUtils = new UploadUtils(item);\n\n\t\t\timgName = MD5.crypt(item.getName());\n\t\t\t\n\t\t\tuploadUtils.saveUploadedFile(SystemGlobals.getApplicationPath() \n\t\t\t\t\t+ \"/\"\n\t\t\t\t\t+ SystemGlobals.getValue(ConfigKeys.SMILIE_IMAGE_DIR) \n\t\t\t\t\t+ \"/\"\n\t\t\t\t\t+ imgName + \".\" + uploadUtils.getExtension());\n\t\t\t\n\t\t\timgName += \".\" + uploadUtils.getExtension();\n\t\t}\n\t\t\n\t\treturn imgName;\n\t}\n\t\n\tpublic void insert()\n\t{\n\t\tthis.setTemplateName(TemplateKeys.SMILIES_INSERT);\n\t\tthis.context.put(\"action\", \"insertSave\");\n\t}\n\t\t\n\tpublic void insertSave()\n\t{\n\t\tSmilie s = new Smilie();\n\t\ts.setCode(this.request.getParameter(\"code\"));\n\t\t\n\t\tString imgName = this.processUpload();\n\t\ts.setUrl(SystemGlobals.getValue(ConfigKeys.SMILIE_IMAGE_PATTERN).replaceAll(\"#IMAGE#\", imgName));\n\t\t\n\t\ts.setDiskName(imgName);\n\t\t\n\t\tDataAccessDriver.getInstance().newSmilieDAO().addNew(s);\n\t\t\n\t\tSmiliesRepository.loadSmilies();\n\t\tthis.list();\n\t}\n\t\n\tpublic void edit()\n\t{\n\t\tint id = 1;\n\t\t\n\t\tif (this.request.getParameter(\"id\") != null) {\n\t\t\tid = this.request.getIntParameter(\"id\");\n\t\t}\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.SMILIES_EDIT);\n\t\tthis.context.put(\"smilie\", DataAccessDriver.getInstance().newSmilieDAO().selectById(id));\n\t\tthis.context.put(\"action\", \"editSave\");\n\t}\n\t\n\tpublic void editSave()\n\t{\n\t\tSmilie s = DataAccessDriver.getInstance().newSmilieDAO().selectById(this.request.getIntParameter(\"id\"));\n\t\ts.setCode(this.request.getParameter(\"code\"));\n\t\t\n\t\tif (this.request.getObjectParameter(\"smilie_img\") != null) {\n\t\t\tString imgName = this.processUpload();\n\t\t\ts.setUrl(SystemGlobals.getValue(ConfigKeys.SMILIE_IMAGE_PATTERN).replaceAll(\"#IMAGE#\", imgName));\n\t\t\ts.setDiskName(imgName);\n\t\t}\n\n\t\tDataAccessDriver.getInstance().newSmilieDAO().update(s);\n\t\t\n\t\tSmiliesRepository.loadSmilies();\n\t\tthis.list();\n\t}\n\t\n\tpublic void delete()\n\t{\n\t\tString[] ids = this.request.getParameterValues(\"id\");\n\t\t\n\t\tif (ids != null) {\n\t\t\tSmilieDAO dao = DataAccessDriver.getInstance().newSmilieDAO();\n\t\t\t\n\t\t\tfor (int i = 0; i < ids.length; i++) {\n\t\t\t\tint id = Integer.parseInt(ids[i]);\n\t\t\t\t\n\t\t\t\tSmilie s = dao.selectById(id);\n\t\t\t\tdao.delete(id);\n\t\t\t\t\n\t\t\t\tFile smilieFile = new File(s.getDiskName());\n\t\t\t\t\n\t\t\t\tFile fileToDelete = new File(SystemGlobals.getApplicationPath() \n\t\t\t\t\t+ \"/\"\n\t\t\t\t\t+ SystemGlobals.getValue(ConfigKeys.SMILIE_IMAGE_DIR) \n\t\t\t\t\t+ \"/\"\n\t\t\t\t\t+ smilieFile.getName());\n\n\t\t\t\tif (fileToDelete.exists()) {\n\t\t\t\t\tfileToDelete.delete();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tSmiliesRepository.loadSmilies();\n\t\tthis.list();\n\t}\n\n\t/** \n\t * @see net.jforum.Command#list()\n\t */\n\tpublic void list()  \n\t{\n\t\tthis.context.put(\"smilies\", SmiliesRepository.getSmilies());\n\t\tthis.setTemplateName(TemplateKeys.SMILIES_LIST);\n\t}\n}",
  "metadata": {
    "fileId": "SmiliesAction_java_chunk_1",
    "fileName": "SmiliesAction.java",
    "filePath": "src/net/jforum/view/admin/SmiliesAction.java"
  }
}