{
  "pageContent": "File Path: src/net/jforum/view/admin/GroupAction.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: Mar 3, 2003 / 11:07:02 AM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.view.admin;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport net.jforum.dao.DataAccessDriver;\nimport net.jforum.dao.GroupDAO;\nimport net.jforum.dao.GroupSecurityDAO;\nimport net.jforum.entities.Group;\nimport net.jforum.repository.ForumRepository;\nimport net.jforum.repository.RolesRepository;\nimport net.jforum.repository.SecurityRepository;\nimport net.jforum.security.PermissionControl;\nimport net.jforum.security.XMLPermissionControl;\nimport net.jforum.util.I18n;\nimport net.jforum.util.TreeGroup;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\nimport net.jforum.util.preferences.TemplateKeys;\n\n/**\n * ViewHelper class for group administration.\n * \n * @author Rafael Steil\n * @version $Id: GroupAction.java,v 1.24 2007/09/21 03:47:40 rafaelsteil Exp $\n */\npublic class GroupAction extends AdminCommand \n{\n\t// Listing\n\tpublic void list()\n\t{\n\t\tthis.context.put(\"groups\", new TreeGroup().getNodes());\n\t\tthis.setTemplateName(TemplateKeys.GROUP_LIST);\n\t}\n\t\n\t// Insert\n\tpublic void insert()\n\t{\n\t\tthis.context.put(\"groups\", new TreeGroup().getNodes());\n\t\tthis.context.put(\"action\", \"insertSave\");\n\t\tthis.context.put(\"selectedList\", new ArrayList());\n\t\tthis.setTemplateName(TemplateKeys.GROUP_INSERT);\n\t}\n\t\n\t// Save information for an existing group\n\tpublic void editSave()\n\t{\n\t\tint groupId = this.request.getIntParameter(\"group_id\");\n\t\t\t\n\t\tGroup g = new Group();\n\t\tg.setDescription(this.request.getParameter(\"group_description\"));\n\t\tg.setId(groupId);\n\t\t\n\t\tint parentId = this.request.getIntParameter(\"parent_id\");\n\t\t\n\t\tif (parentId == g.getId()) {\n\t\t\tparentId = 0;\n\t\t}\n\t\t\n\t\tg.setParentId(parentId);\n\t\tg.setName(this.request.getParameter(\"group_name\"));\n\n\t\tDataAccessDriver.getInstance().newGroupDAO().update(g);\n\t\t\t\n\t\tthis.list();\n\t}\n\t\n\t// Edit a group\n\tpublic void edit()\n\t{\n\t\tint groupId = this.request.getIntParameter(\"group_id\");\n\t\tGroupDAO gm = DataAccessDriver.getInstance().newGroupDAO();\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.GROUP_EDIT);\n\t\t\t\t\t\n\t\tthis.context.put(\"group\", gm.selectById(groupId));\n\t\tthis.context.put(\"groups\", new TreeGroup().getNodes());\n\t\tthis.context.put(\"selectedList\", new ArrayList());\n\t\tthis.context.put(\"action\", \"editSave\");\t\n\t}\n\t\n\t// Deletes a group\n\tpublic void delete() \n\t{\t\t\n\t\tString groupId[] = this.request.getParameterValues(\"group_id\");\n\t\t\n\t\tif (groupId == null) {\n\t\t\tthis.list();\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tList errors = new ArrayList();\n\t\tGroupDAO gm = DataAccessDriver.getInstance().newGroupDAO();\n\t\t\t\n\t\tfor (int i = 0; i < groupId.length; i++) {\n\t\t\tint id = Integer.parseInt(groupId[i]);\n\t\t\t\n\t\t\tif (gm.canDelete(id)) {\n\t\t\t\tgm.delete(id);\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrors.add(I18n.getMessage(I18n.CANNOT_DELETE_GROUP, new Object[] { new Integer(id) }));\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (errors.size() > 0) {\n\t\t\tthis.context.put(\"errorMessage\", errors);\n\t\t}\n\t\t\t\n\t\tthis.list();\n\t}\n\t\n\t// Saves a new group\n\tpublic void insertSave()\n\t{\n\t\tGroupDAO gm = DataAccessDriver.getInstance().newGroupDAO();\n\t\t\n\t\tGroup g = new Group();\n\t\tg.setDescription(this.request.getParameter(\"group_description\"));\n\t\tg.setParentId(this.request.getIntParameter(\"parent_id\"));\n\t\tg.setName(this.request.getParameter(\"group_name\"));\n\t\t\t\n\t\tgm.addNew(g);\t\t\t\n\t\t\t\n\t\tthis.list();\n\t}\n\t\n\t// Permissions\n\tpublic void permissions()\n\t{\n\t\tint id = this.request.getIntParameter(\"group_id\");\n\t\t\n\t\tPermissionControl pc = new PermissionControl();\n\t\tpc.setRoles(DataAccessDriver.getInstance().newGroupSecurityDAO().loadRoles(id));\n\t\t\n\t\tString xmlconfig = SystemGlobals.getValue(ConfigKeys.CONFIG_DIR) + \"/permissions.xml\"; \n\t\tList sections = new XMLPermissionControl(pc).loadConfigurations(xmlconfig); \n\t\t\n\t\tGroupDAO gm = DataAccessDriver.getInstance().newGroupDAO();\n\n\t\tthis.context.put(\"sections\", sections);\n\t\tthis.context.put(\"group\", gm.selectById(id));\n\t\tthis.setTemplateName(TemplateKeys.GROUP_PERMISSIONS);\n\t}\n\t\n\tpublic void permissionsSave()\n\t{\n\t\tint id = this.request.getIntParameter(\"id\");\n\t\t\n\t\tGroupSecurityDAO gmodel = DataAccessDriver.getInstance().newGroupSecurityDAO();\n\t\t\n\t\tPermissionControl pc = new PermissionControl();\n\t\tpc.setSecurityModel(gmodel);\n\t\t\n\t\tnew PermissionProcessHelper(pc, id).processData();\n\n\t\tSecurityRepository.clean();\n\t\tRolesRepository.clear();\n\t\tForumRepository.clearModeratorList();\n\t\t\n\t\tthis.list();\n\t}\n}",
  "metadata": {
    "fileId": "GroupAction_java_chunk_1",
    "fileName": "GroupAction.java",
    "filePath": "src/net/jforum/view/admin/GroupAction.java"
  }
}