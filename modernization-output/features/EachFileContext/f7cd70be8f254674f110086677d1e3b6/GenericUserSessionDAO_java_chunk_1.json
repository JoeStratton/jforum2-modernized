{
  "pageContent": "File Path: src/net/jforum/dao/generic/GenericUserSessionDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on 30/05/2004 15:10:57\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao.generic;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Timestamp;\n\nimport net.jforum.entities.UserSession;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.util.DbUtils;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * @author Rafael Steil\n * @version $Id: GenericUserSessionDAO.java,v 1.7 2006/08/23 02:13:43 rafaelsteil Exp $\n */\npublic class GenericUserSessionDAO implements net.jforum.dao.UserSessionDAO\n{\n\t/**\n\t * @see net.jforum.dao.UserSessionDAO#add(net.jforum.entities.UserSession, java.sql.Connection)\n\t */\n\tpublic void add(UserSession us, Connection conn)\n\t{\n\t\tthis.add(us, conn, false);\n\t}\n\n\tprivate void add(UserSession us, Connection conn, boolean checked)\n\t{\n\t\tif (!checked && this.selectById(us, conn) != null) {\n\t\t\treturn;\n\t\t}\n\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = conn.prepareStatement(SystemGlobals.getSql(\"UserSessionModel.add\"));\n\t\t\tp.setString(1, us.getSessionId());\n\t\t\tp.setInt(2, us.getUserId());\n\t\t\tp.setTimestamp(3, new Timestamp(us.getStartTime().getTime()));\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.UserSessionDAO#update(net.jforum.entities.UserSession,\n\t *      java.sql.Connection)\n\t */\n\tpublic void update(UserSession us, Connection conn)\n\t{\n\t\tif (this.selectById(us, conn) == null) {\n\t\t\tthis.add(us, conn, true);\n\t\t\treturn;\n\t\t}\n\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = conn.prepareStatement(SystemGlobals.getSql(\"UserSessionModel.update\"));\n\t\t\tp.setTimestamp(1, new Timestamp(us.getStartTime().getTime()));\n\t\t\tp.setLong(2, us.getSessionTime());\n\t\t\tp.setString(3, us.getSessionId());\n\t\t\tp.setInt(4, us.getUserId());\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.UserSessionDAO#selectById(net.jforum.entities.UserSession,\n\t *      java.sql.Connection)\n\t */\n\tpublic UserSession selectById(UserSession us, Connection conn)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = conn.prepareStatement(SystemGlobals.getSql(\"UserSessionModel.selectById\"));\n\t\t\tp.setInt(1, us.getUserId());\n\n\t\t\trs = p.executeQuery();\n\t\t\tboolean found = false;\n\n\t\t\tUserSession returnUs = new UserSession(us);\n\n\t\t\tif (rs.next()) {\n\t\t\t\treturnUs.setSessionTime(rs.getLong(\"session_time\"));\n\t\t\t\treturnUs.setStartTime(rs.getTimestamp(\"session_start\"));\n\t\t\t\tfound = true;\n\t\t\t}\n\n\t\t\treturn (found ? returnUs : null);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n}",
  "metadata": {
    "fileId": "GenericUserSessionDAO_java_chunk_1",
    "fileName": "GenericUserSessionDAO.java",
    "filePath": "src/net/jforum/dao/generic/GenericUserSessionDAO.java"
  }
}