{
  "pageContent": "File Path: src/net/jforum/dao/generic/GenericRankingDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: Mar 23, 2003 / 7:52:13 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao.generic;\n\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.entities.Ranking;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.util.DbUtils;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * @author Rafael Steil\n * @version $Id: GenericRankingDAO.java,v 1.9 2006/12/02 03:19:44 rafaelsteil Exp $\n */\npublic class GenericRankingDAO implements net.jforum.dao.RankingDAO\n{\n\t/**\n\t * @see net.jforum.dao.RankingDAO#selectById(int)\n\t */\n\tpublic Ranking selectById(int rankingId)\n\t{\n\t\tRanking ranking = new Ranking();\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection()\n\t\t\t\t\t.prepareStatement(SystemGlobals.getSql(\"RankingModel.selectById\"));\n\t\t\tp.setInt(1, rankingId);\n\n\t\t\trs = p.executeQuery();\n\t\t\t\n\t\t\tif (rs.next()) {\n\t\t\t\tranking = this.buildRanking(rs);\n\t\t\t}\n\n\t\t\treturn ranking;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.RankingDAO#selectAll()\n\t */\n\tpublic List selectAll()\n\t{\n\t\tList l = new ArrayList();\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"RankingModel.selectAll\"));\n\t\t\trs = p.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tRanking ranking = buildRanking(rs);\n\t\t\t\tl.add(ranking);\n\t\t\t}\n\n\t\t\treturn l;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.RankingDAO#delete(int)\n\t */\n\tpublic void delete(int rankingId)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"RankingModel.delete\"));\n\t\t\tp.setInt(1, rankingId);\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.RankingDAO#update(net.jforum.entities.Ranking)\n\t */\n\tpublic void update(Ranking ranking)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"RankingModel.update\"));\n\n\t\t\tp.setString(1, ranking.getTitle());\n\t\t\tp.setString(2, ranking.getImage());\n\t\t\tp.setInt(3, ranking.isSpecial() ? 1 : 0);\n\t\t\tp.setInt(4, ranking.getMin());\n\t\t\tp.setInt(5, ranking.getId());\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.RankingDAO#addNew(net.jforum.entities.Ranking)\n\t */\n\tpublic void addNew(Ranking ranking)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"RankingModel.addNew\"));\n\n\t\t\tp.setString(1, ranking.getTitle());\n\t\t\tp.setInt(2, ranking.getMin());\n\t\t\tp.setInt(3, ranking.isSpecial() ? 1 : 0);\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\t\n\tpublic List selectSpecials()\n\t{\n\t\tList l = new ArrayList();\n\t\t\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"RankingModel.selectSpecials\"));\n\t\t\trs = p.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tRanking ranking = this.buildRanking(rs);\n\t\t\t\tl.add(ranking);\n\t\t\t}\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t\t\n\t\treturn l;\n\t}\n\n\tprivate Ranking buildRanking(ResultSet rs) throws SQLException\n\t{\n\t\tRanking ranking = new Ranking();\n\n\t\tranking.setId(rs.getInt(\"rank_id\"));\n\t\tranking.setTitle(rs.getString(\"rank_title\"));\n\t\tranking.setImage(rs.getString(\"rank_image\"));\n\t\tranking.setMin(rs.getInt(\"rank_min\"));\n\t\tranking.setSpecial(rs.getInt(\"rank_special\") == 1);\n\t\t\n\t\treturn ranking;\n\t}\n}",
  "metadata": {
    "fileId": "GenericRankingDAO_java_chunk_1",
    "fileName": "GenericRankingDAO.java",
    "filePath": "src/net/jforum/dao/generic/GenericRankingDAO.java"
  }
}