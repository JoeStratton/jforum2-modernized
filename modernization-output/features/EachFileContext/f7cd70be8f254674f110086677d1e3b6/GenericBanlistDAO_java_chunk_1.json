{
  "pageContent": "File Path: src/net/jforum/dao/generic/GenericBanlistDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n *\n * Created on 07/12/2006 21:01:17\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao.generic;\n\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.dao.BanlistDAO;\nimport net.jforum.entities.Banlist;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.util.DbUtils;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * @author Rafael Steil\n * @version $Id: GenericBanlistDAO.java,v 1.2 2007/03/24 23:26:50 rafaelsteil Exp $\n */\npublic class GenericBanlistDAO extends AutoKeys implements BanlistDAO\n{\n\t/**\n\t * @see net.jforum.dao.BanlistDAO#delete(int)\n\t */\n\tpublic void delete(int banlistId)\n\t{\n\t\tPreparedStatement p = null;\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\tSystemGlobals.getSql(\"BanlistModel.delete\"));\n\t\t\tp.setInt(1, banlistId);\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.BanlistDAO#insert(net.jforum.entities.Banlist)\n\t */\n\tpublic void insert(Banlist b)\n\t{\n\t\tPreparedStatement p = null;\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\tSystemGlobals.getSql(\"BanlistModel.insert\"));\n\t\t\t\n\t\t\tp.setInt(1, b.getUserId());\n\t\t\tp.setString(2, b.getIp());\n\t\t\tp.setString(3, b.getEmail());\n\t\t\t\n\t\t\tthis.setAutoGeneratedKeysQuery(SystemGlobals.getSql(\"BanlistModel.lastGeneratedBanlistId\"));\n\t\t\t\n\t\t\tint id = this.executeAutoKeysQuery(p);\n\t\t\t\n\t\t\tb.setId(id);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\t\n\t/**\n\t * @see net.jforum.dao.BanlistDAO#selectAll()\n\t */\n\tpublic List selectAll()\n\t{\n\t\tResultSet rs = null;\n\t\tPreparedStatement p = null;\n\t\t\n\t\tList l = new ArrayList();\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\tSystemGlobals.getSql(\"BanlistModel.selectAll\"));\n\t\t\trs = p.executeQuery();\n\t\t\t\n\t\t\twhile (rs.next()) {\n\t\t\t\tBanlist b = new Banlist();\n\t\t\t\t\n\t\t\t\tb.setId(rs.getInt(\"banlist_id\"));\n\t\t\t\tb.setUserId(rs.getInt(\"user_id\"));\n\t\t\t\tb.setEmail(rs.getString(\"banlist_email\"));\n\t\t\t\tb.setIp(rs.getString(\"banlist_ip\"));\n\t\t\t\t\n\t\t\t\tl.add(b);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t\t\n\t\treturn l;\n\t}\n}",
  "metadata": {
    "fileId": "GenericBanlistDAO_java_chunk_1",
    "fileName": "GenericBanlistDAO.java",
    "filePath": "src/net/jforum/dao/generic/GenericBanlistDAO.java"
  }
}