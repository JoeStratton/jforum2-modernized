{
  "pageContent": "File Path: src/net/jforum/dao/generic/GenericTopicDAO.java\n\n Original Content: return this.fillTopicsData(p);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.TopicDAO#selectByUserByLimit(int, int, int)\n\t */\n\tpublic List selectByUserByLimit(int userId, int startFrom, int count)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"TopicModel.selectByUserByLimit\").replaceAll(\":fids:\",\n\t\t\t\t\t\t\tForumRepository.getListAllowedForums()));\n\n\t\t\tp.setInt(1, userId);\n\t\t\tp.setInt(2, startFrom);\n\t\t\tp.setInt(3, count);\n\n\t\t\tList list = this.fillTopicsData(p);\n\t\t\tp = null;\n\t\t\treturn list;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.TopicDAO#countUserTopics(int)\n\t */\n\tpublic int countUserTopics(int userId)\n\t{\n\t\tint total = 0;\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"TopicModel.countUserTopics\").replaceAll(\":fids:\",\n\t\t\t\t\t\t\tForumRepository.getListAllowedForums()));\n\t\t\tp.setInt(1, userId);\n\n\t\t\trs = p.executeQuery();\n\n\t\t\tif (rs.next()) {\n\t\t\t\ttotal = rs.getInt(1);\n\t\t\t}\n\n\t\t\treturn total;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tprotected Topic getBaseTopicData(ResultSet rs) throws SQLException\n\t{\n\t\tTopic t = new Topic();\n\n\t\tt.setTitle(rs.getString(\"topic_title\"));\n\t\tt.setId(rs.getInt(\"topic_id\"));\n\t\tt.setTime(new Date(rs.getTimestamp(\"topic_time\").getTime()));\n\t\tt.setStatus(rs.getInt(\"topic_status\"));\n\t\tt.setTotalViews(rs.getInt(\"topic_views\"));\n\t\tt.setTotalReplies(rs.getInt(\"topic_replies\"));\n\t\tt.setFirstPostId(rs.getInt(\"topic_first_post_id\"));\n\t\tt.setLastPostId(rs.getInt(\"topic_last_post_id\"));\n\t\tt.setType(rs.getInt(\"topic_type\"));\n\t\tt.setForumId(rs.getInt(\"forum_id\"));\n\t\tt.setModerated(rs.getInt(\"moderated\") == 1);\n\t\tt.setVoteId(rs.getInt(\"topic_vote_id\"));\n\t\tt.setMovedId(rs.getInt(\"topic_moved_id\"));\n\t\t\n\t\tUser user = new User();\n\t\tuser.setId(rs.getInt(\"user_id\"));\n\t\t\n\t\tt.setPostedBy(user);\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * @see net.jforum.dao.TopicDAO#autoSetLastPostId(int)\n\t */\n\tpublic int getMaxPostId(int topicId)\n\t{\n\t\tint id = -1;\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection()\n\t\t\t\t\t.prepareStatement(SystemGlobals.getSql(\"TopicModel.getMaxPostId\"));\n\t\t\tp.setInt(1, topicId);\n\n\t\t\trs = p.executeQuery();\n\t\t\tif (rs.next()) {\n\t\t\t\tid = rs.getInt(\"post_id\");\n\t\t\t}\n\n\t\t\treturn id;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.TopicDAO#getTotalPosts(int)\n\t */\n\tpublic int getTotalPosts(int topicId)\n\t{\n\t\tint total = 0;\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"TopicModel.getTotalPosts\"));\n\t\t\tp.setInt(1, topicId);\n\n\t\t\trs = p.executeQuery();\n\t\t\tif (rs.next()) {\n\t\t\t\ttotal = rs.getInt(\"total\");\n\t\t\t}\n\n\t\t\treturn total;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.TopicDAO#notifyUsers(net.jforum.entities.Topic)\n\t */\n\tpublic List notifyUsers(Topic topic)\n\t{\n\t\tint posterId = SessionFacade.getUserSession().getUserId();\n\t\tint anonUser = SystemGlobals.getIntValue(ConfigKeys.ANONYMOUS_USER_ID);\n\n\t\tPreparedStatement stmt = null;\n\t\tResultSet rs = null;\n\t\t\n\t\ttry {\n\t\t\tstmt = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"TopicModel.notifyUsers\"));\n\n\t\t\tstmt.setInt(1, topic.getId());\n\t\t\tstmt.setInt(2, posterId); // don't notify the poster\n\t\t\tstmt.setInt(3, anonUser); // don't notify the anonimous user\n\n\t\t\trs = stmt.executeQuery();\n\n\t\t\tList users = new ArrayList();\n\t\t\t\n\t\t\twhile (rs.next()) {\n\t\t\t\tUser user = new User();\n\n\t\t\t\tuser.setId(rs.getInt(\"user_id\"));\n\t\t\t\tuser.setEmail(rs.getString(\"user_email\"));\n\t\t\t\tuser.setUsername(rs.getString(\"username\"));\n\t\t\t\tuser.setLang(rs.getString(\"user_lang\"));\n\t\t\t\tuser.setNotifyText(rs.getInt(\"user_notify_text\") == 1);\n\n\t\t\t\tusers.add(user);\n\t\t\t}\n\t\t\t\n\t\t\trs.close();\n\t\t\tstmt.close();\n\n\t\t\t// Set read status to false\n\t\t\tstmt = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\tSystemGlobals.getSql(\"TopicModel.markAllAsUnread\"));\n\t\t\tstmt.setInt(1, topic.getId());\n\t\t\tstmt.setInt(2, posterId); // don't notify the poster\n\t\t\tstmt.setInt(3, anonUser); // don't notify the anonimous user\n\n\t\t\tstmt.executeUpdate();\n\n\t\t\treturn users;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, stmt);\n\t\t}\n\t}\n\t\n\t/**\n\t * @see net.jforum.dao.TopicDAO#subscribeUsers(int, java.util.List)\n\t */\n\tpublic void subscribeUsers(int topicId, List users)\n\t{\n\t\tPreparedStatement p = null;\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\tSystemGlobals.getSql(\"TopicModel.subscribeUser\"));\n\n\t\t\tp.setInt(1, topicId);\n\t\t\t\n\t\t\tfor (Iterator iter = users.iterator(); iter.hasNext(); ) {\n\t\t\t\tint userId = ((User)iter.next()).getId();\n\t\t\t\t\n\t\t\t\tp.setInt(2, userId);\n\t\t\t\tp.executeUpdate();\n\t\t\t}\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.TopicDAO#subscribeUser(int, int)\n\t */\n\tpublic void subscribeUser(int topicId, int userId)\n\t{\n\t\tUser user = new User();\n\t\tuser.setId(userId);\n\t\t\n\t\tList l = new ArrayList();\n\t\tl.add(user);\n\t\t\n\t\tthis.subscribeUsers(topicId, l);\n\t}\n\n\t/**\n\t * @see net.jforum.dao.TopicDAO#isUserSubscribing(int, int)\n\t */\n\tpublic boolean isUserSubscribed(int topicId, int userId)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\tSystemGlobals.getSql(\"TopicModel.isUserSubscribed\"));\n\n\t\t\tp.setInt(1, topicId);\n\t\t\tp.setInt(2, userId);\n\n\t\t\trs = p.executeQuery();\n\n\t\t\treturn rs.next() && rs.getInt(1) > 0;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.TopicDAO#removeSubscription(int, int)\n\t */\n\tpublic void removeSubscription(int topicId, int userId)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"TopicModel.removeSubscription\"));\n\t\t\tp.setInt(1, topicId);\n\t\t\tp.setInt(2, userId);\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.TopicDAO#removeSubscriptionByTopic(int)\n\t */\n\tpublic void removeSubscriptionByTopic(int topicId)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"TopicModel.removeSubscriptionByTopic\"));\n\t\t\tp.setInt(1, topicId);\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.TopicDAO#updateReadStatus(int, int, boolean)\n\t */\n\tpublic void updateReadStatus(int topicId, int userId, boolean read)\n\t{\n\t\tif (this.isUserSubscribed(topicId, userId)) {\n\t\t\tPreparedStatement p = null;\n\t\t\ttry {\n\t\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\t\tSystemGlobals.getSql(\"TopicModel.updateReadStatus\"));\n\t\t\t\tp.setInt(1, read ? 1 : 0);\n\t\t\t\tp.setInt(2, topicId);\n\t\t\t\tp.setInt(3, userId);\n\t\n\t\t\t\tp.executeUpdate();\n\t\t\t}\n\t\t\tcatch (SQLException e) {\n\t\t\t\tthrow new DatabaseException(e);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tDbUtils.close(p);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.TopicDAO#lockUnlock(int[], int)\n\t */\n\tpublic void lockUnlock(int[] topicId, int status)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"TopicModel.lockUnlock\"));\n\t\t\tp.setInt(1, status);\n\n\t\t\tfor (int i = 0; i < topicId.length; i++) {\n\t\t\t\tp.setInt(2, topicId[i]);\n\t\t\t\tp.executeUpdate();\n\t\t\t}\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\t\n\tprivate List newMessages(List topicIds)\n\t{\n\t\tif (topicIds.size() == 0) {\n\t\t\treturn new ArrayList();\n\t\t}\n\t\t\n\t\tPreparedStatement p = null;\n\t\t\n\t\ttry {\n\t\t\tString sql = SystemGlobals.getSql(\"TopicModel.selectForNewMessages\");\n\t\t\t\n\t\t\tStringBuffer sb = new StringBuffer();\n\t\t\t\n\t\t\tfor (Iterator iter = topicIds.iterator(); iter.hasNext(); ) {\n\t\t\t\tsb.append(iter.next()).append(',');\n\t\t\t}\n\t\t\t\n\t\t\tsb.append(\"-1\");\n\n\t\t\tsql = sql.replaceAll(\":topicIds:\", sb.toString());\n\t\t\t\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(sql);\n\n\t\t\treturn this.fillTopicsData(p);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * Fills all topic data. The method will try to get all fields from the topics table, as well\n\t * information about the user who made the first and the last post in the topic. <br>\n\t * <b>The method <i>will</i> close the <i>PreparedStatement</i></b>\n\t * \n\t * @param p the PreparedStatement to execute\n\t * @return A list with all topics found\n\t * @throws SQLException\n\t */\n\tpublic List fillTopicsData(PreparedStatement p)\n\t{\n\t\tList l = new ArrayList();\n\t\tResultSet rs = null;\n\t\t\n\t\ttry {\n\t\t\trs = p.executeQuery();\n\n\t\t\tSimpleDateFormat df = new SimpleDateFormat(SystemGlobals.getValue(ConfigKeys.DATE_TIME_FORMAT));\n\n\t\t\tStringBuffer sbFirst = new StringBuffer(128);\n\t\t\tStringBuffer sbLast = new StringBuffer(128);\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tTopic t = this.getBaseTopicData(rs);\n\n\t\t\t\t// Posted by\n\t\t\t\tUser u = new User();\n\t\t\t\tu.setId(rs.getInt(\"user_id\"));\n\t\t\t\tt.setPostedBy(u);\n\n\t\t\t\t// Last post by\n\t\t\t\tu = new User();\n\t\t\t\tu.setId(rs.getInt(\"last_user_id\"));\n\t\t\t\tt.setLastPostBy(u);",
  "metadata": {
    "fileId": "GenericTopicDAO_java_chunk_3",
    "fileName": "GenericTopicDAO.java",
    "filePath": "src/net/jforum/dao/generic/GenericTopicDAO.java"
  }
}