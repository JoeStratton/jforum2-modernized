{
  "pageContent": "File Path: src/net/jforum/dao/generic/GenericPostDAO.java\n\n Original Content: public class GenericPostDAO extends AutoKeys implements net.jforum.dao.PostDAO\n{\n\t/**\n\t * @see net.jforum.dao.PostDAO#selectById(int)\n\t */\n\tpublic Post selectById(int postId)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"PostModel.selectById\"));\n\t\t\tp.setInt(1, postId);\n\n\t\t\trs = p.executeQuery();\n\n\t\t\tPost post = new Post();\n\n\t\t\tif (rs.next()) {\n\t\t\t\tpost = this.makePost(rs);\n\t\t\t}\n\n\t\t\treturn post;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tprotected Post makePost(ResultSet rs) throws SQLException\n\t{\n\t\tPost post = new Post();\n\t\tpost.setId(rs.getInt(\"post_id\"));\n\t\tpost.setTopicId(rs.getInt(\"topic_id\"));\n\t\tpost.setForumId(rs.getInt(\"forum_id\"));\n\t\tpost.setUserId(rs.getInt(\"user_id\"));\n\t\t\n\t\tTimestamp postTime = rs.getTimestamp(\"post_time\");\n\t\tpost.setTime(new Date(postTime.getTime()));\n\t\tpost.setUserIp(rs.getString(\"poster_ip\"));\n\t\tpost.setBbCodeEnabled(rs.getInt(\"enable_bbcode\") > 0);\n\t\tpost.setHtmlEnabled(rs.getInt(\"enable_html\") > 0);\n\t\tpost.setSmiliesEnabled(rs.getInt(\"enable_smilies\") > 0);\n\t\tpost.setSignatureEnabled(rs.getInt(\"enable_sig\") > 0);\n\t\tpost.setEditCount(rs.getInt(\"post_edit_count\"));\n\t\t\n\t\tTimestamp editTime = rs.getTimestamp(\"post_edit_time\");\n\t\tpost.setEditTime(editTime != null ? new Date(editTime.getTime()) : null);\n\t\t\n\t\tpost.setSubject(rs.getString(\"post_subject\"));\n\t\tpost.setText(this.getPostTextFromResultSet(rs));\n\t\tpost.setPostUsername(rs.getString(\"username\"));\n\t\tpost.hasAttachments(rs.getInt(\"attach\") > 0);\n\t\tpost.setModerate(rs.getInt(\"need_moderate\") == 1);\n\n\t\tSimpleDateFormat df = new SimpleDateFormat(SystemGlobals.getValue(ConfigKeys.DATE_TIME_FORMAT));\n\t\tpost.setFormatedTime(df.format(postTime));\n\n\t\tpost.setKarma(DataAccessDriver.getInstance().newKarmaDAO().getPostKarma(post.getId()));\n\n\t\treturn post;\n\t}\n\n\t/**\n\t * Utility method to read the post text fromt the result set. This method may be useful when\n\t * using some \"non-standart\" way to store text, like oracle does when using (c|b)lob\n\t * \n\t * @param rs The resultset to fetch data from\n\t * @return The post text string\n\t * @throws SQLException\n\t */\n\tprotected String getPostTextFromResultSet(ResultSet rs) throws SQLException\n\t{\n\t\treturn rs.getString(\"post_text\");\n\t}\n\n\t/**\n\t * @see net.jforum.dao.PostDAO#delete(Post)\n\t */\n\tpublic void delete(Post post)\n\t{\n\t\tList l = new ArrayList();\n\t\tl.add(post);\n\t\tthis.removePosts(l);\n\t}\n\n\tprivate void removePosts(List posts)\n\t{\n\t\tPreparedStatement post = null;\n\t\tPreparedStatement text = null;\n\n\t\ttry {\n\t\t\tpost = JForumExecutionContext.getConnection()\n\t\t\t\t\t.prepareStatement(SystemGlobals.getSql(\"PostModel.deletePost\"));\n\n\t\t\ttext = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"PostModel.deletePostText\"));\n\n\t\t\tfor (Iterator iter = posts.iterator(); iter.hasNext();) {\n\t\t\t\tPost p = (Post) iter.next();\n\n\t\t\t\tpost.setInt(1, p.getId());\n\t\t\t\ttext.setInt(1, p.getId());\n\n\t\t\t\ttext.executeUpdate();\n\t\t\t\tpost.executeUpdate();\n\t\t\t\t\n\t\t\t\tSearchFacade.delete(p);\n\t\t\t}\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(post);\n\t\t\tDbUtils.close(text);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.model.PostModel#deleteByTopic(int)\n\t */\n\tpublic void deleteByTopic(int topicId)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection()\n\t\t\t\t.prepareStatement(SystemGlobals.getSql(\"PostModel.deleteByTopic\"));\n\t\t\tp.setInt(1, topicId);\n\t\t\trs = p.executeQuery();\n\n\t\t\tList posts = new ArrayList();\n\t\t\t\n\t\t\twhile (rs.next()) {\n\t\t\t\tPost post = new Post();\n\t\t\t\tpost.setId(rs.getInt(\"post_id\"));\n\t\t\t\tpost.setUserId(rs.getInt(\"user_id\"));\n\n\t\t\t\tposts.add(post);\n\t\t\t}\n\n\t\t\tthis.removePosts(posts);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.PostDAO#update(net.jforum.entities.Post)\n\t */\n\tpublic void update(Post post)\n\t{\n\t\tthis.updatePostsTable(post);\n\t\tthis.updatePostsTextTable(post);\n\n\t\tSearchFacade.update(post);\n\t}\n\n\tprotected void updatePostsTextTable(Post post)\n\t{\n\t\tPreparedStatement p = null;\n\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"PostModel.updatePostText\"));\n\t\t\tp.setString(1, post.getText());\n\t\t\tp.setString(2, post.getSubject());\n\t\t\tp.setInt(3, post.getId());\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\tprotected void updatePostsTable(Post post)\n\t{\n\t\tPreparedStatement p = null;\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"PostModel.updatePost\"));\n\t\t\tp.setInt(1, post.getTopicId());\n\t\t\tp.setInt(2, post.getForumId());\n\t\t\tp.setInt(3, post.isBbCodeEnabled() ? 1 : 0);\n\t\t\tp.setInt(4, post.isHtmlEnabled() ? 1 : 0);\n\t\t\tp.setInt(5, post.isSmiliesEnabled() ? 1 : 0);\n\t\t\tp.setInt(6, post.isSignatureEnabled() ? 1 : 0);\n\t\t\tp.setTimestamp(7, new Timestamp(System.currentTimeMillis()));\n\t\t\tp.setInt(8, post.getEditCount() + 1);\n\t\t\tp.setString(9, post.getUserIp());\n\t\t\tp.setInt(10, post.getId());\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.PostDAO#addNew(net.jforum.entities.Post)\n\t */\n\tpublic int addNew(Post post)\n\t{\n\t\ttry {\n\t\t\tthis.addNewPost(post);\n\t\t\tthis.addNewPostText(post);\n\n\t\t\t// Search\n\t\t\tSearchFacade.create(post);\n\t\t\t\n\t\t\treturn post.getId();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t}\n\n\tprotected void addNewPostText(Post post) throws Exception\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\tSystemGlobals.getSql(\"PostModel.addNewPostText\"));\n\t\t\tp.setInt(1, post.getId());\n\t\t\tp.setString(2, post.getText());\n\t\t\tp.setString(3, post.getSubject());\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\tprotected void addNewPost(Post post)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = this.getStatementForAutoKeys(\"PostModel.addNewPost\");\n\n\t\t\tp.setInt(1, post.getTopicId());\n\t\t\tp.setInt(2, post.getForumId());\n\t\t\tp.setLong(3, post.getUserId());\n\t\t\tp.setTimestamp(4, new Timestamp(post.getTime().getTime()));\n\t\t\tp.setString(5, post.getUserIp());\n\t\t\tp.setInt(6, post.isBbCodeEnabled() ? 1 : 0);\n\t\t\tp.setInt(7, post.isHtmlEnabled() ? 1 : 0);\n\t\t\tp.setInt(8, post.isSmiliesEnabled() ? 1 : 0);\n\t\t\tp.setInt(9, post.isSignatureEnabled() ? 1 : 0);\n\t\t\tp.setInt(10, post.isModerationNeeded() ? 1 : 0);\n\n\t\t\tthis.setAutoGeneratedKeysQuery(SystemGlobals.getSql(\"PostModel.lastGeneratedPostId\"));\n\t\t\tint postId = this.executeAutoKeysQuery(p);\n\t\t\tpost.setId(postId);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.PostDAO#selectAllBytTopic(int)\n\t */\n\tpublic List selectAllByTopic(int topicId)\n\t{\n\t\treturn this.selectAllByTopicByLimit(topicId, 0, Integer.MAX_VALUE - 1);\n\t}\n\n\t/**\n\t * @see net.jforum.dao.PostDAO#selectAllBytTopicByLimit(int, int, int)\n\t */\n\tpublic List selectAllByTopicByLimit(int topicId, int startFrom, int count)\n\t{\n\t\tList l = new ArrayList();\n\n\t\tString sql = SystemGlobals.getSql(\"PostModel.selectAllByTopicByLimit\");\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(sql);\n\t\t\tp.setInt(1, topicId);\n\t\t\tp.setInt(2, startFrom);\n\t\t\tp.setInt(3, count);\n\n\t\t\trs = p.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tl.add(this.makePost(rs));\n\t\t\t}\n\n\t\t\treturn l;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.PostDAO#selectByUserByLimit(int, int, int)\n\t */\n\tpublic List selectByUserByLimit(int userId, int startFrom, int count)\n\t{\n\t\tString sql = SystemGlobals.getSql(\"PostModel.selectByUserByLimit\");\n\t\tsql = sql.replaceAll(\":fids:\", ForumRepository.getListAllowedForums());\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(sql);\n\n\t\t\tp.setInt(1, userId);\n\t\t\tp.setInt(2, startFrom);\n\t\t\tp.setInt(3, count);\n\n\t\t\trs = p.executeQuery();\n\t\t\tList l = new ArrayList();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tl.add(this.makePost(rs));\n\t\t\t}\n\n\t\t\treturn l;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tpublic int countUserPosts(int userId)\n\t{\n\t\tint total = 0;\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"PostModel.countUserPosts\").replaceAll(\":fids:\",\n\t\t\t\t\t\t\tForumRepository.getListAllowedForums()));\n\t\t\tp.setInt(1, userId);\n\n\t\t\trs = p.executeQuery();\n\n\t\t\tif (rs.next()) {\n\t\t\t\ttotal = rs.getInt(1);\n\t\t\t}\n\n\t\t\treturn total;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.model.PostModel#countPreviousPosts(int)\n\t */\n\tpublic int countPreviousPosts(int postId)\n\t{\n\t\tint total = 0;\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"PostModel.countPreviousPosts\"));\n\t\t\tp.setInt(1, postId);\n\t\t\tp.setInt(2, postId);\n\n\t\t\trs = p.executeQuery();\n\n\t\t\tif (rs.next()) {\n\t\t\t\ttotal = rs.getInt(1);\n\t\t\t}\n\n\t\t\treturn total;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}",
  "metadata": {
    "fileId": "GenericPostDAO_java_chunk_2",
    "fileName": "GenericPostDAO.java",
    "filePath": "src/net/jforum/dao/generic/GenericPostDAO.java"
  }
}