{
  "pageContent": "File Path: src/net/jforum/dao/generic/GenericSmilieDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: 13/01/2004 / 12:02:54\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao.generic;\n\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.entities.Smilie;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.util.DbUtils;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * @author Rafael Steil\n * @version $Id: GenericSmilieDAO.java,v 1.9 2007/02/25 13:48:33 rafaelsteil Exp $\n */\npublic class GenericSmilieDAO extends AutoKeys implements net.jforum.dao.SmilieDAO\n{\n\t/**\n\t * @see net.jforum.repository.SmilieDAO#addNew(net.jforum.entities.Smilie)\n\t */\n\tpublic int addNew(Smilie smilie)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = this.getStatementForAutoKeys(\"SmiliesModel.addNew\");\n\n\t\t\tp.setString(1, smilie.getCode());\n\t\t\tp.setString(2, smilie.getUrl());\n\t\t\tp.setString(3, smilie.getDiskName());\n\n\t\t\tthis.setAutoGeneratedKeysQuery(SystemGlobals.getSql(\"SmiliesModel.lastGeneratedSmilieId\"));\n\n\t\t\treturn this.executeAutoKeysQuery(p);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.repository.SmilieDAO#delete(int, int)\n\t */\n\tpublic void delete(int id)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"SmiliesModel.delete\"));\n\t\t\tp.setInt(1, id);\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.repository.SmilieDAO#update(net.jforum.entities.Smilie)\n\t */\n\tpublic void update(Smilie smilie)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"SmiliesModel.update\"));\n\t\t\tp.setString(1, smilie.getCode());\n\t\t\tp.setString(2, smilie.getUrl());\n\t\t\tp.setString(3, smilie.getDiskName());\n\t\t\tp.setInt(4, smilie.getId());\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\tprivate Smilie getSmilie(ResultSet rs) throws SQLException\n\t{\n\t\tSmilie s = new Smilie();\n\n\t\ts.setId(rs.getInt(\"smilie_id\"));\n\t\ts.setCode(rs.getString(\"code\"));\n\t\ts.setUrl(rs.getString(\"url\"));\n\t\ts.setDiskName(rs.getString(\"disk_name\"));\n\n\t\treturn s;\n\t}\n\n\t/**\n\t * @see net.jforum.repository.SmilieDAO#selectAll()\n\t */\n\tpublic List selectAll()\n\t{\n\t\tList l = new ArrayList();\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"SmiliesModel.selectAll\"));\n\t\t\trs = p.executeQuery();\n\t\t\twhile (rs.next()) {\n\t\t\t\tl.add(this.getSmilie(rs));\n\t\t\t}\n\n\t\t\treturn l;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.SmilieDAO#selectById(int)\n\t */\n\tpublic Smilie selectById(int id)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection()\n\t\t\t\t\t.prepareStatement(SystemGlobals.getSql(\"SmiliesModel.selectById\"));\n\t\t\tp.setInt(1, id);\n\n\t\t\tSmilie s = new Smilie();\n\n\t\t\trs = p.executeQuery();\n\t\t\tif (rs.next()) {\n\t\t\t\ts = this.getSmilie(rs);\n\t\t\t}\n\n\t\t\treturn s;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n}",
  "metadata": {
    "fileId": "GenericSmilieDAO_java_chunk_1",
    "fileName": "GenericSmilieDAO.java",
    "filePath": "src/net/jforum/dao/generic/GenericSmilieDAO.java"
  }
}