{
  "pageContent": "File Path: src/net/jforum/dao/generic/GenericBookmarkDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n *\n * Created on Jan 16, 2005 12:47:31 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao.generic;\n\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.entities.Bookmark;\nimport net.jforum.entities.BookmarkType;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.exceptions.InvalidBookmarkTypeException;\nimport net.jforum.util.DbUtils;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * @author Rafael Steil\n * @version $Id: GenericBookmarkDAO.java,v 1.8 2006/08/23 02:13:42 rafaelsteil Exp $\n */\npublic class GenericBookmarkDAO implements net.jforum.dao.BookmarkDAO\n{\n\t/**\n\t * @see net.jforum.dao.BookmarkDAO#add(net.jforum.entities.Bookmark)\n\t */\n\tpublic void add(Bookmark b)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"BookmarkModel.add\"));\n\t\t\tp.setInt(1, b.getUserId());\n\t\t\tp.setInt(2, b.getRelationId());\n\t\t\tp.setInt(3, b.getRelationType());\n\t\t\tp.setInt(4, b.isPublicVisible() ? 1 : 0);\n\t\t\tp.setString(5, b.getTitle());\n\t\t\tp.setString(6, b.getDescription());\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.BookmarkDAO#update(net.jforum.entities.Bookmark)\n\t */\n\tpublic void update(Bookmark b)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"BookmarkModel.update\"));\n\t\t\tp.setInt(1, b.isPublicVisible() ? 1 : 0);\n\t\t\tp.setString(2, b.getTitle());\n\t\t\tp.setString(3, b.getDescription());\n\t\t\tp.setInt(4, b.getId());\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.BookmarkDAO#remove(int)\n\t */\n\tpublic void remove(int bookmarkId)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"BookmarkModel.remove\"));\n\t\t\tp.setInt(1, bookmarkId);\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.BookmarkDAO#selectByUser(int, int)\n\t */\n\tpublic List selectByUser(int userId, int relationType)\n\t{\n\t\tif (relationType == BookmarkType.FORUM) {\n\t\t\treturn this.getForums(userId);\n\t\t}\n\t\telse if (relationType == BookmarkType.TOPIC) {\n\t\t\treturn this.getTopics(userId);\n\t\t}\n\t\telse if (relationType == BookmarkType.USER) {\n\t\t\treturn this.getUsers(userId);\n\t\t}\n\t\telse {\n\t\t\tthrow new InvalidBookmarkTypeException(\"The type \" + relationType + \" is not a valid bookmark type\");\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.BookmarkDAO#selectByUser(int)\n\t */\n\tpublic List selectByUser(int userId)\n\t{\n\t\tList l = new ArrayList();\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"BookmarkModel.selectAllFromUser\"));\n\t\t\tp.setInt(1, userId);\n\n\t\t\trs = p.executeQuery();\n\t\t\twhile (rs.next()) {\n\t\t\t\tl.add(this.getBookmark(rs));\n\t\t\t}\n\n\t\t\treturn l;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.BookmarkDAO#selectById(int)\n\t */\n\tpublic Bookmark selectById(int bookmarkId)\n\t{\n\t\tBookmark b = null;\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"BookmarkModel.selectById\"));\n\t\t\tp.setInt(1, bookmarkId);\n\n\t\t\trs = p.executeQuery();\n\t\t\tif (rs.next()) {\n\t\t\t\tb = this.getBookmark(rs);\n\t\t\t}\n\n\t\t\treturn b;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.BookmarkDAO#selectForUpdate(int, int, int)\n\t */\n\tpublic Bookmark selectForUpdate(int relationId, int relationType, int userId)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"BookmarkModel.selectForUpdate\"));\n\t\t\tp.setInt(1, relationId);\n\t\t\tp.setInt(2, relationType);\n\t\t\tp.setInt(3, userId);\n\n\t\t\tBookmark b = null;\n\t\t\trs = p.executeQuery();\n\t\t\tif (rs.next()) {\n\t\t\t\tb = this.getBookmark(rs);\n\t\t\t}\n\n\t\t\treturn b;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tprotected List getUsers(int userId)\n\t{\n\t\tList l = new ArrayList();\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"BookmarkModel.selectUserBookmarks\"));\n\t\t\tp.setInt(1, userId);\n\n\t\t\trs = p.executeQuery();\n\t\t\twhile (rs.next()) {\n\t\t\t\tBookmark b = this.getBookmark(rs);\n\n\t\t\t\tif (b.getTitle() == null || \"\".equals(b.getTitle())) {\n\t\t\t\t\tb.setTitle(rs.getString(\"username\"));\n\t\t\t\t}\n\n\t\t\t\tl.add(b);\n\t\t\t}\n\n\t\t\treturn l;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tprotected List getTopics(int userId)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tList l = new ArrayList();\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"BookmarkModel.selectTopicBookmarks\"));\n\t\t\tp.setInt(1, userId);\n\n\t\t\trs = p.executeQuery();\n\t\t\twhile (rs.next()) {\n\t\t\t\tBookmark b = this.getBookmark(rs);\n\n\t\t\t\tif (b.getTitle() == null || \"\".equals(b.getTitle())) {\n\t\t\t\t\tb.setTitle(rs.getString(\"topic_title\"));\n\t\t\t\t}\n\n\t\t\t\tl.add(b);\n\t\t\t}\n\n\t\t\treturn l;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tprotected List getForums(int userId)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tList l = new ArrayList();\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"BookmarkModel.selectForumBookmarks\"));\n\t\t\tp.setInt(1, userId);\n\n\t\t\trs = p.executeQuery();\n\t\t\twhile (rs.next()) {\n\t\t\t\tBookmark b = this.getBookmark(rs);\n\n\t\t\t\tif (b.getTitle() == null || \"\".equals(b.getTitle())) {\n\t\t\t\t\tb.setTitle(rs.getString(\"forum_name\"));\n\t\t\t\t}\n\n\t\t\t\tif (b.getDescription() == null || \"\".equals(b.getDescription())) {\n\t\t\t\t\tb.setDescription(rs.getString(\"forum_desc\"));\n\t\t\t\t}\n\n\t\t\t\tl.add(b);\n\t\t\t}\n\n\t\t\treturn l;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tprotected Bookmark getBookmark(ResultSet rs) throws SQLException\n\t{\n\t\tBookmark b = new Bookmark();\n\t\tb.setId(rs.getInt(\"bookmark_id\"));\n\t\tb.setDescription(rs.getString(\"description\"));\n\t\tb.setPublicVisible(rs.getInt(\"public_visible\") == 1);\n\t\tb.setRelationId(rs.getInt(\"relation_id\"));\n\t\tb.setTitle(rs.getString(\"title\"));\n\t\tb.setDescription(rs.getString(\"description\"));\n\t\tb.setUserId(rs.getInt(\"user_id\"));\n\t\tb.setRelationType(rs.getInt(\"relation_type\"));\n\n\t\treturn b;\n\t}\n}",
  "metadata": {
    "fileId": "GenericBookmarkDAO_java_chunk_1",
    "fileName": "GenericBookmarkDAO.java",
    "filePath": "src/net/jforum/dao/generic/GenericBookmarkDAO.java"
  }
}