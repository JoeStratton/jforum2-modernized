{
  "pageContent": "File Path: src/net/jforum/dao/generic/GenericKarmaDAO.java\n\n Original Content: public class GenericKarmaDAO implements net.jforum.dao.KarmaDAO\n{\n\t/**\n\t * @see net.jforum.dao.KarmaDAO#addKarma(net.jforum.entities.Karma)\n\t */\n\tpublic void addKarma(Karma karma)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"KarmaModel.add\"));\n\t\t\tp.setInt(1, karma.getPostId());\n\t\t\tp.setInt(2, karma.getPostUserId());\n\t\t\tp.setInt(3, karma.getFromUserId());\n\t\t\tp.setInt(4, karma.getPoints());\n\t\t\tp.setInt(5, karma.getTopicId());\n\t\t\tp.setTimestamp(6, new Timestamp((new Date()).getTime()));\n\t\t\tp.executeUpdate();\n\n\t\t\tthis.updateUserKarma(karma.getPostUserId());\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.KarmaDAO#selectKarmaStatus(int)\n\t */\n\tpublic KarmaStatus getUserKarma(int userId)\n\t{\n\t\tKarmaStatus status = new KarmaStatus();\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection()\n\t\t\t\t\t.prepareStatement(SystemGlobals.getSql(\"KarmaModel.getUserKarma\"));\n\t\t\tp.setInt(1, userId);\n\n\t\t\trs = p.executeQuery();\n\t\t\tif (rs.next()) {\n\t\t\t\tstatus.setKarmaPoints(Math.round(rs.getDouble(\"user_karma\")));\n\t\t\t}\n\n\t\t\treturn status;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.KarmaDAO#updateUserKarma(int)\n\t */\n\tpublic void updateUserKarma(int userId)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"KarmaModel.getUserKarmaPoints\"));\n\t\t\tp.setInt(1, userId);\n\n\t\t\tint totalRecords = 0;\n\t\t\tdouble totalPoints = 0;\n\t\t\trs = p.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tint points = rs.getInt(\"points\");\n\t\t\t\tint votes = rs.getInt(\"votes\");\n\n\t\t\t\ttotalPoints += ((double) points / votes);\n\t\t\t\ttotalRecords++;\n\t\t\t}\n\n\t\t\trs.close();\n\t\t\trs = null;\n\t\t\tp.close();\n\t\t\tp = null;\n\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"KarmaModel.updateUserKarma\"));\n\n\t\t\tdouble karmaPoints = totalPoints / totalRecords;\n\n\t\t\tif (Double.isNaN(karmaPoints)) {\n\t\t\t\tkarmaPoints = 0;\n\t\t\t}\n\n\t\t\tp.setDouble(1, karmaPoints);\n\t\t\tp.setInt(2, userId);\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.KarmaDAO#update(net.jforum.entities.Karma)\n\t */\n\tpublic void update(Karma karma)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"KarmaModel.update\"));\n\t\t\tp.setInt(1, karma.getPoints());\n\t\t\tp.setInt(2, karma.getId());\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.KarmaDAO#getPostKarma(int)\n\t */\n\tpublic KarmaStatus getPostKarma(int postId)\n\t{\n\t\tKarmaStatus karma = new KarmaStatus();\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection()\n\t\t\t\t\t.prepareStatement(SystemGlobals.getSql(\"KarmaModel.getPostKarma\"));\n\t\t\tp.setInt(1, postId);\n\n\t\t\trs = p.executeQuery();\n\t\t\tif (rs.next()) {\n\t\t\t\tkarma.setKarmaPoints(Math.round(rs.getDouble(1)));\n\t\t\t}\n\n\t\t\treturn karma;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.KarmaDAO#userCanAddKarma(int, int)\n\t */\n\tpublic boolean userCanAddKarma(int userId, int postId)\n\t{\n\t\tboolean status = true;\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"KarmaModel.userCanAddKarma\"));\n\t\t\tp.setInt(1, postId);\n\t\t\tp.setInt(2, userId);\n\n\t\t\trs = p.executeQuery();\n\t\t\tif (rs.next()) {\n\t\t\t\tstatus = rs.getInt(1) < 1;\n\t\t\t}\n\n\t\t\treturn status;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.KarmaDAO#getUserVotes(int, int)\n\t */\n\tpublic Map getUserVotes(int topicId, int userId)\n\t{\n\t\tMap m = new HashMap();\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection()\n\t\t\t\t\t.prepareStatement(SystemGlobals.getSql(\"KarmaModel.getUserVotes\"));\n\t\t\tp.setInt(1, topicId);\n\t\t\tp.setInt(2, userId);\n\n\t\t\trs = p.executeQuery();\n\t\t\twhile (rs.next()) {\n\t\t\t\tm.put(new Integer(rs.getInt(\"post_id\")), new Integer(rs.getInt(\"points\")));\n\t\t\t}\n\n\t\t\treturn m;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tpublic void getUserTotalKarma(User user)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"KarmaModel.getUserTotalVotes\"));\n\t\t\tp.setInt(1, user.getId());\n\n\t\t\trs = p.executeQuery();\n\n\t\t\tuser.setKarma(new KarmaStatus());\n\n\t\t\tif (rs.next()) {\n\t\t\t\tuser.getKarma().setTotalPoints(rs.getInt(\"points\"));\n\t\t\t\tuser.getKarma().setVotesReceived(rs.getInt(\"votes\"));\n\t\t\t}\n\n\t\t\tif (user.getKarma().getVotesReceived() != 0)// prevetns division by\n\t\t\t\t// zero.\n\t\t\t\tuser.getKarma().setKarmaPoints(user.getKarma().getTotalPoints() / user.getKarma().getVotesReceived());\n\n\t\t\tthis.getVotesGiven(user);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tprivate void getVotesGiven(User user)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"KarmaModel.getUserGivenVotes\"));\n\t\t\tp.setInt(1, user.getId());\n\n\t\t\trs = p.executeQuery();\n\n\t\t\tif (rs.next()) {\n\t\t\t\tuser.getKarma().setVotesGiven(rs.getInt(\"votes\"));\n\t\t\t}\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.KarmaDAO#getMostRatedUserByPeriod(int, java.util.Date, java.util.Date,\n\t *      String)\n\t */\n\tpublic List getMostRatedUserByPeriod(int start, Date firstPeriod, Date lastPeriod, String orderField)\n\t{\n\t\tString sql = SystemGlobals.getSql(\"KarmaModel.getMostRatedUserByPeriod\");\n\t\tsql += \" ORDER BY \" + orderField + \" DESC\";\n\n\t\treturn this.getMostRatedUserByPeriod(sql, firstPeriod, lastPeriod);\n\t}\n\n\t/**\n\t * \n\t * @param sql String\n\t * @param firstPeriod Date\n\t * @param lastPeriod Date\n\t * @return List\n\t */\n\tprotected List getMostRatedUserByPeriod(String sql, Date firstPeriod, Date lastPeriod)\n\t{\n\t\tif (firstPeriod.after(lastPeriod)) {\n\t\t\tthrow new DatabaseException(\"First Date needs to be before the Last Date\");\n\t\t}\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\t\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(sql);\n\t\t\tp.setTimestamp(1, new Timestamp(firstPeriod.getTime()));\n\t\t\tp.setTimestamp(2, new Timestamp(lastPeriod.getTime()));\n\n\t\t\trs = p.executeQuery();\n\t\t\treturn this.fillUser(rs);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tprotected List fillUser(ResultSet rs) throws SQLException\n\t{\n\t\tList usersAndPoints = new ArrayList();\n\t\tKarmaStatus karma = null;\n\t\twhile (rs.next()) {\n\t\t\tUser user = new User();\n\t\t\tkarma = new KarmaStatus();\n\t\t\tkarma.setTotalPoints(rs.getInt(\"total\"));\n\t\t\tkarma.setVotesReceived(rs.getInt(\"votes_received\"));\n\t\t\tkarma.setKarmaPoints(rs.getDouble(\"user_karma\"));\n\t\t\tkarma.setVotesGiven(rs.getInt(\"votes_given\"));\n\t\t\tuser.setUsername(rs.getString(\"username\"));\n\t\t\tuser.setId(rs.getInt(\"user_id\"));\n\t\t\tuser.setKarma(karma);\n\t\t\tusersAndPoints.add(user);\n\t\t}\n\t\treturn usersAndPoints;\n\t}\n}",
  "metadata": {
    "fileId": "GenericKarmaDAO_java_chunk_2",
    "fileName": "GenericKarmaDAO.java",
    "filePath": "src/net/jforum/dao/generic/GenericKarmaDAO.java"
  }
}