{
  "pageContent": "File Path: src/net/jforum/dao/generic/GenericBannerDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms,\n * with or without modification, are permitted provided\n * that the following conditions are met:\n *\n * 1) Redistributions of source code must retain the above\n * copyright notice, this list of conditions and the\n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the\n * above copyright notice, this list of conditions and\n * the following disclaimer in the documentation and/or\n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor\n * the names of its contributors may be used to endorse\n * or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT\n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING,\n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL\n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\n * IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n *\n * This file creation date: Mar 6, 2003 / 11:09:34 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao.generic;\n\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.entities.Banner;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.util.DbUtils;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * @author Samuel Yung\n * @version $Id: GenericBannerDAO.java,v 1.9 2006/08/23 02:13:41 rafaelsteil Exp $\n */\npublic class GenericBannerDAO extends AutoKeys implements net.jforum.dao.BannerDAO\n{\n\tpublic Banner selectById(int bannerId)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\tBanner b = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"BannerDAO.selectById\"));\n\t\t\tp.setInt(1, bannerId);\n\n\t\t\trs = p.executeQuery();\n\n\t\t\tb = new Banner();\n\t\t\tif (rs.next()) {\n\t\t\t\tb = this.getBanner(rs);\n\t\t\t}\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tpublic List selectAll()\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"BannerDAO.selectAll\"));\n\t\t\tList l = new ArrayList();\n\n\t\t\trs = p.executeQuery();\n\t\t\twhile (rs.next()) {\n\t\t\t\tl.add(this.getBanner(rs));\n\t\t\t}\n\n\t\t\treturn l;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tprotected Banner getBanner(ResultSet rs) throws SQLException\n\t{\n\t\tBanner b = new Banner();\n\n\t\tb.setId(rs.getInt(\"banner_id\"));\n\t\tb.setName(rs.getString(\"banner_name\"));\n\t\tb.setPlacement(rs.getInt(\"banner_placement\"));\n\t\tb.setDescription(rs.getString(\"banner_description\"));\n\t\tb.setClicks(rs.getInt(\"banner_clicks\"));\n\t\tb.setViews(rs.getInt(\"banner_views\"));\n\t\tb.setUrl(rs.getString(\"banner_url\"));\n\t\tb.setWeight(rs.getInt(\"banner_weight\"));\n\t\tb.setActive(rs.getInt(\"banner_active\") == 1);\n\t\tb.setComment(rs.getString(\"banner_comment\"));\n\t\tb.setType(rs.getInt(\"banner_type\"));\n\t\tb.setWidth(rs.getInt(\"banner_width\"));\n\t\tb.setHeight(rs.getInt(\"banner_height\"));\n\n\t\treturn b;\n\t}\n\n\tpublic boolean canDelete(int bannerId)\n\t{\n\t\tboolean result = true;\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"BannerDAO.canDelete\"));\n\t\t\tp.setInt(1, bannerId);\n\n\t\t\trs = p.executeQuery();\n\t\t\tif (!rs.next() || rs.getInt(\"total\") < 1) {\n\t\t\t\tresult = false;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tpublic void delete(int bannerId)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"BannerDAO.delete\"));\n\t\t\tp.setInt(1, bannerId);\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\tpublic void update(Banner banner)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"BannerDAO.update\"));\n\t\t\tsetBannerParam(p, banner);\n\t\t\tp.setInt(13, banner.getId());\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\tpublic int addNew(Banner banner)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = this.getStatementForAutoKeys(\"BannerDAO.addNew\");\n\t\t\tsetBannerParam(p, banner);\n\t\t\tint id = this.executeAutoKeysQuery(p);\n\n\t\t\tbanner.setId(id);\n\t\t\treturn id;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\tprotected void setBannerParam(PreparedStatement p, Banner b) throws SQLException\n\t{\n\t\tp.setString(1, b.getName());\n\t\tp.setInt(2, b.getPlacement());\n\t\tp.setString(3, b.getDescription());\n\t\tp.setInt(4, b.getClicks());\n\t\tp.setInt(5, b.getViews());\n\t\tp.setString(6, b.getUrl());\n\t\tp.setInt(7, b.getWeight());\n\t\tp.setInt(8, b.isActive() ? 1 : 0);\n\t\tp.setString(9, b.getComment());\n\t\tp.setInt(10, b.getType());\n\t\tp.setInt(11, b.getWidth());\n\t\tp.setInt(12, b.getHeight());\n\t}\n\n\tpublic List selectActiveBannerByPlacement(int placement)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"BannerDAO.selectActiveBannerByPlacement\"));\n\t\t\tp.setInt(1, placement);\n\n\t\t\tList l = new ArrayList();\n\n\t\t\trs = p.executeQuery();\n\t\t\twhile (rs.next()) {\n\t\t\t\tl.add(this.getBanner(rs));\n\t\t\t}\n\n\t\t\treturn l;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n}",
  "metadata": {
    "fileId": "GenericBannerDAO_java_chunk_1",
    "fileName": "GenericBannerDAO.java",
    "filePath": "src/net/jforum/dao/generic/GenericBannerDAO.java"
  }
}