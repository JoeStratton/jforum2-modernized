{
  "pageContent": "File Path: src/net/jforum/dao/generic/GenericGroupDAO.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * This file creation date: Mar 3, 2003 / 1:35:30 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.dao.generic;\n\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.dao.DataAccessDriver;\nimport net.jforum.dao.GroupSecurityDAO;\nimport net.jforum.entities.Group;\nimport net.jforum.exceptions.DatabaseException;\nimport net.jforum.util.DbUtils;\nimport net.jforum.util.preferences.SystemGlobals;\n\n/**\n * @author Rafael Steil\n * @version $Id: GenericGroupDAO.java,v 1.8 2007/08/24 23:11:35 rafaelsteil Exp $\n */\npublic class GenericGroupDAO implements net.jforum.dao.GroupDAO\n{\n\t/**\n\t * @see net.jforum.dao.GroupDAO#selectById(int)\n\t */\n\tpublic Group selectById(int groupId)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"GroupModel.selectById\"));\n\t\t\tp.setInt(1, groupId);\n\n\t\t\trs = p.executeQuery();\n\n\t\t\tGroup g = new Group();\n\n\t\t\tif (rs.next()) {\n\t\t\t\tg = this.getGroup(rs);\n\t\t\t}\n\n\t\t\treturn g;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.GroupDAO#canDelete(int)\n\t */\n\tpublic boolean canDelete(int groupId)\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"GroupModel.canDelete\"));\n\t\t\tp.setInt(1, groupId);\n\n\t\t\tboolean status = false;\n\n\t\t\trs = p.executeQuery();\n\t\t\tif (!rs.next() || rs.getInt(\"total\") < 1) {\n\t\t\t\tstatus = true;\n\t\t\t}\n\n\t\t\treturn status;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.GroupDAO#delete(int)\n\t */\n\tpublic void delete(int groupId)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"GroupModel.delete\"));\n\t\t\tp.setInt(1, groupId);\n\n\t\t\tp.executeUpdate();\n\t\t\t\n\t\t\tGroupSecurityDAO securityDao = DataAccessDriver.getInstance().newGroupSecurityDAO();\n\t\t\tsecurityDao.deleteAllRoles(groupId);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.GroupDAO#update(net.jforum.entities.Group)\n\t */\n\tpublic void update(Group group)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"GroupModel.update\"));\n\t\t\tp.setString(1, group.getName());\n\t\t\tp.setInt(2, group.getParentId());\n\t\t\tp.setString(3, group.getDescription());\n\t\t\tp.setInt(4, group.getId());\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.GroupDAO#addNew(net.jforum.entities.Group)\n\t */\n\tpublic void addNew(Group group)\n\t{\n\t\tPreparedStatement p = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"GroupModel.addNew\"));\n\t\t\tp.setString(1, group.getName());\n\t\t\tp.setString(2, group.getDescription());\n\t\t\tp.setInt(3, group.getParentId());\n\n\t\t\tp.executeUpdate();\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(p);\n\t\t}\n\t}\n\n\t/**\n\t * @see net.jforum.dao.GroupDAO#selectUsersIds(int)\n\t */\n\tpublic List selectUsersIds(int groupId)\n\t{\n\t\tArrayList l = new ArrayList();\n\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(\n\t\t\t\t\tSystemGlobals.getSql(\"GroupModel.selectUsersIds\"));\n\t\t\tp.setInt(1, groupId);\n\n\t\t\trs = p.executeQuery();\n\t\t\twhile (rs.next()) {\n\t\t\t\tl.add(new Integer(rs.getInt(\"user_id\")));\n\t\t\t}\n\n\t\t\treturn l;\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n\n\tprotected List fillGroups(ResultSet rs) throws SQLException\n\t{\n\t\tList l = new ArrayList();\n\n\t\twhile (rs.next()) {\n\t\t\tl.add(this.getGroup(rs));\n\t\t}\n\n\t\treturn l;\n\t}\n\n\tprotected Group getGroup(ResultSet rs) throws SQLException\n\t{\n\t\tGroup g = new Group();\n\n\t\tg.setId(rs.getInt(\"group_id\"));\n\t\tg.setDescription(rs.getString(\"group_description\"));\n\t\tg.setName(rs.getString(\"group_name\"));\n\t\tg.setParentId(rs.getInt(\"parent_id\"));\n\n\t\treturn g;\n\t}\n\n\t/**\n\t * @see net.jforum.dao.GroupDAO#selectAll()\n\t */\n\tpublic List selectAll()\n\t{\n\t\tPreparedStatement p = null;\n\t\tResultSet rs = null;\n\t\ttry {\n\t\t\tp = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql(\"GroupModel.selectAll\"));\n\t\t\trs = p.executeQuery();\n\n\t\t\treturn this.fillGroups(rs);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new DatabaseException(e);\n\t\t}\n\t\tfinally {\n\t\t\tDbUtils.close(rs, p);\n\t\t}\n\t}\n}",
  "metadata": {
    "fileId": "GenericGroupDAO_java_chunk_1",
    "fileName": "GenericGroupDAO.java",
    "filePath": "src/net/jforum/dao/generic/GenericGroupDAO.java"
  }
}