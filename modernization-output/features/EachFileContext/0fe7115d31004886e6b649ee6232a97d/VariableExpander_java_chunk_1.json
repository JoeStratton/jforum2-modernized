{
  "pageContent": "File Path: src/net/jforum/util/preferences/VariableExpander.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on May 31, 2004 by pieter\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.util.preferences;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n/**\n * @author Pieter\n * @author Rafael Steil\n * @version $Id: VariableExpander.java,v 1.6 2006/08/20 22:47:37 rafaelsteil Exp $\n */\npublic class VariableExpander\n{\n\tprivate VariableStore variables;\n\n\tprivate String pre;\n\tprivate String post;\n\n\tprivate Map cache;\n\n\tpublic VariableExpander(VariableStore variables, String pre, String post)\n\t{\n\t\tthis.variables = variables;\n\t\tthis.pre = pre;\n\t\tthis.post = post;\n\t\tcache = new HashMap();\n\t}\n\n\tpublic void clearCache()\n\t{\n\t\tcache.clear();\n\t}\n\t\n\tpublic String expandVariables(String source)\n\t{\n\t\tString result = (String)this.cache.get(source);\n\t\t\n\t\tif (source == null || result != null) {\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\tint fIndex = source.indexOf(this.pre);\n\t\t\n\t\tif (fIndex == -1) {\n\t\t\treturn source;\n\t\t}\n\t\t\n\t\tStringBuffer sb = new StringBuffer(source);\n\t\t\n\t\twhile (fIndex > -1) {\n\t\t\tint lIndex = sb.indexOf(this.post);\n\t\t\t\n\t\t\tint start = fIndex + this.pre.length();\n\t\t\t\n\t\t\tif (fIndex == 0) {\n\t\t\t\tString varName = sb.substring(start, start + lIndex - this.pre.length());\n\t\t\t\tsb.replace(fIndex, fIndex + lIndex + 1, this.variables.getVariableValue(varName));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString varName = sb.substring(start, lIndex);\n\t\t\t\tsb.replace(fIndex, lIndex + 1, this.variables.getVariableValue(varName));\n\t\t\t}\n\t\t\t\n\t\t\tfIndex = sb.indexOf(this.pre);\n\t\t}\n\t\t\n\t\tresult = sb.toString();\n\t\t\n\t\tthis.cache.put(source, result);\n\t\t\n\t\treturn result;\n\t}\n}",
  "metadata": {
    "fileId": "VariableExpander_java_chunk_1",
    "fileName": "VariableExpander.java",
    "filePath": "src/net/jforum/util/preferences/VariableExpander.java"
  }
}