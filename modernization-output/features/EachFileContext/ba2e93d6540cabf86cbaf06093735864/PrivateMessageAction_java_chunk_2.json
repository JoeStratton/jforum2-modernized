{
  "pageContent": "File Path: src/net/jforum/view/forum/PrivateMessageAction.java\n\n Original Content: public class PrivateMessageAction extends Command\n{\n\tpublic void inbox()\n\t{\n\t\tif (!SessionFacade.isLogged()) {\n\t\t\tthis.setTemplateName(ViewCommon.contextToLogin());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tUser user = new User();\n\t\tuser.setId(SessionFacade.getUserSession().getUserId());\n\t\t\n\t\tList pmList = DataAccessDriver.getInstance().newPrivateMessageDAO().selectFromInbox(user);\n\n\t\tthis.setTemplateName(TemplateKeys.PM_INBOX);\n\t\tthis.context.put(\"inbox\", true);\n\t\tthis.context.put(\"pmList\", pmList);\n\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"ForumBase.privateMessages\")+\" \"+I18n.getMessage(\"PrivateMessage.inbox\"));\n\t\tthis.putTypes();\t\t\n\t}\n\t\n\tpublic void sentbox()\n\t{\n\t\tif (!SessionFacade.isLogged()) {\n\t\t\tthis.setTemplateName(ViewCommon.contextToLogin());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tUser user = new User();\n\t\tuser.setId(SessionFacade.getUserSession().getUserId());\n\t\t\n\t\tList pmList = DataAccessDriver.getInstance().newPrivateMessageDAO().selectFromSent(user);\n\n\t\tthis.context.put(\"sentbox\", true);\n\t\tthis.context.put(\"pmList\", pmList);\n\t\tthis.setTemplateName(TemplateKeys.PM_SENTBOX);\n\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"ForumBase.privateMessages\")+\" \"+I18n.getMessage(\"PrivateMessage.sentbox\"));\n\t\tthis.putTypes();\n\t}\n\t\n\tprivate void putTypes()\n\t{\n\t\tthis.context.put(\"NEW\", new Integer(PrivateMessageType.NEW));\n\t\tthis.context.put(\"READ\", new Integer(PrivateMessageType.READ));\n\t\tthis.context.put(\"UNREAD\", new Integer(PrivateMessageType.UNREAD));\n\t}\n\t\n\tpublic void send() \n\t{\n\t\tif (!SessionFacade.isLogged()) {\n\t\t\tthis.setTemplateName(ViewCommon.contextToLogin());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tUser user = DataAccessDriver.getInstance().newUserDAO().selectById(\n\t\t\tSessionFacade.getUserSession().getUserId());\n\t\t\n\t\tViewCommon.prepareUserSignature(user);\n\n\t\tthis.sendFormCommon(user);\n\t}\n\t\n\tpublic void sendTo()\n\t{\n\t\tif (!SessionFacade.isLogged()) {\n\t\t\tthis.setTemplateName(ViewCommon.contextToLogin());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tUser user = DataAccessDriver.getInstance().newUserDAO().selectById(\n\t\t\t\tSessionFacade.getUserSession().getUserId());\n\n\t\tint userId = this.request.getIntParameter(\"user_id\");\n\t\t\n\t\tif (userId > 0){\n\t\t\tUser recipient = DataAccessDriver.getInstance().newUserDAO().selectById(userId);\n\t\t\t\n\t\t\tthis.context.put(\"pmRecipient\", recipient);\n\t\t\tthis.context.put(\"toUserId\", new Integer(recipient.getId()));\n\t\t\tthis.context.put(\"toUsername\", recipient.getUsername());\n\t\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"PrivateMessage.title\") \n\t\t\t\t+ \" \" + I18n.getMessage(\"PrivateMessage.to\") \n\t\t\t\t+ \" \" + recipient.getUsername());\n\t\t}\n\n\t\tthis.sendFormCommon(user);\n\t}\n\t\n\tprivate void sendFormCommon(User user)\n\t{\n\t\tthis.setTemplateName(TemplateKeys.PM_SENDFORM);\n\t\t\n\t\tthis.context.put(\"user\", user);\n\t\tthis.context.put(\"moduleName\", \"pm\");\n\t\tthis.context.put(\"action\", \"sendSave\");\n\t\tthis.context.put(\"htmlAllowed\", true);\n\t\tthis.context.put(\"attachmentsEnabled\", false);\n\t\tthis.context.put(\"maxAttachments\", SystemGlobals.getValue(ConfigKeys.ATTACHMENTS_MAX_POST));\n\t\tthis.context.put(\"attachmentsEnabled\", false);\n\t\tthis.context.put(\"maxAttachmentsSize\", new Integer(0));\n\t\tthis.context.put(\"moderationLoggingEnabled\", false);\n\t\tthis.context.put(\"smilies\", SmiliesRepository.getSmilies());\n\t}\n\t\n\tpublic void sendSave()\n\t{\n\t\tif (!SessionFacade.isLogged()) {\n\t\t\tthis.setTemplateName(ViewCommon.contextToLogin());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tUserDAO userDao = DataAccessDriver.getInstance().newUserDAO();\n\t\t\n\t\tString toUserIdStr = this.request.getParameter(\"toUserId\");\n\t\tString toUsername = this.request.getParameter(\"toUsername\");\n\n\t\tint toUserId = -1;\n\t\t\n\t\t// If we don't have an user id, then probably the user\n\t\t// inserted the username by hand in the form's field\n\t\tif (toUserIdStr == null || \"\".equals(toUserIdStr.trim())) {\n\t\t\tList l = userDao.findByName(toUsername, true);\n\t\t\t\n\t\t\tif (l.size() > 0) {\n\t\t\t\tUser u = (User)l.get(0);\n\t\t\t\ttoUserId = u.getId();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ttoUserId = Integer.parseInt(toUserIdStr);\n\t\t}\n\t\t\n\t\t// We failed to get the user id?\n\t\tif (toUserId == -1) {\n\t\t\tthis.setTemplateName(TemplateKeys.PM_SENDSAVE_USER_NOTFOUND);\n\t\t\tthis.context.put(\"message\", I18n.getMessage(\"PrivateMessage.userIdNotFound\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tPrivateMessage pm = new PrivateMessage();\n\t\tpm.setPost(PostCommon.fillPostFromRequest());\n\t\t\n\t\t// Sender\n\t\tUser fromUser = new User();\n\t\tfromUser.setId(SessionFacade.getUserSession().getUserId());\n\t\tpm.setFromUser(fromUser);\n\t\t\n\t\t// Recipient\n\t\tUser toUser = userDao.selectById(toUserId);\n\t\tpm.setToUser(toUser);\n\t\t\n\t\tboolean preview = (\"1\".equals(this.request.getParameter(\"preview\")));\n\n\t\tif (!preview) {\n\t\t\tDataAccessDriver.getInstance().newPrivateMessageDAO().send(pm);\n\t\t\t\n\t\t\tthis.setTemplateName(TemplateKeys.PM_SENDSAVE);\n\t\t\tthis.context.put(\"message\", I18n.getMessage(\"PrivateMessage.messageSent\", \n\t\t\t\tnew String[] { this.request.getContextPath() \n\t\t\t\t\t+ \"/pm/inbox\"\n\t\t\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION)}));\n\t\t\t\n\t\t\t// If the target user if in the forum, then increments its \n\t\t\t// private messate count\n\t\t\tString sid = SessionFacade.isUserInSession(toUserId);\n\t\t\tif (sid != null) {\n\t\t\t\tUserSession us = SessionFacade.getUserSession(sid);\n\t\t\t\tus.setPrivateMessages(us.getPrivateMessages() + 1);\n\t\t\t}\n\t\t\t\n\t\t\tif (toUser.getEmail() != null \n\t\t\t\t&& toUser.getEmail().trim().length() > 0\n\t\t\t\t&& SystemGlobals.getBoolValue(ConfigKeys.MAIL_NOTIFY_ANSWERS)) {\n\t\t\t\tExecutor.execute(new EmailSenderTask(new PrivateMessageSpammer(toUser)));\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.context.put(\"preview\", true);\n\t\t\tthis.context.put(\"post\", pm.getPost());\n\t\t\t\n\t\t\tPost postPreview = new Post(pm.getPost());\n\t\t\tthis.context.put(\"postPreview\", PostCommon.preparePostForDisplay(postPreview));\n\t\t\tthis.context.put(\"pm\", pm);\n\n\t\t\tthis.send();\n\t\t}\n\t}\n\t\n\tpublic void findUser()\n\t{\n\t\tboolean showResult = false;\n\t\tString username = this.request.getParameter(\"username\");\n\n\t\tif (username != null && !username.equals(\"\")) {\n\t\t\tList namesList = DataAccessDriver.getInstance().newUserDAO().findByName(username, false);\n\t\t\tthis.context.put(\"namesList\", namesList);\n\t\t\tshowResult = true;\n\t\t}\n\n\t\tthis.setTemplateName(TemplateKeys.PM_FIND_USER);\n\t\t\n\t\tthis.context.put(\"username\", username);\n\t\tthis.context.put(\"showResult\", showResult);\n\t}\n\t\n\tpublic void read()\n\t{\n\t\tif (!SessionFacade.isLogged()) {\n\t\t\tthis.setTemplateName(ViewCommon.contextToLogin());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tint id = this.request.getIntParameter(\"id\");\n\t\t\n\t\tPrivateMessage pm = new PrivateMessage();\n\t\tpm.setId(id);\n\t\t\n\t\tpm = DataAccessDriver.getInstance().newPrivateMessageDAO().selectById(pm);\n\t\t\n\t\t// Don't allow the read of messages that don't belongs\n\t\t// to the current user\n\t\tUserSession us = SessionFacade.getUserSession();\n\t\tint userId = us.getUserId();\n\t\t\n\t\tif (pm.getToUser().getId() == userId || pm.getFromUser().getId() == userId) {\n\t\t\tpm.getPost().setText(PostCommon.preparePostForDisplay(pm.getPost()).getText());\n\t\t\t\n\t\t\t// Update the message status, if needed\n\t\t\tif (pm.getType() == PrivateMessageType.NEW) {\n\t\t\t\tpm.setType(PrivateMessageType.READ);\n\t\t\t\tDataAccessDriver.getInstance().newPrivateMessageDAO().updateType(pm);\n\t\t\t\t\n\t\t\t\tint totalMessages = us.getPrivateMessages();",
  "metadata": {
    "fileId": "PrivateMessageAction_java_chunk_2",
    "fileName": "PrivateMessageAction.java",
    "filePath": "src/net/jforum/view/forum/PrivateMessageAction.java"
  }
}