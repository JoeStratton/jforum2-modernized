{
  "pageContent": "File Path: src/net/jforum/view/forum/ModerationHelper.java\n\n Original Content: public class ModerationHelper \n{\n\tprivate static Logger logger = Logger.getLogger(ModerationHelper.class);\n\t\n\tpublic static final int SUCCESS = 1;\n\tpublic static final int FAILURE = 2;\n\tpublic static final int IGNORE = 3;\n\t\n\tpublic int doModeration(String returnUrl)\n\t{\n\t\tint status = FAILURE;\n\n\t\tif (SecurityRepository.canAccess(SecurityConstants.PERM_MODERATION)) {\n\t\t\t// Deleting topics\n\t\t\tRequestContext request = JForumExecutionContext.getRequest();\n\t\t\t\n\t\t\tif (request.getParameter(\"topicRemove\") != null) {\n\t\t\t\tif (SecurityRepository.canAccess(SecurityConstants.PERM_MODERATION_POST_REMOVE)) {\n\t\t\t\t\tthis.removeTopics();\n\t\t\t\t\t\n\t\t\t\t\tstatus = SUCCESS;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (request.getParameter(\"topicMove\") != null) {\n\t\t\t\tif (SecurityRepository.canAccess(SecurityConstants.PERM_MODERATION_TOPIC_MOVE)) {\n\t\t\t\t\tthis.moveTopics();\n\t\t\t\t\t\n\t\t\t\t\tstatus = IGNORE;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (request.getParameter(\"topicLock\") != null) {\n\t\t\t\tif (SecurityRepository.canAccess(SecurityConstants.PERM_MODERATION_TOPIC_LOCK_UNLOCK)) {\n\t\t\t\t\tthis.lockUnlockTopics(Topic.STATUS_LOCKED);\n\t\t\t\t\t\n\t\t\t\t\tstatus = SUCCESS;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (request.getParameter(\"topicUnlock\") != null) {\n\t\t\t\tif (SecurityRepository.canAccess(SecurityConstants.PERM_MODERATION_TOPIC_LOCK_UNLOCK)) {\n\t\t\t\t\tthis.lockUnlockTopics(Topic.STATUS_UNLOCKED);\n\t\t\t\t\t\n\t\t\t\t\tstatus = SUCCESS;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (status == ModerationHelper.FAILURE) {\n\t\t\tthis.denied();\n\t\t}\n\t\telse if (status == ModerationHelper.SUCCESS && returnUrl != null) {\n\t\t\tJForumExecutionContext.setRedirect(returnUrl);\n\t\t}\n\t\t\n\t\treturn status;\n\t}\n\t\n\tpublic void saveModerationLog(ModerationLog log)\n\t{\n\t\tModerationLogDAO dao = DataAccessDriver.getInstance().newModerationLogDAO();\n\t\tdao.add(log);\n\t}\n\t\n\tpublic ModerationLog buildModerationLogFromRequest()\n\t{\n\t\tRequestContext request = JForumExecutionContext.getRequest();\n\t\t\n\t\tModerationLog log = new ModerationLog();\n\t\t\n\t\tUser user = new User();\n\t\tuser.setId(SessionFacade.getUserSession().getUserId());\n\t\tlog.setUser(user);\n\t\t\n\t\tlog.setDescription(request.getParameter(\"log_description\"));\n\t\tlog.setOriginalMessage(request.getParameter(\"log_original_message\"));\n\t\tlog.setType(request.getIntParameter(\"log_type\"));\n\t\t\n\t\tif (request.getParameter(\"post_id\") != null) {\n\t\t\tlog.setPostId(request.getIntParameter(\"post_id\"));\n\t\t}\n\t\t\n\t\tString[] values = request.getParameterValues(\"topic_id\");\n\t\t\n\t\tif (values != null && values.length == 1) {\n\t\t\tlog.setTopicId(request.getIntParameter(\"topic_id\"));\n\t\t}\n\t\t\n\t\treturn log;\n\t}\n\t\n\tpublic int doModeration() \n\t{\n\t\treturn this.doModeration(null);\n\t}\n\t\n\tprivate void removeTopics()\n\t{\n\t\tString[] topics = JForumExecutionContext.getRequest().getParameterValues(\"topic_id\");\n\t\t\n\t\tList forumsList = new ArrayList();\n\t\tTopicDAO tm = DataAccessDriver.getInstance().newTopicDAO();\n\t\t\n\t\tList topicsToDelete = new ArrayList();\n\t\t\n\t\tif (topics != null && topics.length > 0) {\n\t\t\tModerationLog log = this.buildModerationLogFromRequest();\n\t\t\t\n\t\t\tfor (int i = 0; i < topics.length; i++) {\n\t\t\t\tTopic t = tm.selectRaw(Integer.parseInt(topics[i]));\n\t\t\t\t\n\t\t\t\tlog.setTopicId(t.getId());\n\t\t\t\tlog.setPosterUser(t.getPostedBy());\n\t\t\t\t\n\t\t\t\tthis.saveModerationLog(log);\n\t\t\t\t\n\t\t\t\tif (!forumsList.contains(new Integer(t.getForumId()))) {\n\t\t\t\t\tforumsList.add(new Integer(t.getForumId()));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttopicsToDelete.add(t);\n\t\t\t\tPostRepository.clearCache(t.getId());\n\t\t\t}\n\t\t\t\n\t\t\ttm.deleteTopics(topicsToDelete, false);\n\t\t\t\n\t\t\tForumDAO fm = DataAccessDriver.getInstance().newForumDAO();\n\t\t\tTopicRepository.loadMostRecentTopics();\n\t\t\t\n\t\t\t// Reload changed forums\n\t\t\tfor (Iterator iter = forumsList.iterator(); iter.hasNext(); ) {\n\t\t\t\tint forumId = ((Integer)iter.next()).intValue();\n\n\t\t\t\tTopicRepository.clearCache(forumId);\n\t\t\t\t\n\t\t\t\tint postId = fm.getMaxPostId(forumId);\n\t\t\t\t\n\t\t\t\tif (postId > -1) {\n\t\t\t\t\tfm.setLastPost(forumId, postId);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlogger.warn(\"Could not find last post id for forum \" + forumId);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tForumRepository.reloadForum(forumId);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate void lockUnlockTopics(int status)\n\t{\n\t\tString[] topics = JForumExecutionContext.getRequest().getParameterValues(\"topic_id\");\n\t\t\n\t\tif (topics != null && topics.length > 0) {\n\t\t\tint[] ids = new int[topics.length];\n\t\t\t\n\t\t\tModerationLog log = this.buildModerationLogFromRequest();\n\n\t\t\tfor (int i = 0; i < topics.length; i++) {\n\t\t\t\tids[i] = Integer.parseInt(topics[i]);\n\t\t\t\tlog.setTopicId(ids[i]);\n\t\t\t\tthis.saveModerationLog(log);\n\t\t\t}\n\t\t\t\n\t\t\tDataAccessDriver.getInstance().newTopicDAO().lockUnlock(ids, status);\n\t\t\t\n\t\t\t// Clear the cache\n\t\t\tTopic t = DataAccessDriver.getInstance().newTopicDAO().selectById(ids[0]);\n\t\t\tTopicRepository.clearCache(t.getForumId());\n\t\t}\n\t}\n\t\n\tprivate void moveTopics()\n\t{\n\t\tSimpleHash context = JForumExecutionContext.getTemplateContext();\n\t\t\n\t\tcontext.put(\"persistData\", JForumExecutionContext.getRequest().getParameter(\"persistData\"));\n\t\tcontext.put(\"allCategories\", ForumCommon.getAllCategoriesAndForums(false));\n\t\t\n\t\tString[] topics = JForumExecutionContext.getRequest().getParameterValues(\"topic_id\");\n\t\t\n\t\tif (topics.length > 0) {\n\t\t\t// If forum_id is null, get from the database\n\t\t\tString forumId = JForumExecutionContext.getRequest().getParameter(\"forum_id\");\n\t\t\t\n\t\t\tif (forumId == null) {\n\t\t\t\tint topicId = Integer.parseInt(topics[0]);\n\t\t\t\t\n\t\t\t\tTopic topic = TopicRepository.getTopic(new Topic(topicId));\n\t\t\t\t\n\t\t\t\tif (topic == null) {\n\t\t\t\t\ttopic = DataAccessDriver.getInstance().newTopicDAO().selectRaw(topicId);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tforumId = Integer.toString(topic.getForumId());\n\t\t\t}\n\t\t\t\n\t\t\tcontext.put(\"forum_id\", forumId);\n\t\t\t\n\t\t\tStringBuffer sb = new StringBuffer(128);\n\t\t\t\n\t\t\tfor (int i = 0; i < topics.length - 1; i++) {\n\t\t\t\tsb.append(topics[i]).append(\",\");\n\t\t\t}\n\t\t\t\n\t\t\tsb.append(topics[topics.length - 1]);\n\t\t\t\n\t\t\tcontext.put(\"topics\", sb.toString());\n\t\t}\n\t}\n\t\n\tpublic int moveTopicsSave(String successUrl)\n\t{\n\t\tint status = SUCCESS;\n\t\t\n\t\tif (!SecurityRepository.canAccess(SecurityConstants.PERM_MODERATION_TOPIC_MOVE)) {\n\t\t\tstatus = FAILURE;\n\t\t}\n\t\telse {\n\t\t\tRequestContext request = JForumExecutionContext.getRequest();\n\t\t\tString topics = request.getParameter(\"topics\");\n\t\t\t\n\t\t\tif (topics != null) {\n\t\t\t\tint fromForumId = Integer.parseInt(request.getParameter(\"forum_id\"));\n\t\t\t\tint toForumId = Integer.parseInt(request.getParameter(\"to_forum\"));\n\t\t\t\t\n\t\t\t\tString[] topicList = topics.split(\",\");\n\t\t\t\t\n\t\t\t\tDataAccessDriver.getInstance().newForumDAO().moveTopics(topicList, fromForumId, toForumId);\n\t\t\t\t\n\t\t\t\tModerationLog log = this.buildModerationLogFromRequest();\n\t\t\t\t\n\t\t\t\tfor (int i = 0; i < topicList.length; i++) {\n\t\t\t\t\tint topicId = Integer.parseInt(topicList[i]);\n\t\t\t\t\tlog.setTopicId(topicId);\n\t\t\t\t\tthis.saveModerationLog(log);\n\t\t\t\t}\n\n\t\t\t\tForumRepository.reloadForum(fromForumId);\n\t\t\t\tForumRepository.reloadForum(toForumId);\n\t\t\t\t\n\t\t\t\tTopicRepository.clearCache(fromForumId);\n\t\t\t\tTopicRepository.clearCache(toForumId);\n\t\t\t\t\n\t\t\t\tTopicRepository.loadMostRecentTopics();\n\t\t\t\tTopicRepository.loadHottestTopics();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (status == FAILURE) {\n\t\t\tthis.denied();\n\t\t}\n\t\telse {\n\t\t\tthis.moderationDone(successUrl);\n\t\t}\n\t\t\n\t\treturn status;\n\t}\n\t\n\tpublic String moderationDone(String redirectUrl)\n\t{\n\t\tJForumExecutionContext.getRequest().setAttribute(\"template\", TemplateKeys.MODERATION_DONE);\n\t\tJForumExecutionContext.getTemplateContext().put(\"message\", I18n.getMessage(\"Moderation.ModerationDone\", new String[] { redirectUrl }));\n\t\t\n\t\treturn TemplateKeys.MODERATION_DONE;\n\t}\n\t\n\tpublic void denied()\n\t{\n\t\tthis.denied(I18n.getMessage(\"Moderation.Denied\"));\n\t}\n\t\n\tpublic void denied(String message)\n\t{\n\t\tJForumExecutionContext.getRequest().setAttribute(\"template\", TemplateKeys.MODERATION_DENIED);\n\t\tJForumExecutionContext.getTemplateContext().put(\"message\", message);\t\t\n\t}\n}",
  "metadata": {
    "fileId": "ModerationHelper_java_chunk_2",
    "fileName": "ModerationHelper.java",
    "filePath": "src/net/jforum/view/forum/ModerationHelper.java"
  }
}