{
  "pageContent": "File Path: src/net/jforum/view/forum/UserAction.java\n\n Original Content: public class UserAction extends Command \n{\n\tprivate static final Logger logger = Logger.getLogger(UserAction.class);\n\t\n\tprivate boolean canEdit()\n\t{\n\t\tint tmpId = SessionFacade.getUserSession().getUserId();\n\t\tboolean canEdit = SessionFacade.isLogged() && tmpId == this.request.getIntParameter(\"user_id\");\n\t\t\n\t\tif (!canEdit) {\n\t\t\tthis.profile();\n\t\t}\n\t\t\n\t\treturn canEdit;\n\t}\n\t\n\tpublic void edit()\n\t{\n\t\tif (this.canEdit()) {\n\t\t\tint userId = this.request.getIntParameter(\"user_id\");\n\t\t\tUserDAO um = DataAccessDriver.getInstance().newUserDAO();\n\t\t\tUser u = um.selectById(userId);\n\n\t\t\tthis.context.put(\"u\", u);\n\t\t\tthis.context.put(\"action\", \"editSave\");\n\t\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"UserProfile.profileFor\") + \" \" + u.getUsername());\n\t\t\tthis.context.put(\"avatarAllowExternalUrl\", SystemGlobals.getBoolValue(ConfigKeys.AVATAR_ALLOW_EXTERNAL_URL));\n\t\t\tthis.setTemplateName(TemplateKeys.USER_EDIT);\n\t\t} \n\t}\n\n\tpublic void editDone()\n\t{\n\t\tthis.context.put(\"editDone\", true);\n\t\tthis.edit();\n\t}\n\n\tpublic void editSave()\n\t{\n\t\tif (this.canEdit()) {\n\t\t\tint userId = this.request.getIntParameter(\"user_id\");\n\t\t\tList warns = UserCommon.saveUser(userId);\n\t\n\t\t\tif (warns.size() > 0) {\n\t\t\t\tthis.context.put(\"warns\", warns);\n\t\t\t\tthis.edit();\n\t\t\t} \n\t\t\telse {\n\t\t\t\tJForumExecutionContext.setRedirect(this.request.getContextPath()\n\t\t\t\t\t+ \"/user/editDone/\" + userId\n\t\t\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION));\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate void registrationDisabled()\n\t{\n\t\tthis.setTemplateName(TemplateKeys.USER_REGISTRATION_DISABLED);\n\t\tthis.context.put(\"message\", I18n.getMessage(\"User.registrationDisabled\"));\n\t}\n\t\n\tprivate void insert(boolean hasErrors)\n\t{\n\t\tint userId = SessionFacade.getUserSession().getUserId();\n\n\t\tif ((!SystemGlobals.getBoolValue(ConfigKeys.REGISTRATION_ENABLED)\n\t\t\t\t&& !SecurityRepository.get(userId).canAccess(SecurityConstants.PERM_ADMINISTRATION))\n\t\t\t\t|| ConfigKeys.TYPE_SSO.equals(SystemGlobals.getValue(ConfigKeys.AUTHENTICATION_TYPE))) {\n\t\t\tthis.registrationDisabled();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (!hasErrors && SystemGlobals.getBoolValue(ConfigKeys.AGREEMENT_SHOW) && !this.agreementAccepted()) {\n\t\t\tthis.setTemplateName(TemplateKeys.AGREEMENT_LIST);\n\t\t\tthis.context.put(\"agreementContents\", this.agreementContents());\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setTemplateName(TemplateKeys.USER_INSERT);\n\t\tthis.context.put(\"action\", \"insertSave\");\n\t\tthis.context.put(\"username\", this.request.getParameter(\"username\"));\n\t\tthis.context.put(\"email\", this.request.getParameter(\"email\"));\n\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"ForumBase.register\"));\n\t\t\n\t\tif (SystemGlobals.getBoolValue(ConfigKeys.CAPTCHA_REGISTRATION)){\n\t\t\t// Create a new image captcha\n\t\t\tSessionFacade.getUserSession().createNewCaptcha();\n\t\t\tthis.context.put(\"captcha_reg\", true);\n\t\t}\n\n\t\tSessionFacade.removeAttribute(ConfigKeys.AGREEMENT_ACCEPTED);\n\t}\n\n\tpublic void insert() \n\t{\n\t\tthis.insert(false);\n\t}\n\t\n\tpublic void acceptAgreement()\n\t{\n\t\tSessionFacade.setAttribute(ConfigKeys.AGREEMENT_ACCEPTED, \"1\");\n\t\tJForumExecutionContext.setRedirect(this.request.getContextPath()\n\t\t\t+ \"/user/insert\"\n\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION));\n\t}\n\t\n\tprivate String agreementContents()\n\t{\n\t\tStringBuffer contents = new StringBuffer();\n\t\t\n\t\tBufferedReader reader = null;\n\t\tFileReader fileReader = null;\n\n\t\ttry {\n\t\t\tString directory = new StringBuffer()\n\t\t\t\t.append(SystemGlobals.getApplicationPath()) \n\t\t\t\t.append(SystemGlobals.getValue(ConfigKeys.AGREEMENT_FILES_PATH)) \n\t\t\t\t.append('/')\n\t\t\t\t.toString();\n\n\t\t\tString filename = \"terms_\" + SystemGlobals.getValue(ConfigKeys.I18N_DEFAULT) + \".txt\";\n\t\t\t\n\t\t\tFile file = new File(directory + filename);\n\t\t\t\n\t\t\tif (!file.exists()) {\n\t\t\t\tfilename = SystemGlobals.getValue(ConfigKeys.AGREEMENT_DEFAULT_FILE);\n\t\t\t\tfile = new File(directory + filename);\n\t\t\t\t\n\t\t\t\tif (!file.exists()) {\n\t\t\t\t\tthrow new FileNotFoundException(\"Could not locate any terms agreement file\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfileReader = new FileReader(file);\n\t\t\treader = new BufferedReader(fileReader);\n\t\t\t\n\t\t\tchar[] buffer = new char[2048];\n\t\t\tint c = 0;\n\t\t\t\n\t\t\twhile ((c = reader.read(buffer, 0, buffer.length)) > -1) {\n\t\t\t\tcontents.append(buffer, 0, c);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlogger.warn(\"Failed to read agreement data: \" + e, e);\n\t\t\tcontents = new StringBuffer(I18n.getMessage(\"User.agreement.noAgreement\"));\n\t\t}\n\t\tfinally {\n\t\t\tif (fileReader != null) { try { fileReader.close(); } catch (Exception e) {} }\n\t\t\tif (reader != null) { try { reader.close(); } catch (Exception e) {} }\n\t\t}\n\t\t\n\t\treturn contents.toString();\n\t}\n\t\n\tprivate boolean agreementAccepted()\n\t{\n\t\treturn \"1\".equals(SessionFacade.getAttribute(ConfigKeys.AGREEMENT_ACCEPTED));\n\t}\n\n\tpublic void insertSave()\n\t{\n\t\tUserSession userSession = SessionFacade.getUserSession();\n\t\tint userId = userSession.getUserId();\n\n\t\tif ((!SystemGlobals.getBoolValue(ConfigKeys.REGISTRATION_ENABLED)\n\t\t\t\t&& !SecurityRepository.get(userId).canAccess(SecurityConstants.PERM_ADMINISTRATION))\n\t\t\t\t|| ConfigKeys.TYPE_SSO.equals(SystemGlobals.getValue(ConfigKeys.AUTHENTICATION_TYPE))) {\n\t\t\tthis.registrationDisabled();\n\t\t\treturn;\n\t\t}\n\n\t\tUser u = new User();\n\t\tUserDAO dao = DataAccessDriver.getInstance().newUserDAO();\n\n\t\tString username = this.request.getParameter(\"username\");\n\t\tString password = this.request.getParameter(\"password\");\n\t\tString email = this.request.getParameter(\"email\");\n\t\tString captchaResponse = this.request.getParameter(\"captchaResponse\");\n\n\t\tboolean error = false;\n\t\tif (username == null || username.trim().equals(\"\") \n\t\t\t\t|| password == null || password.trim().equals(\"\")) {\n\t\t\tthis.context.put(\"error\", I18n.getMessage(\"UsernamePasswordCannotBeNull\"));\n\t\t\terror = true;\n\t\t}\n\t\t\n\t\tif (username != null) {\n\t\t\tusername = username.trim();\n\t\t}\n\n        if (!error && username.length() > SystemGlobals.getIntValue(ConfigKeys.USERNAME_MAX_LENGTH)) {\n\t\t\tthis.context.put(\"error\", I18n.getMessage(\"User.usernameTooBig\"));\n\t\t\terror = true;\n\t\t}\n\t\t\n\t\tif (!error && username.indexOf('<') > -1 || username.indexOf('>') > -1) {\n\t\t\tthis.context.put(\"error\", I18n.getMessage(\"User.usernameInvalidChars\"));\n\t\t\terror = true;\n\t\t}\n\n\t\tif (!error && dao.isUsernameRegistered(username)) {\n\t\t\tthis.context.put(\"error\", I18n.getMessage(\"UsernameExists\"));\n\t\t\terror = true;\n\t\t}\n\t\t\n\t\tif (!error && dao.findByEmail(email) != null) {\n\t\t\tthis.context.put(\"error\", I18n.getMessage(\"User.emailExists\", new String[] { email }));\n\t\t\terror = true;\n\t\t}\n\t\t\n\t\tif (!error && !userSession.validateCaptchaResponse(captchaResponse)){\n\t\t\tthis.context.put(\"error\", I18n.getMessage(\"CaptchaResponseFails\"));\n\t\t\terror = true;\n\t\t}\n\n\t\tif (error) {\n\t\t\tthis.insert(true);\n\t\t\treturn;\n\t\t}\n\n\t\tu.setUsername(username);\n\t\tu.setPassword(MD5.crypt(password));\n\t\tu.setEmail(email);\n\n\t\tboolean requiresMailActivation = SystemGlobals.getBoolValue(ConfigKeys.MAIL_USER_EMAIL_AUTH);\n\t\t\n\t\tif (requiresMailActivation) {\n\t\t\tu.setActivationKey(MD5.crypt(username + System.currentTimeMillis()));\n\t\t}\n\n\t\tint newUserId = dao.addNew(u);\n\n\t\tif (requiresMailActivation) {\n\t\t\tExecutor.execute(new EmailSenderTask(new ActivationKeySpammer(u)));\n\n\t\t\tthis.setTemplateName(TemplateKeys.USER_INSERT_ACTIVATE_MAIL);\n\t\t\tthis.context.put(\"message\", I18n.getMessage(\"User.GoActivateAccountMessage\"));\n\t\t} \n\t\telse if(SecurityRepository.get(userId).canAccess(SecurityConstants.PERM_ADMINISTRATION)) {\n\t\t\tJForumExecutionContext.setRedirect(this.request.getContextPath()\n\t\t\t\t+ \"/adminUsers/list\"\n\t\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION));\n\t\t}\n\t\telse {\n\t\t\tthis.logNewRegisteredUserIn(newUserId, u);\n\t\t}\n\t\t\n\t\tif (!requiresMailActivation) {\n\t\t\tdao.writeUserActive(newUserId);\n\t\t}\n\t}\n\n\tpublic void activateAccount()\n\t{\n\t\tString hash = this.request.getParameter(\"hash\");\n\t\tint userId = (new Integer(this.request.getParameter(\"user_id\"))).intValue();\n\n\t\tUserDAO um = DataAccessDriver.getInstance().newUserDAO();\n\t\tUser u = um.selectById(userId);\n\n\t\tboolean isValid = um.validateActivationKeyHash(userId, hash);\n\t\t\n\t\tif (isValid) {\n\t\t\t// Activate the account\n\t\t\tum.writeUserActive(userId);\n\t\t\tthis.logNewRegisteredUserIn(userId, u);\n\t\t} \n\t\telse {\n\t\t\tthis.setTemplateName(TemplateKeys.USER_INVALID_ACTIVATION);\n\t\t\tthis.context.put(\"message\", I18n.getMessage(\"User.invalidActivationKey\", \n\t\t\t\tnew Object[] { this.request.getContextPath()\n\t\t\t\t\t+ \"/user/activateManual\"\n\t\t\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION) \n\t\t\t\t}\n\t\t\t));\n\t\t}\n\n\t}\n\t\n\tpublic void activateManual()\n\t{\n\t\tthis.setTemplateName(TemplateKeys.ACTIVATE_ACCOUNT_MANUAL);\n\t}\n\n\tprivate void logNewRegisteredUserIn(int userId, User u) \n\t{\n\t\tSessionFacade.makeLogged();\n\n\t\tUserSession userSession = new UserSession();\n\t\tuserSession.setAutoLogin(true);\n\t\tuserSession.setUserId(userId);\n\t\tuserSession.setUsername(u.getUsername());\n\t\tuserSession.setLastVisit(new Date(System.currentTimeMillis()));\n\t\tuserSession.setStartTime(new Date(System.currentTimeMillis()));\n\n\t\tSessionFacade.add(userSession);\n\n\t\t// Finalizing.. show to user the congrats page\n\t\tJForumExecutionContext.setRedirect(this.request.getContextPath()\n\t\t\t+ \"/user/registrationComplete\"\n\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION));\n\t}\n\n\tpublic void registrationComplete()\n\t{\n\t\tint userId = SessionFacade.getUserSession().getUserId();\n\t\t\n\t\tForumRepository.setLastRegisteredUser(\n\t\t\t\tDataAccessDriver.getInstance().newUserDAO().selectById(userId));\n\t\tForumRepository.incrementTotalUsers();\n\n\t\tString profilePage = JForumExecutionContext.getForumContext().encodeURL(\"/user/edit/\" + userId);\n\t\tString homePage = JForumExecutionContext.getForumContext().encodeURL(\"/forums/list\");\n\n\t\tString message = I18n.getMessage(\"User.RegistrationCompleteMessage\", \n\t\t\t\tnew Object[] { profilePage, homePage });\n\t\tthis.context.put(\"message\", message);\n\t\tthis.setTemplateName(TemplateKeys.USER_REGISTRATION_COMPLETE);\n\t}\n\n\tpublic void validateLogin()\n\t{\n\t\tString password;\n\t\tString username;",
  "metadata": {
    "fileId": "UserAction_java_chunk_2",
    "fileName": "UserAction.java",
    "filePath": "src/net/jforum/view/forum/UserAction.java"
  }
}