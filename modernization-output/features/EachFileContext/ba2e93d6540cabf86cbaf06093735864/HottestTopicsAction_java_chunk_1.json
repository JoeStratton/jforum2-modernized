{
  "pageContent": "File Path: src/net/jforum/view/forum/HottestTopicsAction.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on Mar 02, 2007\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.view.forum;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\n\nimport net.jforum.Command;\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.dao.DataAccessDriver;\nimport net.jforum.dao.UserDAO;\nimport net.jforum.entities.Forum;\nimport net.jforum.entities.Topic;\nimport net.jforum.entities.User;\nimport net.jforum.repository.ForumRepository;\nimport net.jforum.repository.TopicRepository;\nimport net.jforum.util.I18n;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\nimport net.jforum.util.preferences.TemplateKeys;\nimport net.jforum.view.forum.common.TopicsCommon;\nimport net.jforum.view.forum.common.ViewCommon;\n\n/**\n * Display a list of hottest Topics\n * \n * @author James Yong\n * @author Rafael Steil\n * @author Andowson Chang \n * @version $Id: HottestTopicsAction.java,v 1.2 2007/08/20 19:35:52 rafaelsteil Exp $\n */\npublic class HottestTopicsAction extends Command \n{\n\tprivate List forums;\n\n\tpublic void list()\n\t{\n\t\tint postsPerPage = SystemGlobals.getIntValue(ConfigKeys.POSTS_PER_PAGE);\n\n\t\tthis.setTemplateName(TemplateKeys.HOTTEST_LIST);\n\t\t\n\t\tthis.context.put(\"postsPerPage\", new Integer(postsPerPage));\n\t\tthis.context.put(\"topics\", this.topics());\n\t\tthis.context.put(\"forums\", this.forums);\n\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"ForumBase.hottestTopics\"));\n\n\t\tTopicsCommon.topicListingBase();\n\t\tthis.request.setAttribute(\"template\", null);\n\t}\n\t\n\tList topics()\n\t{\n\t\tint postsPerPage = SystemGlobals.getIntValue(ConfigKeys.POSTS_PER_PAGE);\n\t\tList tmpTopics = TopicRepository.getHottestTopics();\n\t\t\n\t\tthis.forums = new ArrayList(postsPerPage);\n\n\t\tfor (Iterator iter = tmpTopics.iterator(); iter.hasNext(); ) {\n\t\t\tTopic t = (Topic)iter.next();\n\t\t\t\n\t\t\tif (TopicsCommon.isTopicAccessible(t.getForumId())) {\n\t\t\t\t// Get name of forum that the topic refers to\n\t\t\t\tForum f = ForumRepository.getForum(t.getForumId());\n\t\t\t\tforums.add(f);\n\t\t\t}\n\t\t\telse {\n\t\t\t\titer.remove();\n\t\t\t}\n\t\t}\n\t\t\n\t\tJForumExecutionContext.getRequest().removeAttribute(\"template\");\n\t\t\n\t\treturn TopicsCommon.prepareTopics(tmpTopics);\n\t}\n\n\tpublic void showTopicsByUser() \n\t{\n\t\tDataAccessDriver da = DataAccessDriver.getInstance();\n\t\t\n\t\tUserDAO udao = da.newUserDAO();\n\t\tUser u = udao.selectById(this.request.getIntParameter(\"user_id\"));\n\t\t\n\t\tif (u.getId() == 0) {\n\t\t\tthis.context.put(\"message\", I18n.getMessage(\"User.notFound\"));\n\t\t\tthis.setTemplateName(TemplateKeys.USER_NOT_FOUND);\n\t\t\treturn;\n\t\t} \n\t\t\t\n\t\tTopicsCommon.topicListingBase();\n\t\t\n\t\tint start = ViewCommon.getStartPage();\n\t\tint topicsPerPage = SystemGlobals.getIntValue(ConfigKeys.TOPICS_PER_PAGE);\n\t\tint postsPerPage = SystemGlobals.getIntValue(ConfigKeys.POSTS_PER_PAGE);\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.HOTTEST_USER_TOPICS_SHOW);\n\t\t\n\t\tint totalTopics = da.newTopicDAO().countUserTopics(u.getId());\n\t\t\n\t\tthis.context.put(\"u\", u);\n\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"ForumListing.userTopics\") + \" \" + u.getUsername());\n\t\t\n\t\tthis.context.put(\"postsPerPage\", new Integer(postsPerPage));\n\t\t\n\t\tList topics = da.newTopicDAO().selectByUserByLimit(u.getId(),start,topicsPerPage);\n\t\t\n\t\tList l = TopicsCommon.prepareTopics(topics);\n\t\tMap forums = new HashMap();\n\t\t\n\t\tfor (Iterator iter = l.iterator(); iter.hasNext(); ) {\n\t\t\tTopic t = (Topic)iter.next();\n\t\t\t\n\t\t\tForum f = ForumRepository.getForum(t.getForumId());\n\t\t\t\n\t\t\tif (f == null) {\n\t\t\t\titer.remove();\n\t\t\t\ttotalTopics--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tforums.put(new Integer(t.getForumId()), f);\n\t\t}\n\t\t\n\t\tthis.context.put(\"topics\", l);\n\t\tthis.context.put(\"forums\", forums);\n\t\t\n\t\tViewCommon.contextToPagination(start, totalTopics, topicsPerPage);\n\t}\n}",
  "metadata": {
    "fileId": "HottestTopicsAction_java_chunk_1",
    "fileName": "HottestTopicsAction.java",
    "filePath": "src/net/jforum/view/forum/HottestTopicsAction.java"
  }
}