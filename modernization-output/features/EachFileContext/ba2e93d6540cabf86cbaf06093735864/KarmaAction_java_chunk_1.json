{
  "pageContent": "File Path: src/net/jforum/view/forum/KarmaAction.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on Jan 11, 2005 11:44:06 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.view.forum;\n\nimport net.jforum.Command;\nimport net.jforum.JForumExecutionContext;\nimport net.jforum.SessionFacade;\nimport net.jforum.dao.DataAccessDriver;\nimport net.jforum.dao.KarmaDAO;\nimport net.jforum.dao.PostDAO;\nimport net.jforum.entities.Karma;\nimport net.jforum.entities.KarmaStatus;\nimport net.jforum.entities.Post;\nimport net.jforum.repository.PostRepository;\nimport net.jforum.repository.SecurityRepository;\nimport net.jforum.security.SecurityConstants;\nimport net.jforum.util.I18n;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\nimport net.jforum.util.preferences.TemplateKeys;\nimport net.jforum.view.forum.common.PostCommon;\nimport net.jforum.view.forum.common.ViewCommon;\n\n/**\n * @author Rafael Steil\n * @version $Id: KarmaAction.java,v 1.21 2007/08/01 22:30:03 rafaelsteil Exp $\n */\npublic class KarmaAction extends Command\n{\n\tpublic void insert()\n\t{\n\t\tif (!SecurityRepository.canAccess(SecurityConstants.PERM_KARMA_ENABLED)) {\n\t\t\tthis.error(\"Karma.featureDisabled\", null);\n\t\t\treturn;\n\t\t}\n\n\t\tint postId = this.request.getIntParameter(\"post_id\");\n\t\tint fromUserId = SessionFacade.getUserSession().getUserId();\n\n\t\tPostDAO pm = DataAccessDriver.getInstance().newPostDAO();\n\t\tPost p = pm.selectById(postId);\n\n\t\tif (fromUserId == SystemGlobals.getIntValue(ConfigKeys.ANONYMOUS_USER_ID)) {\n\t\t\tthis.error(\"Karma.anonymousIsDenied\", p);\n\t\t\treturn;\n\t\t}\n\n\t\tif (p.getUserId() == fromUserId) {\n\t\t\tthis.error(\"Karma.cannotSelfVote\", p);\n\t\t\treturn;\n\t\t}\n\n\t\tKarmaDAO km = DataAccessDriver.getInstance().newKarmaDAO();\n\t\t\n\t\tif (!km.userCanAddKarma(fromUserId, postId)) {\n\t\t\tthis.error(\"Karma.alreadyVoted\", p);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Check range\n\t\tint points = this.request.getIntParameter(\"points\");\n\t\t\n\t\tif (points < SystemGlobals.getIntValue(ConfigKeys.KARMA_MIN_POINTS)\n\t\t\t\t|| points > SystemGlobals.getIntValue(ConfigKeys.KARMA_MAX_POINTS)) {\n\t\t\tthis.error(\"Karma.invalidRange\", p);\n\t\t\treturn;\n\t\t}\n\n\t\tKarma karma = new Karma();\n\t\tkarma.setFromUserId(fromUserId);\n\t\tkarma.setPostUserId(p.getUserId());\n\t\tkarma.setPostId(postId);\n\t\tkarma.setTopicId(p.getTopicId());\n\t\tkarma.setPoints(points);\n\n\t\tkm.addKarma(karma);\n\t\t\n\t\tp.setKarma(new KarmaStatus(p.getId(), points));\n\t\t\n\t\tif (SystemGlobals.getBoolValue(ConfigKeys.POSTS_CACHE_ENABLED)) {\n\t\t\tPostRepository.update(p.getTopicId(), PostCommon.preparePostForDisplay(p));\n\t\t}\n\n\t\tJForumExecutionContext.setRedirect(this.urlToTopic(p));\n\t}\n\n\tprivate void error(String message, Post p)\n\t{\n\t\tthis.setTemplateName(TemplateKeys.KARMA_ERROR);\n\n\t\tif (p != null) {\n\t\t\tthis.context.put(\"message\", I18n.getMessage(message, new String[] { this.urlToTopic(p) }));\n\t\t}\n\t\telse {\n\t\t\tthis.context.put(\"message\", I18n.getMessage(message));\n\t\t}\n\t}\n\n\tprivate String urlToTopic(Post p)\n\t{\n\t\treturn JForumExecutionContext.getRequest().getContextPath() + \"/posts/list/\" \n\t\t\t+ ViewCommon.getStartPage()\n\t\t\t+ \"/\" + p.getTopicId()\n\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION)\n\t\t\t+ \"#\" + p.getId();\n\t}\n\n\t/**\n\t * @see net.jforum.Command#list()\n\t */\n\tpublic void list() \n\t{\n\t\tthis.setTemplateName(TemplateKeys.KARMA_LIST);\n\t\tthis.context.put(\"message\", I18n.getMessage(\"invalidAction\"));\n\t}\n}",
  "metadata": {
    "fileId": "KarmaAction_java_chunk_1",
    "fileName": "KarmaAction.java",
    "filePath": "src/net/jforum/view/forum/KarmaAction.java"
  }
}