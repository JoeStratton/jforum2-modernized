{
  "pageContent": "File Path: src/net/jforum/view/forum/UserAction.java\n\n Original Content: SessionFacade.add(userSession);\n\n\t\t// Finalizing.. show to user the congrats page\n\t\tJForumExecutionContext.setRedirect(this.request.getContextPath()\n\t\t\t+ \"/user/registrationComplete\"\n\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION));\n\t}\n\n\tpublic void registrationComplete()\n\t{\n\t\tint userId = SessionFacade.getUserSession().getUserId();\n\t\t\n\t\tForumRepository.setLastRegisteredUser(\n\t\t\t\tDataAccessDriver.getInstance().newUserDAO().selectById(userId));\n\t\tForumRepository.incrementTotalUsers();\n\n\t\tString profilePage = JForumExecutionContext.getForumContext().encodeURL(\"/user/edit/\" + userId);\n\t\tString homePage = JForumExecutionContext.getForumContext().encodeURL(\"/forums/list\");\n\n\t\tString message = I18n.getMessage(\"User.RegistrationCompleteMessage\", \n\t\t\t\tnew Object[] { profilePage, homePage });\n\t\tthis.context.put(\"message\", message);\n\t\tthis.setTemplateName(TemplateKeys.USER_REGISTRATION_COMPLETE);\n\t}\n\n\tpublic void validateLogin()\n\t{\n\t\tString password;\n\t\tString username;\n\n\t\tif (parseBasicAuthentication()) {\n\t\t\tusername = (String)this.request.getAttribute(\"username\");\n\t\t\tpassword = (String)this.request.getAttribute(\"password\");\n\t\t} \n\t\telse {\n\t\t\tusername = this.request.getParameter(\"username\");\n\t\t\tpassword = this.request.getParameter(\"password\");\n\t\t}\n\n\t\tboolean validInfo = false;\n\t\t\n\t\tif (password.length() > 0) {\n\t\t\tUser user = this.validateLogin(username, password);\n\n\t\t\tif (user != null) {\n\t\t\t\t// Note: here we only want to set the redirect location if it hasn't already been\n\t\t\t\t// set. This will give the LoginAuthenticator a chance to set the redirect location.\n\t\t\t\tthis.buildSucessfulLoginRedirect();\n\n\t\t\t\tSessionFacade.makeLogged();\n\t\t\t\t\n\t\t\t\tString sessionId = SessionFacade.isUserInSession(user.getId());\n\t\t\t\tUserSession userSession = new UserSession(SessionFacade.getUserSession());\n\t\t\t\t\n\t\t\t\t// Remove the \"guest\" session\n\t\t\t\tSessionFacade.remove(userSession.getSessionId());\n\t\t\t\t\n\t\t\t\tuserSession.dataToUser(user);\n\t\t\t\t\n\t\t\t\tUserSession currentUs = SessionFacade.getUserSession(sessionId);\n\n\t\t\t\t// Check if the user is returning to the system\n\t\t\t\t// before its last session has expired ( hypothesis )\n                UserSession tmpUs;\n\t\t\t\tif (sessionId != null && currentUs != null) {\n\t\t\t\t\t// Write its old session data\n\t\t\t\t\tSessionFacade.storeSessionData(sessionId, JForumExecutionContext.getConnection());\n\t\t\t\t\ttmpUs = new UserSession(currentUs);\n\t\t\t\t\tSessionFacade.remove(sessionId);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tUserSessionDAO sm = DataAccessDriver.getInstance().newUserSessionDAO();\n\t\t\t\t\ttmpUs = sm.selectById(userSession, JForumExecutionContext.getConnection());\n\t\t\t\t}\n\n\t\t\t\tI18n.load(user.getLang());\n\n\t\t\t\t// Autologin\n\t\t\t\tif (this.request.getParameter(\"autologin\") != null\n\t\t\t\t\t\t&& SystemGlobals.getBoolValue(ConfigKeys.AUTO_LOGIN_ENABLED)) {\n\t\t\t\t\tuserSession.setAutoLogin(true);\n\t\t\t\t\t\n\t\t\t\t\t// Generate the user-specific hash\n\t\t\t\t\tString systemHash = MD5.crypt(SystemGlobals.getValue(ConfigKeys.USER_HASH_SEQUENCE) + user.getId());\n\t\t\t\t\tString userHash = MD5.crypt(System.currentTimeMillis() + systemHash);\n\t\t\t\t\t\n\t\t\t\t\t// Persist the user hash\n\t\t\t\t\tUserDAO dao = DataAccessDriver.getInstance().newUserDAO();\n\t\t\t\t\tdao.saveUserAuthHash(user.getId(), userHash);\n\t\t\t\t\t\n\t\t\t\t\tsystemHash = MD5.crypt(userHash);\n\t\t\t\t\t\n\t\t\t\t\tControllerUtils.addCookie(SystemGlobals.getValue(ConfigKeys.COOKIE_AUTO_LOGIN), \"1\");\n\t\t\t\t\tControllerUtils.addCookie(SystemGlobals.getValue(ConfigKeys.COOKIE_USER_HASH), systemHash);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Remove cookies for safety\n\t\t\t\t\tControllerUtils.addCookie(SystemGlobals.getValue(ConfigKeys.COOKIE_USER_HASH), null);\n\t\t\t\t\tControllerUtils.addCookie(SystemGlobals.getValue(ConfigKeys.COOKIE_AUTO_LOGIN), null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (tmpUs == null) {\n\t\t\t\t\tuserSession.setLastVisit(new Date(System.currentTimeMillis()));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Update last visit and session start time\n\t\t\t\t\tuserSession.setLastVisit(new Date(tmpUs.getStartTime().getTime() + tmpUs.getSessionTime()));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSessionFacade.add(userSession);\n\t\t\t\tSessionFacade.setAttribute(ConfigKeys.TOPICS_READ_TIME, new HashMap());\n\t\t\t\tControllerUtils.addCookie(SystemGlobals.getValue(ConfigKeys.COOKIE_NAME_DATA), \n\t\t\t\t\tInteger.toString(user.getId()));\n\n\t\t\t\tSecurityRepository.load(user.getId(), true);\n\t\t\t\tvalidInfo = true;\n\t\t\t}\n\t\t}\n\n\t\t// Invalid login\n\t\tif (!validInfo) {\n\t\t\tthis.context.put(\"invalidLogin\", \"1\");\n\t\t\tthis.setTemplateName(TemplateKeys.USER_VALIDATE_LOGIN);\n\n\t\t\tif (this.request.getParameter(\"returnPath\") != null) {\n\t\t\t\tthis.context.put(\"returnPath\",\n\t\t\t\t\t\tthis.request.getParameter(\"returnPath\"));\n\t\t\t}\n\t\t} \n\t\telse if (this.request.getParameter(\"returnPath\") != null) {\n\t\t\tJForumExecutionContext.setRedirect(this.request.getParameter(\"returnPath\"));\n\t\t}\n\t}\n\n\tprivate void buildSucessfulLoginRedirect()\n\t{\n\t\tif (JForumExecutionContext.getRedirectTo() == null) {\n\t\t\tString forwaredHost = request.getHeader(\"X-Forwarded-Host\");\n\t\t\t\n\t\t\tif (forwaredHost == null \n\t\t\t\t\t|| SystemGlobals.getBoolValue(ConfigKeys.LOGIN_IGNORE_XFORWARDEDHOST)) {\n\t\t\t\tJForumExecutionContext.setRedirect(this.request.getContextPath()\n\t\t\t\t\t+ \"/forums/list\"\n\t\t\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION));\t\t\t\t\t\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\tJForumExecutionContext.setRedirect(this.request.getScheme()\n\t\t\t\t\t+ \"://\"\n\t\t\t\t\t+ forwaredHost\n\t\t\t\t\t+ this.request.getContextPath()\n\t\t\t\t\t+ \"/forums/list\"\n\t\t\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION)); \n\t\t\t}\n\t\t}\n\t}\n\n    public void validateLogin(RequestContext request)  {\n        this.request = request;\n        validateLogin();\n    }\n\n    public static boolean hasBasicAuthentication(RequestContext request) {\n        String auth = request.getHeader(\"Authorization\");\n        return (auth != null && auth.startsWith(\"Basic \"));\n    }\n\n    private boolean parseBasicAuthentication()\n\t{\n\t\tif (hasBasicAuthentication(request)) {\n\t\t\tString auth = request.getHeader(\"Authorization\");\n\t\t\tString decoded;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tdecoded = new String(new sun.misc.BASE64Decoder().decodeBuffer(auth.substring(6)));\n\t\t\t}\n\t\t\tcatch (IOException e) {\n\t\t\t\tthrow new ForumException(e);\n\t\t\t}\n\t\t\t\n\t\t\tint p = decoded.indexOf(':');\n\t\t\t\n\t\t\tif (p != -1) {\n\t\t\t\trequest.setAttribute(\"username\", decoded.substring(0, p));\n\t\t\t\trequest.setAttribute(\"password\", decoded.substring(p + 1));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n    private User validateLogin(String name, String password)\n\t{\n\t\tUserDAO um = DataAccessDriver.getInstance().newUserDAO();\n        return um.validateLogin(name, password);\n\t}\n\n\tpublic void profile()\n\t{\n\t\tDataAccessDriver da = DataAccessDriver.getInstance();\n\t\tUserDAO udao = da.newUserDAO();\n\n\t\tUser u = udao.selectById(this.request.getIntParameter(\"user_id\"));\n\t\t\n\t\tif (u.getId() == 0) {\n\t\t\tthis.userNotFound();\n\t\t}\n\t\telse {\n\t\t\tthis.setTemplateName(TemplateKeys.USER_PROFILE);\n\t\t\tthis.context.put(\"karmaEnabled\", SecurityRepository.canAccess(SecurityConstants.PERM_KARMA_ENABLED));\n\t\t\tthis.context.put(\"rank\", new RankingRepository());\n\t\t\tthis.context.put(\"u\", u);\n\t\t\tthis.context.put(\"avatarAllowExternalUrl\", SystemGlobals.getBoolValue(ConfigKeys.AVATAR_ALLOW_EXTERNAL_URL));\n\t\t\t\n\t\t\tint loggedId = SessionFacade.getUserSession().getUserId();\n\t\t\tint count = 0;\n\t\t\t\n\t\t\tList bookmarks = da.newBookmarkDAO().selectByUser(u.getId());\n\t\t\tfor (Iterator iter = bookmarks.iterator(); iter.hasNext(); ) {\n\t\t\t\tBookmark b = (Bookmark)iter.next();\n\n\t\t\t\tif (b.isPublicVisible() || loggedId == u.getId()) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"UserProfile.allAbout\")+\" \"+u.getUsername());\n\t\t\tthis.context.put(\"nbookmarks\", new Integer(count));\n\t\t\tthis.context.put(\"ntopics\", new Integer(da.newTopicDAO().countUserTopics(u.getId())));\n\t\t\tthis.context.put(\"nposts\", new Integer(da.newPostDAO().countUserPosts(u.getId())));\n\t\t}\n\t}\n\t\n\tprivate void userNotFound()\n\t{\n\t\tthis.context.put(\"message\", I18n.getMessage(\"User.notFound\"));\n\t\tthis.setTemplateName(TemplateKeys.USER_NOT_FOUND);\n\t}\n\n\tpublic void logout()\n\t{\n\t\tJForumExecutionContext.setRedirect(this.request.getContextPath()\n\t\t\t+ \"/forums/list\"\n\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION));\n\n\t\tUserSession userSession = SessionFacade.getUserSession();\n\t\tSessionFacade.storeSessionData(userSession.getSessionId(), JForumExecutionContext.getConnection());\n\n\t\tSessionFacade.makeUnlogged();\n\t\tSessionFacade.remove(userSession.getSessionId());\n\t\t\n\t\t// Disable auto login\n\t\tuserSession.setAutoLogin(false);\n\t\tuserSession.makeAnonymous();\n\n\t\tSessionFacade.add(userSession);\n\t}\n\n\tpublic void login()\n\t{\n\t\tif (ConfigKeys.TYPE_SSO.equals(SystemGlobals.getValue(ConfigKeys.AUTHENTICATION_TYPE))) {\n\t\t\tthis.registrationDisabled();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (this.request.getParameter(\"returnPath\") != null) {\n\t\t\tthis.context.put(\"returnPath\", this.request.getParameter(\"returnPath\"));\n\t\t}\n\t\telse if (!SystemGlobals.getBoolValue(ConfigKeys.LOGIN_IGNORE_REFERER)) {\n\t\t\tString referer = this.request.getHeader(\"Referer\");\n\t\t\t\n\t\t\tif (referer != null) {\n\t\t\t\tthis.context.put(\"returnPath\", referer);\n\t\t\t}\n\t\t}\n\n\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"ForumBase.login\"));\n\t\tthis.setTemplateName(TemplateKeys.USER_LOGIN);\n\t}\n\n\t// Lost password form\n\tpublic void lostPassword() \n\t{\n\t\tthis.setTemplateName(TemplateKeys.USER_LOSTPASSWORD);\n\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"PasswordRecovery.title\"));\n\t}\n\t\n\tpublic User prepareLostPassword(String username, String email)\n\t{\n\t\tUser user = null;\n\t\tUserDAO um = DataAccessDriver.getInstance().newUserDAO();\n\n\t\tif (email != null && !email.trim().equals(\"\")) {\n\t\t\tusername = um.getUsernameByEmail(email);\n\t\t}\n\n\t\tif (username != null && !username.trim().equals(\"\")) {\n\t\t\tList l = um.findByName(username, true);\n\t\t\tif (l.size() > 0) {\n\t\t\t\tuser = (User)l.get(0);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (user == null) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tString hash = MD5.crypt(user.getEmail() \n\t\t\t+ System.currentTimeMillis() \n\t\t\t+ SystemGlobals.getValue(ConfigKeys.USER_HASH_SEQUENCE)\n\t\t\t+ new Random().nextInt(999999));\n\n\t\tum.writeLostPasswordHash(user.getEmail(), hash);\n\t\t\n\t\tuser.setActivationKey(hash);\n\t\t\n\t\treturn user;\n\t}",
  "metadata": {
    "fileId": "UserAction_java_chunk_3",
    "fileName": "UserAction.java",
    "filePath": "src/net/jforum/view/forum/UserAction.java"
  }
}