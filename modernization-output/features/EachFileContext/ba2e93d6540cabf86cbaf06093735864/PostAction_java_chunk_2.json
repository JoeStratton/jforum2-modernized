{
  "pageContent": "File Path: src/net/jforum/view/forum/PostAction.java\n\n Original Content: public class PostAction extends Command \n{\n\tpublic PostAction() {\n\t}\n\n\tpublic PostAction(RequestContext request, SimpleHash templateContext) {\n\t\tsuper.context = templateContext;\n\t\tsuper.request = request;\n\t}\n\n\tpublic void list()\n\t{\n\t\tPostDAO postDao = DataAccessDriver.getInstance().newPostDAO();\n\t\tPollDAO pollDao = DataAccessDriver.getInstance().newPollDAO();\n\n\t\tTopicDAO topicDao = DataAccessDriver.getInstance().newTopicDAO();\n\n\t\tUserSession us = SessionFacade.getUserSession();\n\t\tint anonymousUser = SystemGlobals.getIntValue(ConfigKeys.ANONYMOUS_USER_ID);\n\t\tboolean logged = SessionFacade.isLogged();\n\t\t\n\t\tint topicId = this.request.getIntParameter(\"topic_id\");\n\t\t\n\t\tTopic topic = TopicRepository.getTopic(new Topic(topicId));\n\t\t\n\t\tif (topic == null) {\n\t\t\ttopic = topicDao.selectById(topicId);\n\t\t}\n\n\t\t// The topic exists?\n\t\tif (topic.getId() == 0) {\n\t\t\tthis.topicNotFound();\n\t\t\treturn;\n\t\t}\n\n\t\t// Shall we proceed?\n\t\tForum forum = ForumRepository.getForum(topic.getForumId());\n\t\t\n\t\tif (!logged) {\n\t\t\tif (forum == null || !ForumRepository.isCategoryAccessible(forum.getCategoryId())) {\n\t\t\t\tthis.setTemplateName(ViewCommon.contextToLogin());\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (!TopicsCommon.isTopicAccessible(topic.getForumId())) {\n\t\t\treturn;\n\t\t}\n\n\t\tint count = SystemGlobals.getIntValue(ConfigKeys.POSTS_PER_PAGE);\n\t\tint start = ViewCommon.getStartPage();\n\n\t\tPermissionControl pc = SecurityRepository.get(us.getUserId());\n\n\t\tboolean moderatorCanEdit = false;\n\t\tif (pc.canAccess(SecurityConstants.PERM_MODERATION_POST_EDIT)) {\n\t\t\tmoderatorCanEdit = true;\n\t\t}\n\n\t\tList helperList = PostCommon.topicPosts(postDao, moderatorCanEdit, us.getUserId(), topic.getId(), start, count);\n\t\t\n\t\t// Ugly assumption:\n\t\t// Is moderation pending for the topic?\n\t\tif (topic.isModerated() && helperList.size() == 0) {\n\t\t\tthis.notModeratedYet();\n\t\t\treturn;\n\t\t}\n\n\t\t// Set the topic status as read\n\t\tif (logged) {\n\t\t\ttopicDao.updateReadStatus(topic.getId(), us.getUserId(), true);\n\t\t}\n\n\t\tboolean canVoteOnPoll = logged && SecurityRepository.canAccess(SecurityConstants.PERM_VOTE);\n\t\tPoll poll = null;\n\t\t\n\t\tif (topic.isVote()) {\n\t\t\t// It has a poll associated with the topic\n\t\t\tpoll = pollDao.selectById(topic.getVoteId());\n\t\t\t\n\t\t\tif (canVoteOnPoll) {\n\t\t\t\tcanVoteOnPoll = !pollDao.hasUserVotedOnPoll(topic.getVoteId(), us.getUserId());\n\t\t\t}\n\t\t}\n\t\t\n\t\ttopicDao.incrementTotalViews(topic.getId());\n\t\ttopic.setTotalViews(topic.getTotalViews() + 1);\n\n\t\tif (us.getUserId() != anonymousUser) {\n\t\t\tSessionFacade.getTopicsReadTime().put(new Integer(topic.getId()),\n\t\t\t\tnew Long(System.currentTimeMillis()));\n\t\t}\n\t\t\n\t\tboolean karmaEnabled = SecurityRepository.canAccess(SecurityConstants.PERM_KARMA_ENABLED);\n\t\tMap userVotes = new HashMap();\n\t\t\n\t\tif (logged && karmaEnabled) {\n\t\t\tuserVotes = DataAccessDriver.getInstance().newKarmaDAO().getUserVotes(topic.getId(), us.getUserId());\n\t\t}\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.POSTS_LIST);\n\t\tthis.context.put(\"attachmentsEnabled\", pc.canAccess(\n\t\t\tSecurityConstants.PERM_ATTACHMENTS_ENABLED, Integer.toString(topic.getForumId())));\n\t\tthis.context.put(\"canDownloadAttachments\", pc.canAccess(\n\t\t\tSecurityConstants.PERM_ATTACHMENTS_DOWNLOAD));\n\t\tthis.context.put(\"thumbShowBox\", SystemGlobals.getBoolValue(ConfigKeys.ATTACHMENTS_IMAGES_THUMB_BOX_SHOW));\n\t\tthis.context.put(\"am\", new AttachmentCommon(this.request, topic.getForumId()));\n\t\tthis.context.put(\"karmaVotes\", userVotes);\n\t\tthis.context.put(\"rssEnabled\", SystemGlobals.getBoolValue(ConfigKeys.RSS_ENABLED));\n\t\tthis.context.put(\"canRemove\", pc.canAccess(SecurityConstants.PERM_MODERATION_POST_REMOVE));\n\t\tthis.context.put(\"moderatorCanEdit\", moderatorCanEdit);\n\t\tthis.context.put(\"allCategories\", ForumCommon.getAllCategoriesAndForums(false));\n\t\tthis.context.put(\"topic\", topic);\n\t\tthis.context.put(\"poll\", poll);\n\t\tthis.context.put(\"canVoteOnPoll\", canVoteOnPoll);\n\t\tthis.context.put(\"rank\", new RankingRepository());\n\t\tthis.context.put(\"posts\", helperList);\n\t\tthis.context.put(\"forum\", forum);\n\t\tthis.context.put(\"karmaMin\", new Integer(SystemGlobals.getValue(ConfigKeys.KARMA_MIN_POINTS)));\n\t\tthis.context.put(\"karmaMax\", new Integer(SystemGlobals.getValue(ConfigKeys.KARMA_MAX_POINTS)));\n\t\tthis.context.put(\"avatarAllowExternalUrl\", SystemGlobals.getBoolValue(ConfigKeys.AVATAR_ALLOW_EXTERNAL_URL));\n\t\tthis.context.put(\"moderationLoggingEnabled\", SystemGlobals.getBoolValue(ConfigKeys.MODERATION_LOGGING_ENABLED));\n\t\tthis.context.put(\"needCaptcha\", SystemGlobals.getBoolValue(ConfigKeys.CAPTCHA_POSTS));\n\t\t\n\t\tMap topicPosters = topicDao.topicPosters(topic.getId());\n\t\t\n\t\tfor (Iterator iter = topicPosters.values().iterator(); iter.hasNext(); ) {\n\t\t\tViewCommon.prepareUserSignature((User)iter.next());\n\t\t}\n\t\t\n\t\tthis.context.put(\"users\", topicPosters);\n\t\tthis.context.put(\"anonymousPosts\", pc.canAccess(SecurityConstants.PERM_ANONYMOUS_POST, \n\t\t\tInteger.toString(topic.getForumId())));\n\t\tthis.context.put(\"watching\", topicDao.isUserSubscribed(topicId, SessionFacade.getUserSession().getUserId()));\n\t\tthis.context.put(\"pageTitle\", topic.getTitle());\n\t\tthis.context.put(\"isAdmin\", pc.canAccess(SecurityConstants.PERM_ADMINISTRATION));\n\t\tthis.context.put(\"readonly\", !pc.canAccess(SecurityConstants.PERM_READ_ONLY_FORUMS, \n\t\t\tInteger.toString(topic.getForumId())));\n\t\tthis.context.put(\"replyOnly\", !pc.canAccess(SecurityConstants.PERM_REPLY_ONLY, \n\t\t\tInteger.toString(topic.getForumId())));\n\n\t\tthis.context.put(\"isModerator\", us.isModerator(topic.getForumId()));\n\n\t\tViewCommon.contextToPagination(start, topic.getTotalReplies() + 1, count);\n\t\t\n\t\tTopicsCommon.topicListingBase();\n\t\tTopicRepository.updateTopic(topic);\n\t}\n\t\n\t/**\n\t * Given a postId, sends the user to the right page\n\t */\n\tpublic void preList()\n\t{\n\t\tint postId = this.request.getIntParameter(\"post_id\");\n\t\t\n\t\tPostDAO dao = DataAccessDriver.getInstance().newPostDAO();\n\t\t\n\t\tint count = dao.countPreviousPosts(postId);\n\t\tint postsPerPage = SystemGlobals.getIntValue(ConfigKeys.POSTS_PER_PAGE);\n\t\t\n\t\tint topicId = 0;\n\t\t\n\t\tif (this.request.getParameter(\"topic_id\") != null) {\n\t\t\ttopicId = this.request.getIntParameter(\"topic_id\");\n\t\t}\n\t\t\n\t\tif (topicId == 0) {\n\t\t\tPost post = dao.selectById(postId);\n\t\t\ttopicId = post.getTopicId();\n\t\t}\n\t\t\n\t\tString page = \"\";\n\t\t\n\t\tif (count > postsPerPage) {\n\t\t\tpage = Integer.toString(postsPerPage * ((count - 1) / postsPerPage)) + \"/\";\n\t\t} \n\n\t\tJForumExecutionContext.setRedirect(this.request.getContextPath() + \"/posts/list/\"\n\t\t\t+ page + topicId\n\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION) \n\t\t\t+ \"#\" + postId);\n\t}\n\t\n\t/**\n\t * Votes on a poll.\n\t */\n\tpublic void vote()\n\t{\n\t\tint pollId = this.request.getIntParameter(\"poll_id\");\n\t\tint topicId = this.request.getIntParameter(\"topic_id\");\n\t\t\n\t\tif (SessionFacade.isLogged() && this.request.getParameter(\"poll_option\") != null) {\n\t\t\tTopic topic = TopicRepository.getTopic(new Topic(topicId));\n\t\t\t\n\t\t\tif (topic == null) {\n\t\t\t\ttopic = DataAccessDriver.getInstance().newTopicDAO().selectRaw(topicId);\n\t\t\t}\n\t\t\t\n\t\t\tif (topic.getStatus() == Topic.STATUS_LOCKED) {\n\t\t\t\tthis.topicLocked();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// They voted, save the value\n\t\t\tint optionId = this.request.getIntParameter(\"poll_option\");\n\t\t\t\n\t\t\tPollDAO dao = DataAccessDriver.getInstance().newPollDAO();\n\t\t\t\n\t\t\t//vote on the poll\n\t\t\tUserSession user = SessionFacade.getUserSession();\n\t\t\tdao.voteOnPoll(pollId, optionId, user.getUserId(), request.getRemoteAddr());\n\t\t}\n\n\t\tJForumExecutionContext.setRedirect(this.request.getContextPath() \n\t\t\t+ \"/posts/list/\"\n\t\t\t+ topicId\n\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION));\n\t}\n\n\tpublic void listByUser()\n\t{\n\t\tPostDAO pm = DataAccessDriver.getInstance().newPostDAO();\n\t\tUserDAO um = DataAccessDriver.getInstance().newUserDAO();\n\t\tTopicDAO tm = DataAccessDriver.getInstance().newTopicDAO();\n\n\t\tUser u = um.selectById(this.request.getIntParameter(\"user_id\"));\n\t\t\n\t\tif (u.getId() == 0) {\n\t\t\tthis.context.put(\"message\", I18n.getMessage(\"User.notFound\"));\n\t\t\tthis.setTemplateName(TemplateKeys.USER_NOT_FOUND);\n\t\t\treturn;\n\t\t} \n\t\t\t\n\t\tint count = SystemGlobals.getIntValue(ConfigKeys.POSTS_PER_PAGE);\n\t\tint start = ViewCommon.getStartPage();\n\t\tint postsPerPage = SystemGlobals.getIntValue(ConfigKeys.POSTS_PER_PAGE);\n\t\t\n\t\tList posts = pm.selectByUserByLimit(u.getId(), start, postsPerPage);\n\t\tint totalMessages = pm.countUserPosts(u.getId());\n\t\t\n\t\t// get list of forums\n\t\tMap topics = new HashMap();\n\t\tMap forums = new HashMap();\n\t\t\n\t\tfor (Iterator iter = posts.iterator(); iter.hasNext(); ) {\n\t\t\tPost p = (Post)iter.next();",
  "metadata": {
    "fileId": "PostAction_java_chunk_2",
    "fileName": "PostAction.java",
    "filePath": "src/net/jforum/view/forum/PostAction.java"
  }
}