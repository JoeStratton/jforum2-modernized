{
  "pageContent": "File Path: src/net/jforum/view/forum/PostAction.java\n\n Original Content: public void listByUser()\n\t{\n\t\tPostDAO pm = DataAccessDriver.getInstance().newPostDAO();\n\t\tUserDAO um = DataAccessDriver.getInstance().newUserDAO();\n\t\tTopicDAO tm = DataAccessDriver.getInstance().newTopicDAO();\n\n\t\tUser u = um.selectById(this.request.getIntParameter(\"user_id\"));\n\t\t\n\t\tif (u.getId() == 0) {\n\t\t\tthis.context.put(\"message\", I18n.getMessage(\"User.notFound\"));\n\t\t\tthis.setTemplateName(TemplateKeys.USER_NOT_FOUND);\n\t\t\treturn;\n\t\t} \n\t\t\t\n\t\tint count = SystemGlobals.getIntValue(ConfigKeys.POSTS_PER_PAGE);\n\t\tint start = ViewCommon.getStartPage();\n\t\tint postsPerPage = SystemGlobals.getIntValue(ConfigKeys.POSTS_PER_PAGE);\n\t\t\n\t\tList posts = pm.selectByUserByLimit(u.getId(), start, postsPerPage);\n\t\tint totalMessages = pm.countUserPosts(u.getId());\n\t\t\n\t\t// get list of forums\n\t\tMap topics = new HashMap();\n\t\tMap forums = new HashMap();\n\t\t\n\t\tfor (Iterator iter = posts.iterator(); iter.hasNext(); ) {\n\t\t\tPost p = (Post)iter.next();\n\n\t\t\tif (!topics.containsKey(new Integer(p.getTopicId()))) {\n\t\t\t\tTopic t = TopicRepository.getTopic(new Topic(p.getTopicId()));\n\t\t\t\t\n\t\t\t\tif (t == null) {\n\t\t\t\t\tt = tm.selectRaw(p.getTopicId());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.context.put(\"attachmentsEnabled\", SecurityRepository.canAccess(\n\t\t\t\t\t\tSecurityConstants.PERM_ATTACHMENTS_ENABLED, Integer.toString(t.getForumId())));\n\t\t\t\tthis.context.put(\"am\", new AttachmentCommon(this.request, t.getForumId()));\t\t\t\t\n\t\n\t\t\t\ttopics.put(new Integer(t.getId()), t);\n\t\t\t}\n\t\t\t\n\t\t\tif (!forums.containsKey(new Integer(p.getForumId()))) {\n\t\t\t\tForum f = ForumRepository.getForum(p.getForumId());\n\t\t\t\t\n\t\t\t\tif (f == null) {\n\t\t\t\t\t// Ok, probably the user does not have permission to see this forum\n\t\t\t\t\titer.remove();\n\t\t\t\t\ttotalMessages--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tforums.put(new Integer(f.getId()), f);\n\t\t\t}\n\t\t\t\n\t\t\tPostCommon.preparePostForDisplay(p);\n\t\t}\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.POSTS_USER_POSTS_LIST);\n\t\t\n\t\tthis.context.put(\"canDownloadAttachments\", SecurityRepository.canAccess(\n\t\t\t\tSecurityConstants.PERM_ATTACHMENTS_DOWNLOAD));\t\t\t\t\n\t\tthis.context.put(\"rssEnabled\", SystemGlobals.getBoolValue(ConfigKeys.RSS_ENABLED));\n\t\tthis.context.put(\"allCategories\", ForumCommon.getAllCategoriesAndForums(false));\n\t\tthis.context.put(\"posts\", posts);\n\t\tthis.context.put(\"topics\", topics);\n\t\tthis.context.put(\"forums\", forums);\n\t\tthis.context.put(\"u\", u);\n\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"PostShow.userPosts\") + \" \" + u.getUsername());\n\t\tthis.context.put(\"karmaMin\", new Integer(SystemGlobals.getValue(ConfigKeys.KARMA_MIN_POINTS)));\n\t\tthis.context.put(\"karmaMax\", new Integer(SystemGlobals.getValue(ConfigKeys.KARMA_MAX_POINTS)));\n\t\t\n\t\tViewCommon.contextToPagination(start, totalMessages, count);\n\t}\n\n\tpublic void review()\n\t{\n\t\tPostDAO postDao = DataAccessDriver.getInstance().newPostDAO();\n\t\tTopicDAO topicDao = DataAccessDriver.getInstance().newTopicDAO();\n\n\t\tint userId = SessionFacade.getUserSession().getUserId();\n\t\tint topicId = this.request.getIntParameter(\"topic_id\");\n\t\t\n\t\tTopic topic = TopicRepository.getTopic(new Topic(topicId));\n\t\t\n\t\tif (topic == null) {\n\t\t\ttopic = topicDao.selectById(topicId);\n\t\t}\n\n\t\tif (!TopicsCommon.isTopicAccessible(topic.getForumId())) {\n\t\t\treturn;\n\t\t}\n\n\t\tint count = SystemGlobals.getIntValue(ConfigKeys.POSTS_PER_PAGE);\n\t\tint start = ViewCommon.getStartPage();\n\n\t\tMap usersMap = topicDao.topicPosters(topic.getId());\n\t\tList helperList = PostCommon.topicPosts(postDao, false, userId, topic.getId(), start, count);\n\t\tCollections.reverse(helperList);\n\n\t\tthis.setTemplateName(SystemGlobals.getValue(ConfigKeys.TEMPLATE_DIR) + \"/empty.htm\");\n\n\t\tthis.setTemplateName(TemplateKeys.POSTS_REVIEW);\n\t\tthis.context.put(\"posts\", helperList);\n\t\tthis.context.put(\"users\", usersMap);\n\t}\n\n\tprivate void topicNotFound() {\n\t\tthis.setTemplateName(TemplateKeys.POSTS_TOPIC_NOT_FOUND);\n\t\tthis.context.put(\"message\", I18n.getMessage(\"PostShow.TopicNotFound\"));\n\t}\n\n\tprivate void postNotFound() {\n\t\tthis.setTemplateName(TemplateKeys.POSTS_POST_NOT_FOUND);\n\t\tthis.context.put(\"message\", I18n.getMessage(\"PostShow.PostNotFound\"));\n\t}\n\t\n\tprivate void replyOnly()\n\t{\n\t\tthis.setTemplateName(TemplateKeys.POSTS_REPLY_ONLY);\n\t\tthis.context.put(\"message\", I18n.getMessage(\"PostShow.replyOnly\"));\n\t}\n\t\n\tprivate boolean isReplyOnly(int forumId)\n\t{\n\t\treturn !SecurityRepository.canAccess(SecurityConstants.PERM_REPLY_ONLY, \n\t\t\t\tInteger.toString(forumId));\n\t}\n\t\n\tpublic void reply()\n\t{\n\t\tthis.insert();\n\t}\n\n\tpublic void insert()\n\t{\n\t\tint forumId;\n\n\t\t// If we have a topic_id, then it should be a reply\n\t\tif (this.request.getParameter(\"topic_id\") != null) {\n\t\t\tint topicId = this.request.getIntParameter(\"topic_id\");\n\t\t\t\n\t\t\tTopic t = TopicRepository.getTopic(new Topic(topicId));\n\t\t\t\n\t\t\tif (t == null) {\n\t\t\t\tt = DataAccessDriver.getInstance().newTopicDAO().selectRaw(topicId);\n\t\t\t\t\n\t\t\t\tif (t == null) {\n\t\t\t\t\tthrow new ForumException(\"Could not find a topic with id #\" + topicId);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tforumId = t.getForumId();\n\t\t\t\n\t\t\tif (!TopicsCommon.isTopicAccessible(t.getForumId())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (t.getStatus() == Topic.STATUS_LOCKED) {\n\t\t\t\tthis.topicLocked();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.context.put(\"topic\", t);\n\t\t\tthis.context.put(\"setType\", false);\n\t\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"PostForm.reply\")+\" \"+t.getTitle());\n\t\t}\n\t\telse {\n\t\t\tforumId = this.request.getIntParameter(\"forum_id\");\n\n\t\t\tif (this.isReplyOnly(forumId)) {\n\t\t\t\tthis.replyOnly();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.context.put(\"setType\", true);\n\t\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"PostForm.title\"));\n\t\t}\n\t\t\n\t\tForum forum = ForumRepository.getForum(forumId);\n\t\t\n\t\tif (forum == null) {\n\t\t\tthrow new ForumException(\"Could not find a forum with id #\" + forumId);\n\t\t}\n\t\t\n\t\tif (!TopicsCommon.isTopicAccessible(forumId)) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (!this.anonymousPost(forumId)\n\t\t\t\t|| this.isForumReadonly(forumId, this.request.getParameter(\"topic_id\") != null)) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tint userId = SessionFacade.getUserSession().getUserId();\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.POSTS_INSERT);\n\t\t\n\t\t// Attachments\n\t\tboolean attachmentsEnabled = SecurityRepository.canAccess(\n\t\t\tSecurityConstants.PERM_ATTACHMENTS_ENABLED, Integer.toString(forumId));\n\t\t\n\t\tif (attachmentsEnabled && !SessionFacade.isLogged() \n\t\t\t&& !SystemGlobals.getBoolValue(ConfigKeys.ATTACHMENTS_ANONYMOUS)) {\n\t\t\tattachmentsEnabled = false;\n\t\t}\n\n\t\tthis.context.put(\"attachmentsEnabled\", attachmentsEnabled);\n\t\t\n\t\tif (attachmentsEnabled) {\n\t\t\tQuotaLimit ql = new AttachmentCommon(this.request, forumId).getQuotaLimit(userId);\n\t\t\tthis.context.put(\"maxAttachmentsSize\", new Long(ql != null ? ql.getSizeInBytes() : 1));\n\t\t\tthis.context.put(\"maxAttachments\", SystemGlobals.getValue(ConfigKeys.ATTACHMENTS_MAX_POST));\n\t\t}\n\t\t\n\t\tboolean needCaptcha = SystemGlobals.getBoolValue(ConfigKeys.CAPTCHA_POSTS);\n\t\t\n\t\tthis.context.put(\"moderationLoggingEnabled\", SystemGlobals.getBoolValue(ConfigKeys.MODERATION_LOGGING_ENABLED));\n\t\tthis.context.put(\"smilies\", SmiliesRepository.getSmilies());\n\t\tthis.context.put(\"forum\", forum);\n\t\tthis.context.put(\"action\", \"insertSave\");\n\t\tthis.context.put(\"start\", this.request.getParameter(\"start\"));\n\t\tthis.context.put(\"isNewPost\", true);\n\t\tthis.context.put(\"needCaptcha\", needCaptcha);\n\t\tthis.context.put(\"htmlAllowed\",\n\t\t\tSecurityRepository.canAccess(SecurityConstants.PERM_HTML_DISABLED, Integer.toString(forumId)));\n\t\tthis.context.put(\"canCreateStickyOrAnnouncementTopics\",\n\t\t\tSecurityRepository.canAccess(SecurityConstants.PERM_CREATE_STICKY_ANNOUNCEMENT_TOPICS));\n\t\tthis.context.put(\"canCreatePolls\",\n\t\t\tSecurityRepository.canAccess(SecurityConstants.PERM_CREATE_POLL));\n\n\t\tUser user = DataAccessDriver.getInstance().newUserDAO().selectById(userId);\n\t\t\n\t\tViewCommon.prepareUserSignature(user);\n\t\t\n\t\tif (this.request.getParameter(\"preview\") != null) {\n\t\t\tuser.setNotifyOnMessagesEnabled(this.request.getParameter(\"notify\") != null);\n\t\t}\n\n\t\tthis.context.put(\"user\", user);\n\t}\n\n\tpublic void edit()  {\n\t\tthis.edit(false, null);\n\t}\n\n\tprivate void edit(boolean preview, Post p)\n\t{\n\t\tint userId = SessionFacade.getUserSession().getUserId();\n\n\t\tif (!preview) {\n\t\t\tPostDAO pm = DataAccessDriver.getInstance().newPostDAO();\n\t\t\tp = pm.selectById(this.request.getIntParameter(\"post_id\"));\n\n\t\t\t// The post exist?\n\t\t\tif (p.getId() == 0) {\n\t\t\t\tthis.postNotFound();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tboolean isModerator = SecurityRepository.canAccess(SecurityConstants.PERM_MODERATION_POST_EDIT);\n\t\tboolean canEdit = SessionFacade.isLogged() && (isModerator || p.getUserId() == userId);\n\n\t\tif (!canEdit) {\n\t\t\tthis.setTemplateName(TemplateKeys.POSTS_EDIT_CANNOTEDIT);\n\t\t\tthis.context.put(\"message\", I18n.getMessage(\"CannotEditPost\"));\n\t\t}\n\t\telse {\n\t\t\tTopic topic = TopicRepository.getTopic(new Topic(p.getTopicId()));\n\t\t\t\t\n\t\t\tif (topic == null) {\n\t\t\t\ttopic = DataAccessDriver.getInstance().newTopicDAO().selectRaw(p.getTopicId());\n\t\t\t}\n\n\t\t\tif (!TopicsCommon.isTopicAccessible(topic.getForumId())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (topic.getStatus() == Topic.STATUS_LOCKED && !isModerator) {\n\t\t\t\tthis.topicLocked();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (preview && this.request.getParameter(\"topic_type\") != null) {\n\t\t\t\ttopic.setType(this.request.getIntParameter(\"topic_type\"));\n\t\t\t}\n\t\t\t\n\t\t\tif (p.hasAttachments()) {\n\t\t\t\tthis.context.put(\"attachments\", \n\t\t\t\t\t\tDataAccessDriver.getInstance().newAttachmentDAO().selectAttachments(p.getId()));\n\t\t\t}\n\n\t\t\tPoll poll = null;\n\t\t\t\n\t\t\tif (topic.isVote() && topic.getFirstPostId() == p.getId()) {\n\t\t\t\t// It has a poll associated with the topic\n\t\t\t\tPollDAO poolDao = DataAccessDriver.getInstance().newPollDAO();\n\t\t\t\tpoll = poolDao.selectById(topic.getVoteId());\n\t\t\t}\n\t\t\t\n\t\t\tthis.setTemplateName(TemplateKeys.POSTS_EDIT);",
  "metadata": {
    "fileId": "PostAction_java_chunk_3",
    "fileName": "PostAction.java",
    "filePath": "src/net/jforum/view/forum/PostAction.java"
  }
}