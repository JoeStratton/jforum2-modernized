{
  "pageContent": "File Path: src/net/jforum/view/forum/BookmarkAction.java\n\n Original Content: /*\n * Copyright (c) JForum Team\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, \n * with or without modification, are permitted provided \n * that the following conditions are met:\n * \n * 1) Redistributions of source code must retain the above \n * copyright notice, this list of conditions and the \n * following  disclaimer.\n * 2)  Redistributions in binary form must reproduce the \n * above copyright notice, this list of conditions and \n * the following disclaimer in the documentation and/or \n * other materials provided with the distribution.\n * 3) Neither the name of \"Rafael Steil\" nor \n * the names of its contributors may be used to endorse \n * or promote products derived from this software without \n * specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n * HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \n * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE \n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, \n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER \n * IN CONTRACT, STRICT LIABILITY, OR TORT \n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n * \n * Created on Jan 16, 2005 4:48:39 PM\n * The JForum Project\n * http://www.jforum.net\n */\npackage net.jforum.view.forum;\n\nimport net.jforum.*;\nimport net.jforum.context.RequestContext;\nimport net.jforum.context.ResponseContext;\nimport net.jforum.dao.BookmarkDAO;\nimport net.jforum.dao.DataAccessDriver;\nimport net.jforum.entities.Bookmark;\nimport net.jforum.entities.BookmarkType;\nimport net.jforum.entities.Forum;\nimport net.jforum.entities.Topic;\nimport net.jforum.entities.User;\nimport net.jforum.repository.ForumRepository;\nimport net.jforum.repository.SecurityRepository;\nimport net.jforum.security.SecurityConstants;\nimport net.jforum.util.I18n;\nimport net.jforum.util.SafeHtml;\nimport net.jforum.util.preferences.ConfigKeys;\nimport net.jforum.util.preferences.SystemGlobals;\nimport net.jforum.util.preferences.TemplateKeys;\nimport freemarker.template.SimpleHash;\nimport freemarker.template.Template;\nimport org.apache.commons.lang.StringUtils;\n\n/**\n * @author Rafael Steil\n * @version $Id: BookmarkAction.java,v 1.17 2006/08/23 02:13:53 rafaelsteil Exp $\n */\npublic class BookmarkAction extends Command\n{\n\tpublic void insert()\n\t{\n\t\tint type = this.request.getIntParameter(\"relation_type\");\n\t\tif (type == BookmarkType.FORUM) {\n\t\t\tthis.addForum();\n\t\t}\n\t\telse if (type == BookmarkType.TOPIC) {\n\t\t\tthis.addTopic();\n\t\t}\n\t\telse if (type == BookmarkType.USER) {\n\t\t\tthis.addUser();\n\t\t}\n\t\telse {\n\t\t\tthis.error(\"Bookmarks.invalidType\");\n\t\t}\n\t}\n\t\n\tprivate void addForum()\n\t{\n\t\tForum f = ForumRepository.getForum(this.request.getIntParameter(\"relation_id\"));\n\t\tString title = f.getName();\n\t\tString description = f.getDescription();\n\t\t\n\t\tBookmark b = DataAccessDriver.getInstance().newBookmarkDAO().selectForUpdate(\n\t\t\t\tf.getId(), BookmarkType.FORUM, SessionFacade.getUserSession().getUserId());\n\t\tif (b != null) {\n\t\t\tif (b.getTitle() != null) {\n\t\t\t\ttitle = b.getTitle();\n\t\t\t}\n\t\t\t\n\t\t\tif (b.getDescription() != null) {\n\t\t\t\tdescription = b.getDescription();\n\t\t\t}\n\n\t\t\tthis.context.put(\"bookmark\", b);\n\t\t}\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.BOOKMARKS_ADD_FORUM);\n\t\tthis.context.put(\"title\", title);\n\t\tthis.context.put(\"description\", description);\n\t\tthis.context.put(\"relationType\", new Integer(BookmarkType.FORUM));\n\t\tthis.context.put(\"relationId\", new Integer(f.getId()));\n\t}\n\t\n\tprivate void addTopic()\n\t{\n\t\tTopic t = DataAccessDriver.getInstance().newTopicDAO().selectById(\n\t\t\t\tthis.request.getIntParameter(\"relation_id\"));\n\t\tString title = t.getTitle();\n\t\t\n\t\tBookmark b = DataAccessDriver.getInstance().newBookmarkDAO().selectForUpdate(\n\t\t\t\tt.getId(), BookmarkType.TOPIC, SessionFacade.getUserSession().getUserId());\n\t\tif (b != null) {\n\t\t\tif (b.getTitle() != null) {\n\t\t\t\ttitle = b.getTitle();\n\t\t\t}\n\t\t\t\n\t\t\tthis.context.put(\"description\", b.getDescription());\n\t\t\tthis.context.put(\"bookmark\", b);\n\t\t}\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.BOOKMARS_ADD_TOPIC);\n\t\tthis.context.put(\"title\", title);\n\t\tthis.context.put(\"relationType\", new Integer(BookmarkType.TOPIC));\n\t\tthis.context.put(\"relationId\", new Integer(t.getId()));\n\t}\n\t\n\tprivate void addUser()\n\t{\n\t\tUser u = DataAccessDriver.getInstance().newUserDAO().selectById(\n\t\t\t\tthis.request.getIntParameter(\"relation_id\"));\n\t\tString title = u.getUsername();\n\t\t\n\t\tBookmark b = DataAccessDriver.getInstance().newBookmarkDAO().selectForUpdate(\n\t\t\t\tu.getId(), BookmarkType.USER, SessionFacade.getUserSession().getUserId());\n\t\tif (b != null) {\n\t\t\tif (b.getTitle() != null) {\n\t\t\t\ttitle = b.getTitle();\n\t\t\t}\n\t\t\t\n\t\t\tthis.context.put(\"description\", b.getDescription());\n\t\t\tthis.context.put(\"bookmark\", b);\n\t\t}\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.BOOKMARKS_ADD_USER);\n\t\tthis.context.put(\"title\", title);\n\t\tthis.context.put(\"relationType\", new Integer(BookmarkType.USER));\n\t\tthis.context.put(\"relationId\", new Integer(u.getId()));\n\t}\n\t\n\tpublic void insertSave()\n\t{\n\t\tSafeHtml safeHtml = new SafeHtml();\n\t\t\n\t\tBookmark b = new Bookmark();\n\t\tb.setDescription(safeHtml.makeSafe(this.request.getParameter(\"description\")));\n\t\tb.setTitle(safeHtml.makeSafe(this.request.getParameter(\"title\")));\n\t\t\n\t\tString publicVisible = this.request.getParameter(\"visible\");\n\t\tb.setPublicVisible(publicVisible != null && publicVisible.length() > 0);\n\t\t\n\t\tb.setRelationId(this.request.getIntParameter(\"relation_id\"));\n\t\tb.setRelationType(this.request.getIntParameter(\"relation_type\"));\n\t\tb.setUserId(SessionFacade.getUserSession().getUserId());\n\t\t\n\t\tDataAccessDriver.getInstance().newBookmarkDAO().add(b);\n\t\tthis.setTemplateName(TemplateKeys.BOOKMARKS_INSERT_SAVE);\n\t}\n\t\n\tpublic void updateSave()\n\t{\n\t\tint id = this.request.getIntParameter(\"bookmark_id\");\n\t\tBookmarkDAO bm = DataAccessDriver.getInstance().newBookmarkDAO();\n\t\tBookmark b = bm.selectById(id);\n\t\t\n\t\tif (!this.sanityCheck(b)) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tb.setTitle(this.request.getParameter(\"title\"));\n\t\tb.setDescription(this.request.getParameter(\"description\"));\n\t\t\n\t\tString visible = this.request.getParameter(\"visible\");\n\t\tb.setPublicVisible(StringUtils.isNotBlank(visible));\n\t\t\n\t\tbm.update(b);\n\t\tthis.setTemplateName(TemplateKeys.BOOKMARKS_UPDATE_SAVE);\n\t}\n\t\n\tpublic void edit()\n\t{\n\t\tint id = this.request.getIntParameter(\"bookmark_id\");\n\t\tBookmarkDAO bm = DataAccessDriver.getInstance().newBookmarkDAO();\n\t\tBookmark b = bm.selectById(id);\n\t\t\n\t\tif (!this.sanityCheck(b)) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.BOOKMARKS_EDIT);\n\t\tthis.context.put(\"bookmark\", b);\n\t}\n\t\n\tpublic void delete()\n\t{\n\t\tint id = this.request.getIntParameter(\"bookmark_id\");\n\t\tBookmarkDAO bm = DataAccessDriver.getInstance().newBookmarkDAO();\n\t\tBookmark b = bm.selectById(id);\n\t\t\n\t\tif (!this.sanityCheck(b)) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tbm.remove(id);\n\t\t\n\t\tJForumExecutionContext.setRedirect(this.request.getContextPath() + \"/bookmarks/list/\" + b.getUserId()\n\t\t\t\t+ SystemGlobals.getValue(ConfigKeys.SERVLET_EXTENSION));\n\t}\n\t\n\tprivate boolean sanityCheck(Bookmark b)\n\t{\n\t\tif (b == null) {\n\t\t\tthis.error(\"Bookmarks.notFound\");\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (b.getUserId() != SessionFacade.getUserSession().getUserId()) {\n\t\t\tthis.error(\"Bookmarks.notOwner\");\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\tprivate void error(String message)\n\t{\n\t\tthis.setTemplateName(TemplateKeys.BOOKMARKS_ERROR);\n\t\tthis.context.put(\"message\", I18n.getMessage(message));\n\t}\n\t\n\tpublic void disabled()\n\t{\n\t\tthis.error(\"Bookmarks.featureDisabled\");\n\t}\n\t\n\tpublic void anonymousIsDenied()\n\t{\n\t\tthis.error(\"Bookmarks.anonymousIsDenied\");\n\t}\n\n\t/**\n\t * @see net.jforum.Command#list()\n\t */\n\tpublic void list()\n\t{\n\t\tint userId = this.request.getIntParameter(\"user_id\");\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.BOOKMARKS_LIST);\n\t\tthis.context.put(\"bookmarks\", DataAccessDriver.getInstance().newBookmarkDAO().selectByUser(userId));\n\t\tthis.context.put(\"forumType\", new Integer(BookmarkType.FORUM));\n\t\tthis.context.put(\"userType\", new Integer(BookmarkType.USER));\n\t\tthis.context.put(\"topicType\", new Integer(BookmarkType.TOPIC));\n\t\tUser u=DataAccessDriver.getInstance().newUserDAO().selectById(userId);\n\t\tthis.context.put(\"user\", u);\n\t\tthis.context.put(\"loggedUserId\", new Integer(SessionFacade.getUserSession().getUserId()));\n\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"Bookmarks.for\")+\" \"+u.getUsername());\t\t\t\t\n\t}\n\t\n\t/**\n\t * @see net.jforum.Command#process(net.jforum.context.RequestContext, net.jforum.context.ResponseContext, freemarker.template.SimpleHash) \n\t */\n\tpublic Template process(RequestContext request, ResponseContext response, SimpleHash context)\n\t{\n\t\tif (SessionFacade.getUserSession().getUserId() == SystemGlobals.getIntValue(ConfigKeys.ANONYMOUS_USER_ID)\n\t\t\t\t&& !request.getAction().equals(\"list\")) {\n\t\t\trequest.addParameter(\"action\", \"anonymousIsDenied\");\n\t\t}\n\t\telse if (!SecurityRepository.canAccess(SecurityConstants.PERM_BOOKMARKS_ENABLED)) {\n\t\t\trequest.addParameter(\"action\", \"disabled\");\n\t\t}\n\n\t\treturn super.process(request, response, context);\n\t}\n}",
  "metadata": {
    "fileId": "BookmarkAction_java_chunk_1",
    "fileName": "BookmarkAction.java",
    "filePath": "src/net/jforum/view/forum/BookmarkAction.java"
  }
}