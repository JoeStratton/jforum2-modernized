{
  "pageContent": "File Path: src/net/jforum/view/forum/PostAction.java\n\n Original Content: if (!TopicsCommon.isTopicAccessible(topic.getForumId())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (topic.getStatus() == Topic.STATUS_LOCKED && !isModerator) {\n\t\t\t\tthis.topicLocked();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (preview && this.request.getParameter(\"topic_type\") != null) {\n\t\t\t\ttopic.setType(this.request.getIntParameter(\"topic_type\"));\n\t\t\t}\n\t\t\t\n\t\t\tif (p.hasAttachments()) {\n\t\t\t\tthis.context.put(\"attachments\", \n\t\t\t\t\t\tDataAccessDriver.getInstance().newAttachmentDAO().selectAttachments(p.getId()));\n\t\t\t}\n\n\t\t\tPoll poll = null;\n\t\t\t\n\t\t\tif (topic.isVote() && topic.getFirstPostId() == p.getId()) {\n\t\t\t\t// It has a poll associated with the topic\n\t\t\t\tPollDAO poolDao = DataAccessDriver.getInstance().newPollDAO();\n\t\t\t\tpoll = poolDao.selectById(topic.getVoteId());\n\t\t\t}\n\t\t\t\n\t\t\tthis.setTemplateName(TemplateKeys.POSTS_EDIT);\n\n\t\t\tthis.context.put(\"attachmentsEnabled\", SecurityRepository.canAccess(\n\t\t\t\t\tSecurityConstants.PERM_ATTACHMENTS_ENABLED, Integer.toString(p.getForumId())));\n\t\t\t\n\t\t\tthis.context.put(\"moderationLoggingEnabled\", SystemGlobals.getBoolValue(ConfigKeys.MODERATION_LOGGING_ENABLED));\n\t\t\n\t\t\tQuotaLimit ql = new AttachmentCommon(this.request, p.getForumId()).getQuotaLimit(userId);\n\t\t\tthis.context.put(\"maxAttachmentsSize\", new Long(ql != null ? ql.getSizeInBytes() : 1));\n\t\t\tthis.context.put(\"isEdit\", true);\n\t\t\tthis.context.put(\"maxAttachments\", SystemGlobals.getValue(ConfigKeys.ATTACHMENTS_MAX_POST));\n\t\t\tthis.context.put(\"smilies\", SmiliesRepository.getSmilies());\n\t\t\tthis.context.put(\"forum\", ForumRepository.getForum(p.getForumId()));\n\t\t\tthis.context.put(\"action\", \"editSave\");\n\t\t\tthis.context.put(\"post\", p);\n\t\t\tthis.context.put(\"setType\", p.getId() == topic.getFirstPostId());\n\t\t\tthis.context.put(\"topic\", topic);\n\t\t\tthis.context.put(\"poll\", poll);\n\t\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"PostShow.messageTitle\") + \" \" + p.getSubject());\n\t\t\tthis.context.put(\"isModerator\", isModerator);\n\t\t\tthis.context.put(\"start\", this.request.getParameter(\"start\"));\n\t\t\tthis.context.put(\"htmlAllowed\", SecurityRepository.canAccess(SecurityConstants.PERM_HTML_DISABLED, \n\t\t\t\t\tInteger.toString(topic.getForumId())));\n\t\t\tthis.context.put(\"canCreateStickyOrAnnouncementTopics\",\n\t\t\t\t\tSecurityRepository.canAccess(SecurityConstants.PERM_CREATE_STICKY_ANNOUNCEMENT_TOPICS));\n\t\t\tthis.context.put(\"canCreatePolls\",\n\t\t\t\t\tSecurityRepository.canAccess(SecurityConstants.PERM_CREATE_POLL));\n\t\t}\n\n\t\tUserDAO udao = DataAccessDriver.getInstance().newUserDAO();\n\t\tUser u = udao.selectById(userId);\n\t\tViewCommon.prepareUserSignature(u);\n\n\t\tif (preview) {\n\t\t\tu.setNotifyOnMessagesEnabled(this.request.getParameter(\"notify\") != null);\n\t\t\t\n\t\t\tif (u.getId() != p.getUserId()) {\n\t\t\t\t// Probably a moderator is editing the message\n\t\t\t\tUser previewUser = udao.selectById(p.getUserId());\n\t\t\t\tViewCommon.prepareUserSignature(previewUser);\n\t\t\t\tthis.context.put(\"previewUser\", previewUser);\n\t\t\t}\n\t\t}\n\n\t\tthis.context.put(\"user\", u);\n\t}\n\t\n\tpublic void quote()\n\t{\n\t\tPostDAO pm = DataAccessDriver.getInstance().newPostDAO();\n\t\tPost p = pm.selectById(this.request.getIntParameter(\"post_id\"));\n\t\t\n\t\tif (p.getId() == 0) {\n\t\t\tthis.postNotFound();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (p.isModerationNeeded()) {\n\t\t\tthis.notModeratedYet();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.anonymousPost(p.getForumId())) {\n\t\t\treturn;\n\t\t}\n\n\t\tTopic topic = TopicRepository.getTopic(new Topic(p.getTopicId()));\n\t\t\n\t\tif (topic == null) {\n\t\t\ttopic = DataAccessDriver.getInstance().newTopicDAO().selectRaw(p.getTopicId());\n\t\t}\n\n\t\tif (!TopicsCommon.isTopicAccessible(topic.getForumId())) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (topic.getStatus() == Topic.STATUS_LOCKED) {\n\t\t\tthis.topicLocked();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.setTemplateName(TemplateKeys.POSTS_QUOTE);\n\n\t\tthis.context.put(\"forum\", ForumRepository.getForum(p.getForumId()));\n\t\tthis.context.put(\"action\", \"insertSave\");\n\t\tthis.context.put(\"post\", p);\n\n\t\tUserDAO um = DataAccessDriver.getInstance().newUserDAO();\n\t\tUser u = um.selectById(p.getUserId());\n\n\t\tint userId = SessionFacade.getUserSession().getUserId();\n\t\t\n\t\tthis.context.put(\"attachmentsEnabled\", SecurityRepository.canAccess(\n\t\t\tSecurityConstants.PERM_ATTACHMENTS_ENABLED, Integer.toString(topic.getForumId())));\n\t\t\n\t\tQuotaLimit ql = new AttachmentCommon(this.request, topic.getForumId()).getQuotaLimit(userId);\n\t\tthis.context.put(\"maxAttachmentsSize\", new Long(ql != null ? ql.getSizeInBytes() : 1));\n\t\t\n\t\tthis.context.put(\"moderationLoggingEnabled\", SystemGlobals.getBoolValue(ConfigKeys.MODERATION_LOGGING_ENABLED));\n\t\tthis.context.put(\"maxAttachments\", SystemGlobals.getValue(ConfigKeys.ATTACHMENTS_MAX_POST));\n\t\tthis.context.put(\"isNewPost\", true);\n\t\tthis.context.put(\"topic\", topic);\n\t\tthis.context.put(\"quote\", \"true\");\n\t\tthis.context.put(\"quoteUser\", u.getUsername());\n\t\tthis.context.put(\"setType\", false);\n\t\tthis.context.put(\"htmlAllowed\", SecurityRepository.canAccess(SecurityConstants.PERM_HTML_DISABLED, \n\t\t\tInteger.toString(topic.getForumId())));\n\t\tthis.context.put(\"start\", this.request.getParameter(\"start\"));\n\t\tthis.context.put(\"user\", DataAccessDriver.getInstance().newUserDAO().selectById(userId));\n\t\tthis.context.put(\"pageTitle\", I18n.getMessage(\"PostForm.reply\") + \" \" + topic.getTitle());\n\t\tthis.context.put(\"smilies\", SmiliesRepository.getSmilies());\n\t\t\n\t\tboolean needCaptcha = SystemGlobals.getBoolValue(ConfigKeys.CAPTCHA_POSTS);\n\t\t\n\t\tif (needCaptcha) {\n\t\t\tSessionFacade.getUserSession().createNewCaptcha();\n\t\t}\n\t\t\n\t\tthis.context.put(\"needCaptcha\", needCaptcha);\n\t}\n\n\tpublic void editSave()\n\t{\n\t\tPostDAO postDao = DataAccessDriver.getInstance().newPostDAO();\n\t\tPollDAO pollDao = DataAccessDriver.getInstance().newPollDAO();\n\t\tTopicDAO topicDao = DataAccessDriver.getInstance().newTopicDAO();\n\t\t\n\t\tPost post = postDao.selectById(this.request.getIntParameter(\"post_id\"));\n\t\t\n\t\tif (!PostCommon.canEditPost(post)) {\n\t\t\tthis.cannotEdit();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tboolean isModerator = SecurityRepository.canAccess(SecurityConstants.PERM_MODERATION_POST_EDIT);\n\t\t\n\t\tString originalMessage = post.getText();\n\t\t\n\t\tpost = PostCommon.fillPostFromRequest(post, true);\n\n\t\t// The user wants to preview the message before posting it?\n\t\tif (\"1\".equals(this.request.getParameter(\"preview\"))) {\n\t\t\tthis.context.put(\"preview\", true);\n\n\t\t\tPost postPreview = new Post(post);\n\t\t\tthis.context.put(\"postPreview\", PostCommon.preparePostForDisplay(postPreview));\n\n\t\t\tthis.edit(true, post);\n\t\t}\n\t\telse {\n\t\t\tAttachmentCommon attachments = new AttachmentCommon(this.request, post.getForumId());\n\t\t\t\n\t\t\ttry {\n\t\t\t\tattachments.preProcess();\n\t\t\t}\n\t\t\tcatch (AttachmentException e) {\n\t\t\t\tJForumExecutionContext.enableRollback();\n\t\t\t\tpost.setText(this.request.getParameter(\"message\"));\n\t\t\t\tthis.context.put(\"errorMessage\", e.getMessage());\n\t\t\t\tthis.context.put(\"post\", post);\n\t\t\t\tthis.edit(false, post);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tTopic t = TopicRepository.getTopic(new Topic(post.getTopicId()));\n\t\t\t\n\t\t\tif (t == null) {\n\t\t\t\tt = topicDao.selectById(post.getTopicId());\n\t\t\t}\n\n\t\t\tif (!TopicsCommon.isTopicAccessible(t.getForumId())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (t.getStatus() == Topic.STATUS_LOCKED\n\t\t\t\t\t&& !SecurityRepository.canAccess(SecurityConstants.PERM_MODERATION_POST_EDIT)) {\n\t\t\t\tthis.topicLocked();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpostDao.update(post);\n\t\t\t\n\t\t\t// Attachments\n\t\t\tattachments.editAttachments(post.getId(), post.getForumId());\n\t\t\tattachments.insertAttachments(post);\n\n\t\t\t// The first message (the one which originated the topic) was changed\n\t\t\tif (t.getFirstPostId() == post.getId()) {\n\t\t\t\tt.setTitle(post.getSubject());\n\t\t\t\t\n\t\t\t\tint newType = this.request.getIntParameter(\"topic_type\");\n\t\t\t\tboolean changeType = SecurityRepository.canAccess(SecurityConstants.PERM_CREATE_STICKY_ANNOUNCEMENT_TOPICS)\n\t\t\t\t\t&& newType != t.getType();\n\t\t\t\t\n\t\t\t\tif (changeType) {\n\t\t\t\t\tt.setType(newType);\n\t\t\t\t}\n\n\t\t\t\t// Poll\n\t\t\t\tPoll poll = PollCommon.fillPollFromRequest();\n\t\t\t\t\n\t\t\t\tif (poll != null && !t.isVote()) {\n\t\t\t\t\t// They added a poll\n\t\t\t\t\tpoll.setTopicId(t.getId());\n\t\t\t\t\t\n\t\t\t\t\tif (!this.ensurePollMinimumOptions(post, poll)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpollDao.addNew(poll);\n\t\t\t\t\tt.setVoteId(poll.getId());\n\n\t\t\t\t} \n\t\t\t\telse if (poll != null) {\n\t\t\t\t\tif (!this.ensurePollMinimumOptions(post, poll)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// They edited the poll in the topic\n\t\t\t\t\tPoll existing = pollDao.selectById(t.getVoteId());\n\t\t\t\t\tPollChanges changes = new PollChanges(existing, poll);\n\t\t\t\t\t\n\t\t\t\t\tif (changes.hasChanges()) {\n\t\t\t\t\t\tpoll.setId(existing.getId());\n\t\t\t\t\t\tpoll.setChanges(changes);\n\t\t\t\t\t\tpollDao.update(poll);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} \n\t\t\t\telse if (t.isVote()) {\n\t\t\t\t\t// They deleted the poll from the topic\n\t\t\t\t\tpollDao.delete(t.getVoteId());\n\t\t\t\t\tt.setVoteId(0);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttopicDao.update(t);\n\t\t\t\t\n\t\t\t\tif (changeType) {\n\t\t\t\t\tTopicRepository.addTopic(t);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tTopicRepository.updateTopic(t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (SystemGlobals.getBoolValue(ConfigKeys.MODERATION_LOGGING_ENABLED)\n\t\t\t\t\t&& isModerator && post.getUserId() != SessionFacade.getUserSession().getUserId()) {\n\t\t\t\tModerationHelper helper = new ModerationHelper();\n\t\t\t\tthis.request.addParameter(\"log_original_message\", originalMessage);\n\t\t\t\tModerationLog log = helper.buildModerationLogFromRequest();\n\t\t\t\tlog.getPosterUser().setId(post.getUserId());\n\t\t\t\thelper.saveModerationLog(log);\n\t\t\t}\n\n\t\t\tif (this.request.getParameter(\"notify\") == null) {\n\t\t\t\ttopicDao.removeSubscription(post.getTopicId(), SessionFacade.getUserSession().getUserId());\n\t\t\t}\n\n\t\t\tString path = this.request.getContextPath() + \"/posts/list/\";\n\t\t\tint start = ViewCommon.getStartPage();\n\t\t\t\n\t\t\tif (start > 0) {\n\t\t\t\tpath += start + \"/\";\n\t\t\t}",
  "metadata": {
    "fileId": "PostAction_java_chunk_4",
    "fileName": "PostAction.java",
    "filePath": "src/net/jforum/view/forum/PostAction.java"
  }
}